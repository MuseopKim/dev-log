{"expireTime":9007200904345730000,"key":"transformer-remark-markdown-html-ast-fd537305be1a8c8c16f122911786b2f2-gatsby-remark-imagesgatsby-remark-prismjsgatsby-remark-emojisgatsby-remark-autolink-headersgatsby-remark-katexgatsby-remark-external-linksgatsby-remark-copy-linked-files-","val":{"type":"root","children":[{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"JVM(Java Virtual Machine)는 피지컬 머신에서 자바 코드를 컴파일하고 실행하기 위한 Java 생태계에서의 필수 요소라 할 수 있다. ","position":{"start":{"line":1,"column":3,"offset":2},"end":{"line":1,"column":87,"offset":86}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":87,"offset":86}}},{"type":"text","value":"\n"}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":87,"offset":86}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"초기의 JVM은 Java 플랫폼만을 지원하도록 설계 되었지만, 현재는 Kotlin, Groovy, Scala와 같은 다양한 언어를 지원하고 있다. 이렇게 JVM이 지원하는 이들을 통틀어 JVM languages라고도 한다.","position":{"start":{"line":3,"column":1,"offset":88},"end":{"line":3,"column":125,"offset":212}}}],"position":{"start":{"line":3,"column":1,"offset":88},"end":{"line":3,"column":125,"offset":212}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{"id":"jvm-java-virtual-machine","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#jvm-java-virtual-machine","aria-label":"jvm java virtual machine permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"JVM (Java Virtual Machine)","position":{"start":{"line":5,"column":3,"offset":216},"end":{"line":5,"column":29,"offset":242}}}],"position":{"start":{"line":5,"column":1,"offset":214},"end":{"line":5,"column":29,"offset":242}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"  이름에서 살펴볼 수 있 듯 JVM을 가상 머신(Virtual Machine)이라 부르고 있다. 그렇다면 가상 머신이란 무엇일까?","position":{"start":{"line":7,"column":1,"offset":244},"end":{"line":7,"column":74,"offset":317}}}],"position":{"start":{"line":7,"column":1,"offset":244},"end":{"line":7,"column":74,"offset":317}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   가상머신이란 하나의 물리적인 하드웨어 위에서 격리되어 구동되는 가상 환경이라 할 수 있다.","position":{"start":{"line":9,"column":1,"offset":319},"end":{"line":9,"column":54,"offset":372}}}],"position":{"start":{"line":9,"column":1,"offset":319},"end":{"line":9,"column":54,"offset":372}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"[VM 이미지]","position":{"start":{"line":11,"column":2,"offset":375},"end":{"line":11,"column":8,"offset":381}}}],"position":{"start":{"line":11,"column":1,"offset":374},"end":{"line":11,"column":9,"offset":382}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"하나의 가상머신은 하이퍼바이저라는 소프트웨어가 설치된 하나의 호스트 머신 위에서 각각 격리되어 CPU, 메모리, 스토리지, 네트워크 인터페이스를 갖추고 있다. 이러한 System Virtual Machine은 격리된 환경에서 기능적으로 OS가 제공하는 모든 기능들을 제공한다.","position":{"start":{"line":13,"column":1,"offset":384},"end":{"line":13,"column":155,"offset":538}}}],"position":{"start":{"line":13,"column":1,"offset":384},"end":{"line":13,"column":155,"offset":538}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   JVM은 OS로부터 메모리 공간을 할당 받아 해당 메모리를 자체적으로 관리하며, 독립적인 런타임 환경에서 Java 클래스 파일을 실행하는 Process Virtual Machine이라 할 수 있다.","position":{"start":{"line":15,"column":1,"offset":540},"end":{"line":15,"column":114,"offset":653}}}],"position":{"start":{"line":15,"column":1,"offset":540},"end":{"line":15,"column":114,"offset":653}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{"id":"jvm의-구성요소","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#jvm%EC%9D%98-%EA%B5%AC%EC%84%B1%EC%9A%94%EC%86%8C","aria-label":"jvm의 구성요소 permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"JVM의 구성요소","position":{"start":{"line":17,"column":3,"offset":657},"end":{"line":17,"column":12,"offset":666}}}],"position":{"start":{"line":17,"column":1,"offset":655},"end":{"line":17,"column":12,"offset":666}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   컴파일 이후 JVM이 Java Application을 실행하는 과정을 간략히 설명하면 다음과 같다.","position":{"start":{"line":19,"column":1,"offset":668},"end":{"line":19,"column":59,"offset":726}}}],"position":{"start":{"line":19,"column":1,"offset":668},"end":{"line":19,"column":59,"offset":726}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"컴파일 된 class 파일을 ","position":{"start":{"line":21,"column":3,"offset":730},"end":{"line":21,"column":19,"offset":746}}},{"type":"raw","value":"<code class=\"language-text\">Class Loader</code>","position":{"start":{"line":21,"column":19,"offset":746},"end":{"line":21,"column":33,"offset":760}}},{"type":"text","value":"가 ","position":{"start":{"line":21,"column":33,"offset":760},"end":{"line":21,"column":35,"offset":762}}},{"type":"raw","value":"<code class=\"language-text\">Runtime Data Area</code>","position":{"start":{"line":21,"column":35,"offset":762},"end":{"line":21,"column":54,"offset":781}}},{"type":"text","value":"에 로드 한 뒤, 적재한 바이트코드를 ","position":{"start":{"line":21,"column":54,"offset":781},"end":{"line":21,"column":75,"offset":802}}},{"type":"raw","value":"<code class=\"language-text\">Execution Engine</code>","position":{"start":{"line":21,"column":75,"offset":802},"end":{"line":21,"column":93,"offset":820}}},{"type":"text","value":"으로 실행한다. 실행 도 중 Heap 영역에 로드 되었지만 더 이상 참조되지 않는 objects 들을 ","position":{"start":{"line":21,"column":93,"offset":820},"end":{"line":21,"column":150,"offset":877}}},{"type":"raw","value":"<code class=\"language-text\">Garbage Collector</code>","position":{"start":{"line":21,"column":150,"offset":877},"end":{"line":21,"column":169,"offset":896}}},{"type":"text","value":" 가 정리한다.","position":{"start":{"line":21,"column":169,"offset":896},"end":{"line":21,"column":177,"offset":904}}}],"position":{"start":{"line":21,"column":3,"offset":730},"end":{"line":21,"column":177,"offset":904}}},{"type":"text","value":"\n"}],"position":{"start":{"line":21,"column":1,"offset":728},"end":{"line":22,"column":3,"offset":907}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   생략된 것이 많은 매우 간략한 내용이지만, 애플리케이션이 실행된 이후 종료되기까지 앞서 언급한 네 가지 JVM 컴포넌트들이 이런 유기적인 상호작용을 하며 동작한다.","position":{"start":{"line":24,"column":1,"offset":909},"end":{"line":24,"column":95,"offset":1003}}}],"position":{"start":{"line":24,"column":1,"offset":909},"end":{"line":24,"column":95,"offset":1003}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   JVM의 핵심 컴포넌트들은 다음과 같은 구조를 이룬다.","position":{"start":{"line":26,"column":1,"offset":1005},"end":{"line":26,"column":34,"offset":1038}}}],"position":{"start":{"line":26,"column":1,"offset":1005},"end":{"line":26,"column":34,"offset":1038}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"[JVM의 구조 이미지]","position":{"start":{"line":28,"column":2,"offset":1041},"end":{"line":28,"column":13,"offset":1052}}}],"position":{"start":{"line":28,"column":1,"offset":1040},"end":{"line":28,"column":14,"offset":1053}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   JVM을 구성하는 핵심 컴포넌트들을 정확하게 이해하는 것이 곧 JVM을 이해하는 것이라 할 수 있다. 이제부터 각 컴포넌트들을 자세히 학습 해보면서 JVM에 대한 이해도를 더욱 높여보고자 한다.","position":{"start":{"line":30,"column":1,"offset":1055},"end":{"line":30,"column":112,"offset":1166}}}],"position":{"start":{"line":30,"column":1,"offset":1055},"end":{"line":30,"column":112,"offset":1166}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"class-loader","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#class-loader","aria-label":"class loader permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Class Loader","position":{"start":{"line":32,"column":4,"offset":1171},"end":{"line":32,"column":16,"offset":1183}}}],"position":{"start":{"line":32,"column":1,"offset":1168},"end":{"line":32,"column":16,"offset":1183}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   클래스 로더는 컴파일 된 바이트 코드(","position":{"start":{"line":34,"column":1,"offset":1185},"end":{"line":34,"column":25,"offset":1209}}},{"type":"raw","value":"<code class=\"language-text\">.class</code>","position":{"start":{"line":34,"column":25,"offset":1209},"end":{"line":34,"column":33,"offset":1217}}},{"type":"text","value":" files)들을 ","position":{"start":{"line":34,"column":33,"offset":1217},"end":{"line":34,"column":43,"offset":1227}}},{"type":"raw","value":"<code class=\"language-text\">Runtime Data Area</code>","position":{"start":{"line":34,"column":43,"offset":1227},"end":{"line":34,"column":62,"offset":1246}}},{"type":"text","value":" 에 로드한다.","position":{"start":{"line":34,"column":62,"offset":1246},"end":{"line":34,"column":70,"offset":1254}}}],"position":{"start":{"line":34,"column":1,"offset":1185},"end":{"line":34,"column":70,"offset":1254}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"여기서 주의해야 할 것은, 모든 클래스 파일들을 이 시점에 로드하는 것이 아니라는 점이다. JVM의 기본 클래스 로딩 방식은 Lazy loading이다. ","position":{"start":{"line":36,"column":1,"offset":1256},"end":{"line":36,"column":87,"offset":1342}}},{"type":"raw","value":"<code class=\"language-text\">main()</code>","position":{"start":{"line":36,"column":87,"offset":1342},"end":{"line":36,"column":95,"offset":1350}}},{"type":"text","value":" 메소드가 위치한 클래스를 로드하고, 실행엔진으로 바이트 코드를 해석하며 필요할 때 마다 각 클래스를 메인 메모리에 적재하고 읽어들인다.","position":{"start":{"line":36,"column":95,"offset":1350},"end":{"line":36,"column":171,"offset":1426}}}],"position":{"start":{"line":36,"column":1,"offset":1256},"end":{"line":36,"column":171,"offset":1426}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   세부 구성을 살펴보면 다음과 같다.","position":{"start":{"line":38,"column":1,"offset":1428},"end":{"line":38,"column":23,"offset":1450}}}],"position":{"start":{"line":38,"column":1,"offset":1428},"end":{"line":38,"column":23,"offset":1450}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"[클래스 로더 이미지]","position":{"start":{"line":40,"column":2,"offset":1453},"end":{"line":40,"column":12,"offset":1463}}}],"position":{"start":{"line":40,"column":1,"offset":1452},"end":{"line":40,"column":13,"offset":1464}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   클래스 로더의 동작 메커니즘은 크게 ","position":{"start":{"line":42,"column":1,"offset":1466},"end":{"line":42,"column":24,"offset":1489}}},{"type":"raw","value":"<code class=\"language-text\">Loading</code>","position":{"start":{"line":42,"column":24,"offset":1489},"end":{"line":42,"column":33,"offset":1498}}},{"type":"text","value":", ","position":{"start":{"line":42,"column":33,"offset":1498},"end":{"line":42,"column":35,"offset":1500}}},{"type":"raw","value":"<code class=\"language-text\">Linking</code>","position":{"start":{"line":42,"column":35,"offset":1500},"end":{"line":42,"column":44,"offset":1509}}},{"type":"text","value":", ","position":{"start":{"line":42,"column":44,"offset":1509},"end":{"line":42,"column":46,"offset":1511}}},{"type":"raw","value":"<code class=\"language-text\">Initialization</code>","position":{"start":{"line":42,"column":46,"offset":1511},"end":{"line":42,"column":62,"offset":1527}}},{"type":"text","value":"  세 단계의 절차로 수행된다. 각 과정들을 하나씩 살펴보자","position":{"start":{"line":42,"column":62,"offset":1527},"end":{"line":42,"column":95,"offset":1560}}}],"position":{"start":{"line":42,"column":1,"offset":1466},"end":{"line":42,"column":95,"offset":1560}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"loading","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#loading","aria-label":"loading permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Loading","position":{"start":{"line":44,"column":5,"offset":1566},"end":{"line":44,"column":12,"offset":1573}}}],"position":{"start":{"line":44,"column":1,"offset":1562},"end":{"line":44,"column":12,"offset":1573}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   클래스 로더가 바이트 코드를 JVM에 로드하는 과정이다. ","position":{"start":{"line":46,"column":1,"offset":1575},"end":{"line":46,"column":36,"offset":1610}}},{"type":"raw","value":"<code class=\"language-text\">java.lang</code>","position":{"start":{"line":46,"column":36,"offset":1610},"end":{"line":46,"column":47,"offset":1621}}},{"type":"text","value":", ","position":{"start":{"line":46,"column":47,"offset":1621},"end":{"line":46,"column":49,"offset":1623}}},{"type":"raw","value":"<code class=\"language-text\">java.util</code>","position":{"start":{"line":46,"column":49,"offset":1623},"end":{"line":46,"column":60,"offset":1634}}},{"type":"text","value":" 같은 Java의 스탠다드 패키지부터 라이브러리까지 각 바이트 코드마다 담당하는 클래스 로더가 다르다. 내부적으로 JVM이 ","position":{"start":{"line":46,"column":60,"offset":1634},"end":{"line":46,"column":129,"offset":1703}}},{"type":"raw","value":"<code class=\"language-text\">ClassLoader.loadClass()</code>","position":{"start":{"line":46,"column":129,"offset":1703},"end":{"line":46,"column":154,"offset":1728}}},{"type":"text","value":" 를 실행하여 메모리에 바이트 코드를 적재한다. ","position":{"start":{"line":46,"column":154,"offset":1728},"end":{"line":46,"column":181,"offset":1755}}}],"position":{"start":{"line":46,"column":1,"offset":1575},"end":{"line":46,"column":181,"offset":1755}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   Class Loader의 세부적인 계층 구성은 다음과 같다. ","position":{"start":{"line":48,"column":1,"offset":1757},"end":{"line":48,"column":38,"offset":1794}}}],"position":{"start":{"line":48,"column":1,"offset":1757},"end":{"line":48,"column":38,"offset":1794}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"[Class Loader 계층 구성 이미지]","position":{"start":{"line":50,"column":2,"offset":1797},"end":{"line":50,"column":24,"offset":1819}}}],"position":{"start":{"line":50,"column":1,"offset":1796},"end":{"line":50,"column":25,"offset":1820}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Boostrap Class Loader","position":{"start":{"line":52,"column":5,"offset":1826},"end":{"line":52,"column":26,"offset":1847}}}],"position":{"start":{"line":52,"column":3,"offset":1824},"end":{"line":52,"column":28,"offset":1849}}},{"type":"text","value":" : 모든 클래스 로더의 루트 레벨로써, ","position":{"start":{"line":52,"column":28,"offset":1849},"end":{"line":52,"column":51,"offset":1872}}},{"type":"raw","value":"<code class=\"language-text\">rt.jar</code>","position":{"start":{"line":52,"column":51,"offset":1872},"end":{"line":52,"column":59,"offset":1880}}},{"type":"text","value":"  파일에 위치하는 Java의 스탠다드 패키지들과 ","position":{"start":{"line":52,"column":59,"offset":1880},"end":{"line":52,"column":87,"offset":1908}}},{"type":"raw","value":"<code class=\"language-text\">$JAVA_HOME/jre/lib</code>","position":{"start":{"line":52,"column":87,"offset":1908},"end":{"line":52,"column":107,"offset":1928}}},{"type":"text","value":" 에 있는 코어 라이브러리들을 로드한다.","position":{"start":{"line":52,"column":107,"offset":1928},"end":{"line":52,"column":129,"offset":1950}}}],"position":{"start":{"line":52,"column":1,"offset":1822},"end":{"line":52,"column":129,"offset":1950}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Extention Class Loader :","position":{"start":{"line":53,"column":5,"offset":1955},"end":{"line":53,"column":29,"offset":1979}}}],"position":{"start":{"line":53,"column":3,"offset":1953},"end":{"line":53,"column":31,"offset":1981}}},{"type":"text","value":" ","position":{"start":{"line":53,"column":31,"offset":1981},"end":{"line":53,"column":32,"offset":1982}}},{"type":"raw","value":"<code class=\"language-text\">$JAVA_HOME/jre/lib/ext</code>","position":{"start":{"line":53,"column":32,"offset":1982},"end":{"line":53,"column":56,"offset":2006}}},{"type":"text","value":" 에 위치하는 extension Java 라이브러리들을 로드한다.","position":{"start":{"line":53,"column":56,"offset":2006},"end":{"line":53,"column":92,"offset":2042}}}],"position":{"start":{"line":53,"column":1,"offset":1951},"end":{"line":53,"column":92,"offset":2042}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Application Class Loader","position":{"start":{"line":54,"column":5,"offset":2047},"end":{"line":54,"column":29,"offset":2071}}}],"position":{"start":{"line":54,"column":3,"offset":2045},"end":{"line":54,"column":31,"offset":2073}}},{"type":"text","value":" : ","position":{"start":{"line":54,"column":31,"offset":2073},"end":{"line":54,"column":34,"offset":2076}}},{"type":"raw","value":"<code class=\"language-text\">classpath</code>","position":{"start":{"line":54,"column":34,"offset":2076},"end":{"line":54,"column":45,"offset":2087}}},{"type":"text","value":" 에 위치한 클래스들을 찾아서 로드한다. 즉, 라이브러리로가 아닌 개발자가 작성한 소스파일로부터 생성된 바이트 코드들을 JVM에 적재한다.","position":{"start":{"line":54,"column":45,"offset":2087},"end":{"line":54,"column":122,"offset":2164}}}],"position":{"start":{"line":54,"column":3,"offset":2045},"end":{"line":54,"column":122,"offset":2164}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"상위 클래스 로더부터 클래스를 하나씩 찾아가는데, 최하단에 있는 클래스 로더까지 해당되는 클래스 파일을 찾지 못하면 ","position":{"start":{"line":56,"column":4,"offset":2169},"end":{"line":56,"column":69,"offset":2234}}},{"type":"raw","value":"<code class=\"language-text\">ClassNotFoundException</code>","position":{"start":{"line":56,"column":69,"offset":2234},"end":{"line":56,"column":93,"offset":2258}}},{"type":"text","value":" 예외가 발생한다. ","position":{"start":{"line":56,"column":93,"offset":2258},"end":{"line":56,"column":104,"offset":2269}}}],"position":{"start":{"line":56,"column":4,"offset":2169},"end":{"line":56,"column":104,"offset":2269}}},{"type":"text","value":"\n"}],"position":{"start":{"line":54,"column":1,"offset":2043},"end":{"line":56,"column":104,"offset":2269}}},{"type":"text","value":"\n"}],"position":{"start":{"line":52,"column":1,"offset":1822},"end":{"line":56,"column":104,"offset":2269}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"linking","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#linking","aria-label":"linking permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Linking","position":{"start":{"line":58,"column":5,"offset":2275},"end":{"line":58,"column":12,"offset":2282}}}],"position":{"start":{"line":58,"column":1,"offset":2271},"end":{"line":58,"column":12,"offset":2282}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   클래스 파일이 메모리에 적재 된 이후 의존하는 클래스 파일들을 서로 연결(Link)하고 검증하는 과정이다.","position":{"start":{"line":60,"column":1,"offset":2284},"end":{"line":60,"column":63,"offset":2346}}}],"position":{"start":{"line":60,"column":1,"offset":2284},"end":{"line":60,"column":63,"offset":2346}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Verification","position":{"start":{"line":62,"column":5,"offset":2352},"end":{"line":62,"column":17,"offset":2364}}}],"position":{"start":{"line":62,"column":3,"offset":2350},"end":{"line":62,"column":19,"offset":2366}}},{"type":"text","value":" : ****클래스 파일의 유효성을 검증한다. 유효하지 않은 클래스 파일의 경우 ","position":{"start":{"line":62,"column":19,"offset":2366},"end":{"line":62,"column":64,"offset":2411}}},{"type":"raw","value":"<code class=\"language-text\">VerifyException</code>","position":{"start":{"line":62,"column":64,"offset":2411},"end":{"line":62,"column":81,"offset":2428}}},{"type":"text","value":" 이 발생한다.","position":{"start":{"line":62,"column":81,"offset":2428},"end":{"line":62,"column":89,"offset":2436}}}],"position":{"start":{"line":62,"column":1,"offset":2348},"end":{"line":62,"column":89,"offset":2436}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Preparation","position":{"start":{"line":63,"column":5,"offset":2441},"end":{"line":63,"column":16,"offset":2452}}}],"position":{"start":{"line":63,"column":3,"offset":2439},"end":{"line":63,"column":18,"offset":2454}}},{"type":"text","value":" : 유효성 검증을 통과한 클래스 파일들에 대하여 static 필드 및 클래스를 기본 값과 함께 초기화한다.","position":{"start":{"line":63,"column":18,"offset":2454},"end":{"line":63,"column":78,"offset":2514}}}],"position":{"start":{"line":63,"column":1,"offset":2437},"end":{"line":63,"column":78,"offset":2514}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Resolution","position":{"start":{"line":64,"column":5,"offset":2519},"end":{"line":64,"column":15,"offset":2529}}}],"position":{"start":{"line":64,"column":3,"offset":2517},"end":{"line":64,"column":17,"offset":2531}}},{"type":"text","value":" : Symbolic Reference 값들을 클래스, 상수, 메소드 등 Runtime Constant Pool에 있는 실제 메모리 참조 값(Actual Reference)으로 대체한다.","position":{"start":{"line":64,"column":17,"offset":2531},"end":{"line":64,"column":121,"offset":2635}}}],"position":{"start":{"line":64,"column":1,"offset":2515},"end":{"line":64,"column":121,"offset":2635}}},{"type":"text","value":"\n"}],"position":{"start":{"line":62,"column":1,"offset":2348},"end":{"line":64,"column":121,"offset":2635}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"initialization","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#initialization","aria-label":"initialization permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Initialization","position":{"start":{"line":66,"column":7,"offset":2643},"end":{"line":66,"column":21,"offset":2657}}}],"position":{"start":{"line":66,"column":5,"offset":2641},"end":{"line":66,"column":23,"offset":2659}}}],"position":{"start":{"line":66,"column":1,"offset":2637},"end":{"line":66,"column":23,"offset":2659}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   constructor, static  ****block 실행 등 초기화 과정이 수행된다. 클래스 로딩의 마지막 과정이라 할 수 있다. JVM은 멀티 쓰레드 환경에서 구동되기 때문에 Initialization 과정에서도 동시성 이슈가 발생할 여지가 있으므로 주의 해야한다.","position":{"start":{"line":68,"column":1,"offset":2661},"end":{"line":68,"column":155,"offset":2815}}}],"position":{"start":{"line":68,"column":1,"offset":2661},"end":{"line":68,"column":155,"offset":2815}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"runtime-data-area","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#runtime-data-area","aria-label":"runtime data area permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Runtime Data Area","position":{"start":{"line":70,"column":4,"offset":2820},"end":{"line":70,"column":21,"offset":2837}}}],"position":{"start":{"line":70,"column":1,"offset":2817},"end":{"line":70,"column":21,"offset":2837}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   앞서 살펴본 것과 같이 클래스 파일들은 Class Loader에 의해 Runtime Data Area에 적재 된다. Runtime Data Area는 5개 영역으로 나뉘어져 있는데, 애플리케이션 실행 도 중 데이터의 타입에 따라 ","position":{"start":{"line":72,"column":1,"offset":2839},"end":{"line":72,"column":132,"offset":2970}}},{"type":"raw","value":"<code class=\"language-text\">Method Area</code>","position":{"start":{"line":72,"column":132,"offset":2970},"end":{"line":72,"column":145,"offset":2983}}},{"type":"text","value":", ","position":{"start":{"line":72,"column":145,"offset":2983},"end":{"line":72,"column":147,"offset":2985}}},{"type":"raw","value":"<code class=\"language-text\">Heap Area</code>","position":{"start":{"line":72,"column":147,"offset":2985},"end":{"line":72,"column":158,"offset":2996}}},{"type":"text","value":", ","position":{"start":{"line":72,"column":158,"offset":2996},"end":{"line":72,"column":160,"offset":2998}}},{"type":"raw","value":"<code class=\"language-text\">Stack Area</code>","position":{"start":{"line":72,"column":160,"offset":2998},"end":{"line":72,"column":172,"offset":3010}}},{"type":"text","value":", ","position":{"start":{"line":72,"column":172,"offset":3010},"end":{"line":72,"column":174,"offset":3012}}},{"type":"raw","value":"<code class=\"language-text\">PC Register</code>","position":{"start":{"line":72,"column":174,"offset":3012},"end":{"line":72,"column":187,"offset":3025}}},{"type":"text","value":", ","position":{"start":{"line":72,"column":187,"offset":3025},"end":{"line":72,"column":189,"offset":3027}}},{"type":"raw","value":"<code class=\"language-text\">Native Method Stack</code>","position":{"start":{"line":72,"column":189,"offset":3027},"end":{"line":72,"column":210,"offset":3048}}},{"type":"text","value":" 영역에 저장되고 참조된다.","position":{"start":{"line":72,"column":210,"offset":3048},"end":{"line":72,"column":225,"offset":3063}}}],"position":{"start":{"line":72,"column":1,"offset":2839},"end":{"line":72,"column":225,"offset":3063}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"[이미지]","position":{"start":{"line":74,"column":2,"offset":3066},"end":{"line":74,"column":5,"offset":3069}}}],"position":{"start":{"line":74,"column":1,"offset":3065},"end":{"line":74,"column":6,"offset":3070}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"method-area","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#method-area","aria-label":"method area permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Method Area","position":{"start":{"line":76,"column":5,"offset":3076},"end":{"line":76,"column":16,"offset":3087}}}],"position":{"start":{"line":76,"column":1,"offset":3072},"end":{"line":76,"column":16,"offset":3087}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   실행 시점에 사용되는 Constant Pool, field, method, constructors 같은 데이터들이 위치한다. 만약 가용 공간이 부족하다면 ","position":{"start":{"line":78,"column":1,"offset":3089},"end":{"line":78,"column":90,"offset":3178}}},{"type":"raw","value":"<code class=\"language-text\">OutOfMemorryError</code>","position":{"start":{"line":78,"column":90,"offset":3178},"end":{"line":78,"column":109,"offset":3197}}},{"type":"text","value":" 가 발생한다. JVM 당 하나의 ","position":{"start":{"line":78,"column":109,"offset":3197},"end":{"line":78,"column":128,"offset":3216}}},{"type":"raw","value":"<code class=\"language-text\">Method Area</code>","position":{"start":{"line":78,"column":128,"offset":3216},"end":{"line":78,"column":141,"offset":3229}}},{"type":"text","value":" 를 가진다.","position":{"start":{"line":78,"column":141,"offset":3229},"end":{"line":78,"column":148,"offset":3236}}}],"position":{"start":{"line":78,"column":1,"offset":3089},"end":{"line":78,"column":148,"offset":3236}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"heap-area","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#heap-area","aria-label":"heap area permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Heap Area","position":{"start":{"line":80,"column":5,"offset":3242},"end":{"line":80,"column":14,"offset":3251}}}],"position":{"start":{"line":80,"column":1,"offset":3238},"end":{"line":80,"column":14,"offset":3251}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   객체 및 인스턴스 변수, 배열 등과 같은 타입의 값들이 위치한다.","position":{"start":{"line":82,"column":1,"offset":3253},"end":{"line":82,"column":40,"offset":3292}}}],"position":{"start":{"line":82,"column":1,"offset":3253},"end":{"line":82,"column":40,"offset":3292}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">Example</span> example <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Example</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":84,"column":1,"offset":3294},"end":{"line":86,"column":4,"offset":3338}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   예를 들어 위와 같은 코드를 동작 시키면 ","position":{"start":{"line":88,"column":1,"offset":3340},"end":{"line":88,"column":27,"offset":3366}}},{"type":"raw","value":"<code class=\"language-text\">Example</code>","position":{"start":{"line":88,"column":27,"offset":3366},"end":{"line":88,"column":36,"offset":3375}}},{"type":"text","value":" 인스턴스를 생성한 뒤 Heap Area에 배치한다. 메소드 영역과 마찬가지로 힙 영역 역시 JVM 당 하나의 공간만을 갖게 된다.","position":{"start":{"line":88,"column":36,"offset":3375},"end":{"line":88,"column":109,"offset":3448}}}],"position":{"start":{"line":88,"column":1,"offset":3340},"end":{"line":88,"column":109,"offset":3448}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"stack-area","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#stack-area","aria-label":"stack area permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Stack Area","position":{"start":{"line":90,"column":5,"offset":3454},"end":{"line":90,"column":15,"offset":3464}}}],"position":{"start":{"line":90,"column":1,"offset":3450},"end":{"line":90,"column":15,"offset":3464}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   특정 메소드가 호출 되고 실행되면서 사용되는 지역 변수(Local Variables), 중간 연산 결과(Operand Stack) 값이 갱신되며 저장되는 영역이다. 메소드 호출 시점마다 ","position":{"start":{"line":92,"column":1,"offset":3466},"end":{"line":92,"column":108,"offset":3573}}},{"type":"raw","value":"<code class=\"language-text\">Stack Frame</code>","position":{"start":{"line":92,"column":108,"offset":3573},"end":{"line":92,"column":121,"offset":3586}}},{"type":"text","value":"이라는 하나의 단위가 스택에 생성되고, 해당 메소드가 종료되는 시점에 파괴된다.","position":{"start":{"line":92,"column":121,"offset":3586},"end":{"line":92,"column":165,"offset":3630}}}],"position":{"start":{"line":92,"column":1,"offset":3466},"end":{"line":92,"column":165,"offset":3630}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   스택 영역은 JVM에 의해 쓰레드가 생성될 때 마다 각 쓰레드에 하나씩 할당된다. 따라서 동시성 문제로부터 자유롭다.","position":{"start":{"line":94,"column":1,"offset":3632},"end":{"line":94,"column":69,"offset":3700}}}],"position":{"start":{"line":94,"column":1,"offset":3632},"end":{"line":94,"column":69,"offset":3700}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"program-counter-pc-registers","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#program-counter-pc-registers","aria-label":"program counter pc registers permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Program Counter (PC) Registers","position":{"start":{"line":96,"column":5,"offset":3706},"end":{"line":96,"column":35,"offset":3736}}}],"position":{"start":{"line":96,"column":1,"offset":3702},"end":{"line":96,"column":35,"offset":3736}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   현재 실행되고 있는 명령어의 주소 값이 저장되는 공간이다. PC Register는 현재 실행하고 있는 명령어의 실행이 끝나면 다음 명령어의 주소 값을 갱신한다. 각 쓰레드 마다 하나의 PC Register가 할당된다.","position":{"start":{"line":98,"column":1,"offset":3738},"end":{"line":98,"column":125,"offset":3862}}}],"position":{"start":{"line":98,"column":1,"offset":3738},"end":{"line":98,"column":125,"offset":3862}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"native-method-stacks","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#native-method-stacks","aria-label":"native method stacks permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Native Method Stacks","position":{"start":{"line":100,"column":5,"offset":3868},"end":{"line":100,"column":25,"offset":3888}}}],"position":{"start":{"line":100,"column":1,"offset":3864},"end":{"line":100,"column":25,"offset":3888}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   Java가 아닌 C, C++과 같은 언어로 작성 된 메소드(Native Method) 실행을 지원하는 영역. 스택 영역과 같이 각 쓰레드마다 하나의 공간이 할당된다.","position":{"start":{"line":102,"column":1,"offset":3890},"end":{"line":102,"column":96,"offset":3985}}}],"position":{"start":{"line":102,"column":1,"offset":3890},"end":{"line":102,"column":96,"offset":3985}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"execution-engine","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#execution-engine","aria-label":"execution engine permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Execution Engine","position":{"start":{"line":104,"column":4,"offset":3990},"end":{"line":104,"column":20,"offset":4006}}}],"position":{"start":{"line":104,"column":1,"offset":3987},"end":{"line":104,"column":20,"offset":4006}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"[이미지]","position":{"start":{"line":106,"column":2,"offset":4009},"end":{"line":106,"column":5,"offset":4012}}}],"position":{"start":{"line":106,"column":1,"offset":4008},"end":{"line":106,"column":6,"offset":4013}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   Runtime Data Area에 각 바이트코드가 로드되면 ","position":{"start":{"line":108,"column":1,"offset":4015},"end":{"line":108,"column":37,"offset":4051}}},{"type":"raw","value":"<code class=\"language-text\">Execution Engine</code>","position":{"start":{"line":108,"column":37,"offset":4051},"end":{"line":108,"column":55,"offset":4069}}},{"type":"text","value":"이 이들을 실행하는데, Java compiler에 의해 생성된 클래스 파일들은 머신이 읽을 수 있는 기계어가 아닌 바이트 코드이다. 따라서 이를 한번 더 변환하는 과정이 필요하다.","position":{"start":{"line":108,"column":55,"offset":4069},"end":{"line":108,"column":155,"offset":4169}}}],"position":{"start":{"line":108,"column":1,"offset":4015},"end":{"line":108,"column":155,"offset":4169}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"  JVM은 효율성을 위해 두 가지 방법을 혼합하여 이를 실현한다. 기본 전략으로는 JavaScript, Python와 같은 언어 처럼 ","position":{"start":{"line":110,"column":1,"offset":4171},"end":{"line":110,"column":77,"offset":4247}}},{"type":"raw","value":"<code class=\"language-text\">Interpreter</code>","position":{"start":{"line":110,"column":77,"offset":4247},"end":{"line":110,"column":90,"offset":4260}}},{"type":"text","value":"가 한 라인씩 바이트 코드를 해석하는 방식을 사용하고, 만약 반복되는 바이트 코드가 발견되면 ","position":{"start":{"line":110,"column":90,"offset":4260},"end":{"line":110,"column":142,"offset":4312}}},{"type":"raw","value":"<code class=\"language-text\">JIT Compiler</code>","position":{"start":{"line":110,"column":142,"offset":4312},"end":{"line":110,"column":156,"offset":4326}}},{"type":"text","value":" 를 통해 이들을 한번에 변환하기도 한다.","position":{"start":{"line":110,"column":156,"offset":4326},"end":{"line":110,"column":179,"offset":4349}}}],"position":{"start":{"line":110,"column":1,"offset":4171},"end":{"line":110,"column":179,"offset":4349}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"interpreter","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#interpreter","aria-label":"interpreter permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Interpreter","position":{"start":{"line":112,"column":5,"offset":4355},"end":{"line":112,"column":16,"offset":4366}}}],"position":{"start":{"line":112,"column":1,"offset":4351},"end":{"line":112,"column":16,"offset":4366}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   바이트 코드를 한 줄씩 읽고 실행한다. 매 라인마다 이러한 동작을 반복하기 때문에, 코드 구성에 따라 통으로 컴파일하는 방식 보다 느릴 수 있다.","position":{"start":{"line":114,"column":1,"offset":4368},"end":{"line":114,"column":85,"offset":4452}}}],"position":{"start":{"line":114,"column":1,"offset":4368},"end":{"line":114,"column":85,"offset":4452}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   아래처럼 값을 누적하는 코드와 같이, 같은 메소드의 반복이 자주 등장하는 코드의 경우 이를 통으로 변환하는 것이 더 유리할 수 있다.","position":{"start":{"line":116,"column":1,"offset":4454},"end":{"line":116,"column":78,"offset":4531}}}],"position":{"start":{"line":116,"column":1,"offset":4454},"end":{"line":116,"column":78,"offset":4531}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">int</span> total <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   total <span class=\"token operator\">+=</span> i<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":118,"column":1,"offset":4533},"end":{"line":123,"column":4,"offset":4608}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"jit-compiler","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#jit-compiler","aria-label":"jit compiler permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"JIT Compiler","position":{"start":{"line":125,"column":5,"offset":4614},"end":{"line":125,"column":17,"offset":4626}}}],"position":{"start":{"line":125,"column":1,"offset":4610},"end":{"line":125,"column":17,"offset":4626}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   앞서 설명한 것과 같이, 반복되는 코드가 빈번한 경우, 인터프리터 방식이 성능상 비효율적일 수 있다. 실행 엔진은 ","position":{"start":{"line":127,"column":1,"offset":4628},"end":{"line":127,"column":68,"offset":4695}}},{"type":"raw","value":"<code class=\"language-text\">JIT Compiler</code>","position":{"start":{"line":127,"column":68,"offset":4695},"end":{"line":127,"column":82,"offset":4709}}},{"type":"text","value":" 를 통해 이를 해결한다.","position":{"start":{"line":127,"column":82,"offset":4709},"end":{"line":127,"column":96,"offset":4723}}}],"position":{"start":{"line":127,"column":1,"offset":4628},"end":{"line":127,"column":96,"offset":4723}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   ","position":{"start":{"line":129,"column":1,"offset":4725},"end":{"line":129,"column":4,"offset":4728}}},{"type":"raw","value":"<code class=\"language-text\">Profiler</code>","position":{"start":{"line":129,"column":4,"offset":4728},"end":{"line":129,"column":14,"offset":4738}}},{"type":"text","value":"를 통해 반복되는 코드(hotspot)를 발견하면 JIT Compiler는 이를 네이티브 머신 코드로 한번에 컴파일한다. 변환된 코드는 시스템에 의해 한번에 읽히게 되므로 성능이 향상된다.","position":{"start":{"line":129,"column":14,"offset":4738},"end":{"line":129,"column":119,"offset":4843}}}],"position":{"start":{"line":129,"column":1,"offset":4725},"end":{"line":129,"column":119,"offset":4843}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"garbage-collector","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#garbage-collector","aria-label":"garbage collector permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Garbage Collector","position":{"start":{"line":131,"column":4,"offset":4848},"end":{"line":131,"column":21,"offset":4865}}}],"position":{"start":{"line":131,"column":1,"offset":4845},"end":{"line":131,"column":21,"offset":4865}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   ","position":{"start":{"line":133,"column":1,"offset":4867},"end":{"line":133,"column":4,"offset":4870}}},{"type":"raw","value":"<code class=\"language-text\">Garbage Collector</code>","position":{"start":{"line":133,"column":4,"offset":4870},"end":{"line":133,"column":23,"offset":4889}}},{"type":"text","value":" 는 Heap Area에 로드 되었지만 현재는 참조 되고 있지 않는 오브젝트들을 찾아서 지우고, 사용되지 않는 메모리 공간을 다시 회수한다.","position":{"start":{"line":133,"column":23,"offset":4889},"end":{"line":133,"column":101,"offset":4967}}}],"position":{"start":{"line":133,"column":1,"offset":4867},"end":{"line":133,"column":101,"offset":4967}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   이는 다음의 두 과정을 거친다.","position":{"start":{"line":135,"column":1,"offset":4969},"end":{"line":135,"column":21,"offset":4989}}}],"position":{"start":{"line":135,"column":1,"offset":4969},"end":{"line":135,"column":21,"offset":4989}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Mark","position":{"start":{"line":137,"column":6,"offset":4996},"end":{"line":137,"column":10,"offset":5000}}}],"position":{"start":{"line":137,"column":4,"offset":4994},"end":{"line":137,"column":12,"offset":5002}}},{"type":"text","value":" : GC가 참조되지 않는 오브젝트들을 찾아서 mark한다.","position":{"start":{"line":137,"column":12,"offset":5002},"end":{"line":137,"column":45,"offset":5035}}}],"position":{"start":{"line":137,"column":1,"offset":4991},"end":{"line":137,"column":45,"offset":5035}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Sweep","position":{"start":{"line":138,"column":6,"offset":5041},"end":{"line":138,"column":11,"offset":5046}}}],"position":{"start":{"line":138,"column":4,"offset":5039},"end":{"line":138,"column":13,"offset":5048}}},{"type":"text","value":" : GC가 mark 된 오브젝트들을 힙 메모리로부터 정리한다.","position":{"start":{"line":138,"column":13,"offset":5048},"end":{"line":138,"column":48,"offset":5083}}}],"position":{"start":{"line":138,"column":4,"offset":5039},"end":{"line":138,"column":48,"offset":5083}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"GC는 JVM에 의해 텀을 두고 자동으로 동작한다. ","position":{"start":{"line":140,"column":4,"offset":5088},"end":{"line":140,"column":33,"offset":5117}}},{"type":"raw","value":"<code class=\"language-text\">System.gc()</code>","position":{"start":{"line":140,"column":33,"offset":5117},"end":{"line":140,"column":46,"offset":5130}}},{"type":"text","value":" 를 통해 명시적으로 호출하는 방법도 있지만 이는 즉시 동작을 보장하진 않는다. 또한 JVM은 GC를 수행할 때, 이를 실행하는 쓰레드 이외에는 작업을 중단(","position":{"start":{"line":140,"column":46,"offset":5130},"end":{"line":140,"column":134,"offset":5218}}},{"type":"raw","value":"<code class=\"language-text\">Stop The World</code>","position":{"start":{"line":140,"column":134,"offset":5218},"end":{"line":140,"column":150,"offset":5234}}},{"type":"text","value":")하게 되므로 명시적인 호출은 지양해야 한다.","position":{"start":{"line":140,"column":150,"offset":5234},"end":{"line":140,"column":175,"offset":5259}}}],"position":{"start":{"line":140,"column":4,"offset":5088},"end":{"line":140,"column":175,"offset":5259}}},{"type":"text","value":"\n"}],"position":{"start":{"line":138,"column":1,"offset":5036},"end":{"line":140,"column":175,"offset":5259}}},{"type":"text","value":"\n"}],"position":{"start":{"line":137,"column":1,"offset":4991},"end":{"line":140,"column":175,"offset":5259}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"(GC는 그 자체로 하나의 아티클로 다루어야 할 규모의 주제라 생각한다. 추후 별도의 학습 포스트로 다뤄 볼 예정이므로, 이번 포스트에서는 대표적인 몇 가지 GC만 가볍게 살펴보고 넘어가려 한다.)","position":{"start":{"line":142,"column":1,"offset":5261},"end":{"line":142,"column":111,"offset":5371}}}],"position":{"start":{"line":142,"column":1,"offset":5261},"end":{"line":142,"column":111,"offset":5371}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"serial-gc","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#serial-gc","aria-label":"serial gc permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Serial GC","position":{"start":{"line":144,"column":5,"offset":5377},"end":{"line":144,"column":14,"offset":5386}}}],"position":{"start":{"line":144,"column":1,"offset":5373},"end":{"line":144,"column":14,"offset":5386}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   싱글 쓰레드 환경의 작은 애플리케이션에서 동작하는 가장 단순한 방식의 GC 구현체이다. 싱글 쓰레드 환경에만 적합한 GC이기 때문에 GC가 동작할 때 애플리케이션 전체가 중지(","position":{"start":{"line":146,"column":1,"offset":5388},"end":{"line":146,"column":102,"offset":5489}}},{"type":"raw","value":"<code class=\"language-text\">Stop The World</code>","position":{"start":{"line":146,"column":102,"offset":5489},"end":{"line":146,"column":118,"offset":5505}}},{"type":"text","value":") 된다.","position":{"start":{"line":146,"column":118,"offset":5505},"end":{"line":146,"column":123,"offset":5510}}}],"position":{"start":{"line":146,"column":1,"offset":5388},"end":{"line":146,"column":123,"offset":5510}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"parallel-gc","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#parallel-gc","aria-label":"parallel gc permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Parallel GC","position":{"start":{"line":148,"column":5,"offset":5516},"end":{"line":148,"column":16,"offset":5527}}}],"position":{"start":{"line":148,"column":1,"offset":5512},"end":{"line":148,"column":16,"offset":5527}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   JVM의 Java 8의 default GC 구현체이며, 다중 쓰레드 환경을 지원한다. ","position":{"start":{"line":150,"column":1,"offset":5529},"end":{"line":150,"column":52,"offset":5580}}},{"type":"raw","value":"<code class=\"language-text\">Serial GC</code>","position":{"start":{"line":150,"column":52,"offset":5580},"end":{"line":150,"column":63,"offset":5591}}},{"type":"text","value":" 보다 빠른 퍼포먼스를 보여준다.","position":{"start":{"line":150,"column":63,"offset":5591},"end":{"line":150,"column":81,"offset":5609}}}],"position":{"start":{"line":150,"column":1,"offset":5529},"end":{"line":150,"column":81,"offset":5609}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"garbage-first-gc-g1-gc","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#garbage-first-gc-g1-gc","aria-label":"garbage first gc g1 gc permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Garbage First GC (G1 GC)","position":{"start":{"line":152,"column":5,"offset":5615},"end":{"line":152,"column":29,"offset":5639}}}],"position":{"start":{"line":152,"column":1,"offset":5611},"end":{"line":152,"column":29,"offset":5639}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"멀티 프로세스 환경을 지원하기 위해 개발 된 GC 구현체이며, 대용량 메모리 운용이 가능하다. ","position":{"start":{"line":154,"column":1,"offset":5641},"end":{"line":154,"column":54,"offset":5694}}},{"type":"raw","value":"<code class=\"language-text\">Stop The World</code>","position":{"start":{"line":154,"column":54,"offset":5694},"end":{"line":154,"column":70,"offset":5710}}},{"type":"text","value":" 시간을 최소화 하였지만, 이를 완전 해결하지는 못했다. Java 9부터 default GC 구현체이다.","position":{"start":{"line":154,"column":70,"offset":5710},"end":{"line":154,"column":128,"offset":5768}}}],"position":{"start":{"line":154,"column":1,"offset":5641},"end":{"line":154,"column":128,"offset":5768}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"java-native-interface-jni","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#java-native-interface-jni","aria-label":"java native interface jni permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Java Native Interface (JNI)","position":{"start":{"line":157,"column":4,"offset":5774},"end":{"line":157,"column":31,"offset":5801}}}],"position":{"start":{"line":157,"column":1,"offset":5771},"end":{"line":157,"column":31,"offset":5801}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"  ","position":{"start":{"line":159,"column":1,"offset":5803},"end":{"line":159,"column":3,"offset":5805}}},{"type":"raw","value":"<code class=\"language-text\">Runtime Data Area</code>","position":{"start":{"line":159,"column":3,"offset":5805},"end":{"line":159,"column":22,"offset":5824}}},{"type":"text","value":" 를 다루며 ","position":{"start":{"line":159,"column":22,"offset":5824},"end":{"line":159,"column":29,"offset":5831}}},{"type":"raw","value":"<code class=\"language-text\">Native Method Stacks</code>","position":{"start":{"line":159,"column":29,"offset":5831},"end":{"line":159,"column":51,"offset":5853}}},{"type":"text","value":" 에 대해 간단히 알아보았다.\nJNI 역시 Java가 아닌 네이티브 코드를 사용하여 OS 혹은 하드웨어를 컨트롤하는 프로그램 혹은 라이브러리의 사용을 가능케한다.","position":{"start":{"line":159,"column":51,"offset":5853},"end":{"line":160,"column":76,"offset":5946}}}],"position":{"start":{"line":159,"column":1,"offset":5803},"end":{"line":160,"column":76,"offset":5946}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br/>","position":{"start":{"line":162,"column":1,"offset":5948},"end":{"line":162,"column":6,"offset":5953}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"references","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#references","aria-label":"references permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"References:","position":{"start":{"line":164,"column":5,"offset":5959},"end":{"line":164,"column":16,"offset":5970}}}],"position":{"start":{"line":164,"column":1,"offset":5955},"end":{"line":164,"column":16,"offset":5970}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://www.infoworld.com/article/3272244/what-is-the-jvm-introducing-the-java-virtual-machine.html","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"text","value":"https://www.infoworld.com/article/3272244/what-is-the-jvm-introducing-the-java-virtual-machine.html","position":{"start":{"line":165,"column":2,"offset":5972},"end":{"line":165,"column":101,"offset":6071}}}],"position":{"start":{"line":165,"column":1,"offset":5971},"end":{"line":165,"column":203,"offset":6173}}},{"type":"text","value":"\n","position":{"start":{"line":165,"column":203,"offset":6173},"end":{"line":166,"column":1,"offset":6174}}},{"type":"element","tagName":"a","properties":{"href":"https://en.wikipedia.org/wiki/Java_virtual_machine","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"text","value":"https://en.wikipedia.org/wiki/Java","position":{"start":{"line":166,"column":2,"offset":6175},"end":{"line":166,"column":36,"offset":6209}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"virtual","position":{"start":{"line":166,"column":37,"offset":6210},"end":{"line":166,"column":44,"offset":6217}}}],"position":{"start":{"line":166,"column":36,"offset":6209},"end":{"line":166,"column":45,"offset":6218}}},{"type":"text","value":"machine","position":{"start":{"line":166,"column":45,"offset":6218},"end":{"line":166,"column":52,"offset":6225}}}],"position":{"start":{"line":166,"column":1,"offset":6174},"end":{"line":166,"column":105,"offset":6278}}},{"type":"text","value":"\n","position":{"start":{"line":166,"column":105,"offset":6278},"end":{"line":167,"column":1,"offset":6279}}},{"type":"element","tagName":"a","properties":{"href":"https://www.freecodecamp.org/news/jvm-tutorial-java-virtual-machine-architecture-explained-for-beginners/","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"text","value":"https://www.freecodecamp.org/news/jvm-tutorial-java-virtual-machine-architecture-explained-for-beginners/","position":{"start":{"line":167,"column":2,"offset":6280},"end":{"line":167,"column":107,"offset":6385}}}],"position":{"start":{"line":167,"column":1,"offset":6279},"end":{"line":167,"column":215,"offset":6493}}},{"type":"text","value":"\n","position":{"start":{"line":167,"column":215,"offset":6493},"end":{"line":168,"column":1,"offset":6494}}},{"type":"element","tagName":"a","properties":{"href":"https://www.redhat.com/ko/topics/virtualization/what-is-a-hypervisor","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"text","value":"https://www.redhat.com/ko/topics/virtualization/what-is-a-hypervisor","position":{"start":{"line":168,"column":2,"offset":6495},"end":{"line":168,"column":70,"offset":6563}}}],"position":{"start":{"line":168,"column":1,"offset":6494},"end":{"line":168,"column":141,"offset":6634}}},{"type":"text","value":"\n","position":{"start":{"line":168,"column":141,"offset":6634},"end":{"line":169,"column":1,"offset":6635}}},{"type":"element","tagName":"a","properties":{"href":"https://www.redhat.com/ko/topics/virtualization/what-is-a-virtual-machine","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"text","value":"https://www.redhat.com/ko/topics/virtualization/what-is-a-virtual-machine","position":{"start":{"line":169,"column":2,"offset":6636},"end":{"line":169,"column":75,"offset":6709}}}],"position":{"start":{"line":169,"column":1,"offset":6635},"end":{"line":169,"column":151,"offset":6785}}}],"position":{"start":{"line":165,"column":1,"offset":5971},"end":{"line":169,"column":151,"offset":6785}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":169,"column":151,"offset":6785}}}}