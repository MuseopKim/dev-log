{"expireTime":9007200904347921000,"key":"transformer-remark-markdown-ast-9ff70b29e7dd6715ddde7b528efe2b27-gatsby-remark-imagesgatsby-remark-prismjsgatsby-remark-emojisgatsby-remark-autolink-headersgatsby-remark-katexgatsby-remark-external-linksgatsby-remark-copy-linked-files-","val":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":" ","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":7,"offset":7},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":2,"column":7,"offset":7},"end":{"line":2,"column":13,"offset":13},"indent":[]}},{"type":"text","value":"JVM(Java Virtual Machine)은 피지컬 머신에서 자바 코드를 컴파일하고 실행하기 위한 Java 생태계의 필수 요소라 할 수 있다.\n초기의 JVM은 Java 플랫폼만을 지원하도록 설계 되었지만, 현재는 Kotlin, Groovy, Scala와 같은 다양한 언어를 지원하고 있다. 이렇게 JVM이 지원하는 언어들을 통틀어 JVM languages라고도 한다.","position":{"start":{"line":2,"column":13,"offset":13},"end":{"line":3,"column":126,"offset":220},"indent":[1]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":3,"column":126,"offset":220},"indent":[1]}},{"type":"html","value":"<br/>","position":{"start":{"line":5,"column":1,"offset":222},"end":{"line":5,"column":6,"offset":227},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"link","url":"#jvm-java-virtual-machine","title":null,"children":[],"data":{"hProperties":{"aria-label":"jvm java virtual machine permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"JVM (Java Virtual Machine)","position":{"start":{"line":7,"column":3,"offset":231},"end":{"line":7,"column":29,"offset":257},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":229},"end":{"line":7,"column":29,"offset":257},"indent":[]},"data":{"id":"jvm-java-virtual-machine","htmlAttributes":{"id":"jvm-java-virtual-machine"},"hProperties":{"id":"jvm-java-virtual-machine","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":" ","position":{"start":{"line":9,"column":1,"offset":259},"end":{"line":9,"column":7,"offset":265},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":9,"column":7,"offset":265},"end":{"line":9,"column":13,"offset":271},"indent":[]}},{"type":"text","value":"이름에서 살펴볼 수 있 듯 JVM을 ","position":{"start":{"line":9,"column":13,"offset":271},"end":{"line":9,"column":33,"offset":291},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">가상 머신(Virtual Machine)</code>","position":{"start":{"line":9,"column":33,"offset":291},"end":{"line":9,"column":57,"offset":315},"indent":[]}},{"type":"text","value":"이라 부르고 있다. 가상머신이란 하나의 물리적인 하드웨어 위에서 격리되어 구동되는 가상 환경이라 할 수 있다.","position":{"start":{"line":9,"column":57,"offset":315},"end":{"line":9,"column":118,"offset":376},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":259},"end":{"line":9,"column":118,"offset":376},"indent":[]}},{"type":"paragraph","children":[{"type":"linkReference","identifier":"vm 이미지","label":"VM 이미지","referenceType":"shortcut","children":[{"type":"text","value":"VM 이미지","position":{"start":{"line":11,"column":2,"offset":379},"end":{"line":11,"column":8,"offset":385},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":378},"end":{"line":11,"column":9,"offset":386},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":378},"end":{"line":11,"column":9,"offset":386},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":" ","position":{"start":{"line":13,"column":1,"offset":388},"end":{"line":13,"column":7,"offset":394},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":13,"column":7,"offset":394},"end":{"line":13,"column":13,"offset":400},"indent":[]}},{"type":"text","value":"하나의 가상머신은 하이퍼바이저라는 소프트웨어가 설치된 하나의 호스트 머신 위에서 각각 격리되어 CPU, 메모리, 스토리지, 네트워크 인터페이스를 갖추고 있다. 이러한 ","position":{"start":{"line":13,"column":13,"offset":400},"end":{"line":13,"column":106,"offset":493},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">System Virtual Machine</code>","position":{"start":{"line":13,"column":106,"offset":493},"end":{"line":13,"column":130,"offset":517},"indent":[]}},{"type":"text","value":"은 격리된 환경에서 기능적으로 OS가 제공하는 대부분의 기능들을 제공한다.","position":{"start":{"line":13,"column":130,"offset":517},"end":{"line":13,"column":171,"offset":558},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":388},"end":{"line":13,"column":171,"offset":558},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":" ","position":{"start":{"line":15,"column":1,"offset":560},"end":{"line":15,"column":7,"offset":566},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":15,"column":7,"offset":566},"end":{"line":15,"column":13,"offset":572},"indent":[]}},{"type":"text","value":"JVM은 OS로부터 메모리 공간을 할당 받아 해당 메모리를 자체적으로 관리하며, 독립적인 런타임 환경에서 Java 클래스 파일을 실행하는 ","position":{"start":{"line":15,"column":13,"offset":572},"end":{"line":15,"column":90,"offset":649},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Process Virtual Machine</code>","position":{"start":{"line":15,"column":90,"offset":649},"end":{"line":15,"column":115,"offset":674},"indent":[]}},{"type":"text","value":"이라 할 수 있다.","position":{"start":{"line":15,"column":115,"offset":674},"end":{"line":15,"column":125,"offset":684},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":560},"end":{"line":15,"column":125,"offset":684},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":17,"column":1,"offset":686},"end":{"line":17,"column":4,"offset":689},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"link","url":"#jvm의-구성요소","title":null,"children":[],"data":{"hProperties":{"aria-label":"jvm의 구성요소 permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"JVM의 구성요소","position":{"start":{"line":19,"column":3,"offset":693},"end":{"line":19,"column":12,"offset":702},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":691},"end":{"line":19,"column":12,"offset":702},"indent":[]},"data":{"id":"jvm의-구성요소","htmlAttributes":{"id":"jvm의-구성요소"},"hProperties":{"id":"jvm의-구성요소","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":" ","position":{"start":{"line":21,"column":1,"offset":704},"end":{"line":21,"column":7,"offset":710},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":21,"column":7,"offset":710},"end":{"line":21,"column":13,"offset":716},"indent":[]}},{"type":"text","value":"컴파일 이후 JVM이 Java Application을 실행하는 큰 흐름은 다음과 같다.","position":{"start":{"line":21,"column":13,"offset":716},"end":{"line":21,"column":61,"offset":764},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":704},"end":{"line":21,"column":61,"offset":764},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"(1) 컴파일 된 class 파일을 ","position":{"start":{"line":23,"column":3,"offset":768},"end":{"line":23,"column":23,"offset":788},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Class Loader</code>","position":{"start":{"line":23,"column":23,"offset":788},"end":{"line":23,"column":37,"offset":802},"indent":[]}},{"type":"text","value":"가 ","position":{"start":{"line":23,"column":37,"offset":802},"end":{"line":23,"column":39,"offset":804},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Runtime Data Area</code>","position":{"start":{"line":23,"column":39,"offset":804},"end":{"line":23,"column":58,"offset":823},"indent":[]}},{"type":"text","value":"에 로드한다. ","position":{"start":{"line":23,"column":58,"offset":823},"end":{"line":23,"column":66,"offset":831},"indent":[]}},{"type":"break","position":{"start":{"line":23,"column":66,"offset":831},"end":{"line":24,"column":3,"offset":835},"indent":[3]}},{"type":"text","value":"(2) 적재한 바이트코드를 ","position":{"start":{"line":24,"column":3,"offset":835},"end":{"line":24,"column":18,"offset":850},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Execution Engine</code>","position":{"start":{"line":24,"column":18,"offset":850},"end":{"line":24,"column":36,"offset":868},"indent":[]}},{"type":"text","value":"으로 실행한다. ","position":{"start":{"line":24,"column":36,"offset":868},"end":{"line":24,"column":45,"offset":877},"indent":[]}},{"type":"break","position":{"start":{"line":24,"column":45,"offset":877},"end":{"line":25,"column":3,"offset":881},"indent":[3]}},{"type":"text","value":"(3) 실행 도 중 Heap 영역에서 더 이상 참조되지 않는 objects 들을 ","position":{"start":{"line":25,"column":3,"offset":881},"end":{"line":25,"column":48,"offset":926},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Garbage Collector</code>","position":{"start":{"line":25,"column":48,"offset":926},"end":{"line":25,"column":67,"offset":945},"indent":[]}},{"type":"text","value":" 가 정리한다.","position":{"start":{"line":25,"column":67,"offset":945},"end":{"line":25,"column":75,"offset":953},"indent":[]}}],"position":{"start":{"line":23,"column":3,"offset":768},"end":{"line":25,"column":75,"offset":953},"indent":[3,3]}}],"position":{"start":{"line":23,"column":1,"offset":766},"end":{"line":25,"column":75,"offset":953},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":" ","position":{"start":{"line":27,"column":1,"offset":955},"end":{"line":27,"column":7,"offset":961},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":27,"column":7,"offset":961},"end":{"line":27,"column":13,"offset":967},"indent":[]}},{"type":"text","value":"생략된 것이 많은 매우 간략한 내용이지만, 애플리케이션이 실행된 이후 종료되기까지, ","position":{"start":{"line":27,"column":13,"offset":967},"end":{"line":27,"column":60,"offset":1014},"indent":[]}},{"type":"break","position":{"start":{"line":27,"column":60,"offset":1014},"end":{"line":28,"column":1,"offset":1016},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">Class Loader</code>","position":{"start":{"line":28,"column":1,"offset":1016},"end":{"line":28,"column":15,"offset":1030},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":28,"column":15,"offset":1030},"end":{"line":28,"column":17,"offset":1032},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Runtime Data Area</code>","position":{"start":{"line":28,"column":17,"offset":1032},"end":{"line":28,"column":36,"offset":1051},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":28,"column":36,"offset":1051},"end":{"line":28,"column":38,"offset":1053},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Execution Engine</code>","position":{"start":{"line":28,"column":38,"offset":1053},"end":{"line":28,"column":56,"offset":1071},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":28,"column":56,"offset":1071},"end":{"line":28,"column":58,"offset":1073},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Garbage Collector</code>","position":{"start":{"line":28,"column":58,"offset":1073},"end":{"line":28,"column":77,"offset":1092},"indent":[]}},{"type":"text","value":" 네 가지 JVM 컴포넌트들이 이런 유기적인 상호작용을 하며 동작한다.","position":{"start":{"line":28,"column":77,"offset":1092},"end":{"line":28,"column":116,"offset":1131},"indent":[]}}],"position":{"start":{"line":27,"column":1,"offset":955},"end":{"line":28,"column":116,"offset":1131},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":" ","position":{"start":{"line":30,"column":1,"offset":1133},"end":{"line":30,"column":7,"offset":1139},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":30,"column":7,"offset":1139},"end":{"line":30,"column":13,"offset":1145},"indent":[]}},{"type":"text","value":"JVM의 핵심 컴포넌트들은 다음과 같은 구조를 이룬다.","position":{"start":{"line":30,"column":13,"offset":1145},"end":{"line":30,"column":43,"offset":1175},"indent":[]}}],"position":{"start":{"line":30,"column":1,"offset":1133},"end":{"line":30,"column":43,"offset":1175},"indent":[]}},{"type":"paragraph","children":[{"type":"linkReference","identifier":"jvm의 구조 이미지","label":"JVM의 구조 이미지","referenceType":"shortcut","children":[{"type":"text","value":"JVM의 구조 이미지","position":{"start":{"line":32,"column":2,"offset":1178},"end":{"line":32,"column":13,"offset":1189},"indent":[]}}],"position":{"start":{"line":32,"column":1,"offset":1177},"end":{"line":32,"column":14,"offset":1190},"indent":[]}}],"position":{"start":{"line":32,"column":1,"offset":1177},"end":{"line":32,"column":14,"offset":1190},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":" ","position":{"start":{"line":34,"column":1,"offset":1192},"end":{"line":34,"column":7,"offset":1198},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":34,"column":7,"offset":1198},"end":{"line":34,"column":13,"offset":1204},"indent":[]}},{"type":"text","value":"JVM을 구성하는 핵심 컴포넌트들을 정확하게 이해하는 것이 곧 JVM을 이해하는 것이라 할 수 있다. ","position":{"start":{"line":34,"column":13,"offset":1204},"end":{"line":34,"column":70,"offset":1261},"indent":[]}},{"type":"break","position":{"start":{"line":34,"column":70,"offset":1261},"end":{"line":35,"column":1,"offset":1263},"indent":[1]}},{"type":"text","value":"이제부터 각 컴포넌트들을 자세히 학습 해보면서 JVM에 대한 이해도를 더욱 높여보고자 한다.","position":{"start":{"line":35,"column":1,"offset":1263},"end":{"line":35,"column":52,"offset":1314},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":1192},"end":{"line":35,"column":52,"offset":1314},"indent":[1]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#class-loader","title":null,"children":[],"data":{"hProperties":{"aria-label":"class loader permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Class Loader","position":{"start":{"line":37,"column":4,"offset":1319},"end":{"line":37,"column":16,"offset":1331},"indent":[]}}],"position":{"start":{"line":37,"column":1,"offset":1316},"end":{"line":37,"column":16,"offset":1331},"indent":[]},"data":{"id":"class-loader","htmlAttributes":{"id":"class-loader"},"hProperties":{"id":"class-loader","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":" ","position":{"start":{"line":39,"column":1,"offset":1333},"end":{"line":39,"column":7,"offset":1339},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":39,"column":7,"offset":1339},"end":{"line":39,"column":13,"offset":1345},"indent":[]}},{"type":"text","value":"클래스 로더는 컴파일 된 바이트 코드(","position":{"start":{"line":39,"column":13,"offset":1345},"end":{"line":39,"column":34,"offset":1366},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">.class</code>","position":{"start":{"line":39,"column":34,"offset":1366},"end":{"line":39,"column":42,"offset":1374},"indent":[]}},{"type":"text","value":" files)들을 ","position":{"start":{"line":39,"column":42,"offset":1374},"end":{"line":39,"column":52,"offset":1384},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Runtime Data Area</code>","position":{"start":{"line":39,"column":52,"offset":1384},"end":{"line":39,"column":71,"offset":1403},"indent":[]}},{"type":"text","value":" 에 로드한다. ","position":{"start":{"line":39,"column":71,"offset":1403},"end":{"line":39,"column":80,"offset":1412},"indent":[]}},{"type":"break","position":{"start":{"line":39,"column":80,"offset":1412},"end":{"line":40,"column":1,"offset":1414},"indent":[1]}},{"type":"text","value":"여기서 주의해야 할 것은, 모든 클래스 파일들을 이 시점에 로드하는 것이 아니라는 점이다. JVM의 기본 클래스 로딩 방식은 Lazy loading이다. ","position":{"start":{"line":40,"column":1,"offset":1414},"end":{"line":40,"column":87,"offset":1500},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">main()</code>","position":{"start":{"line":40,"column":87,"offset":1500},"end":{"line":40,"column":95,"offset":1508},"indent":[]}},{"type":"text","value":" 메소드가 위치한 클래스를 로드하고, 실행엔진으로 바이트 코드를 해석하며, 필요할 때 마다 각 클래스를 메인 메모리에 적재하고 읽어들인다.","position":{"start":{"line":40,"column":95,"offset":1508},"end":{"line":40,"column":172,"offset":1585},"indent":[]}}],"position":{"start":{"line":39,"column":1,"offset":1333},"end":{"line":40,"column":172,"offset":1585},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":" ","position":{"start":{"line":42,"column":1,"offset":1587},"end":{"line":42,"column":7,"offset":1593},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":42,"column":7,"offset":1593},"end":{"line":42,"column":13,"offset":1599},"indent":[]}},{"type":"text","value":"클래스 로더의 세부 구성을 살펴보면 다음과 같다.","position":{"start":{"line":42,"column":13,"offset":1599},"end":{"line":42,"column":40,"offset":1626},"indent":[]}}],"position":{"start":{"line":42,"column":1,"offset":1587},"end":{"line":42,"column":40,"offset":1626},"indent":[]}},{"type":"paragraph","children":[{"type":"linkReference","identifier":"클래스 로더 이미지","label":"클래스 로더 이미지","referenceType":"shortcut","children":[{"type":"text","value":"클래스 로더 이미지","position":{"start":{"line":44,"column":2,"offset":1629},"end":{"line":44,"column":12,"offset":1639},"indent":[]}}],"position":{"start":{"line":44,"column":1,"offset":1628},"end":{"line":44,"column":13,"offset":1640},"indent":[]}}],"position":{"start":{"line":44,"column":1,"offset":1628},"end":{"line":44,"column":13,"offset":1640},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":" ","position":{"start":{"line":46,"column":1,"offset":1642},"end":{"line":46,"column":7,"offset":1648},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":46,"column":7,"offset":1648},"end":{"line":46,"column":13,"offset":1654},"indent":[]}},{"type":"text","value":"클래스 로더의 동작 메커니즘은 크게 ","position":{"start":{"line":46,"column":13,"offset":1654},"end":{"line":46,"column":33,"offset":1674},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Loading</code>","position":{"start":{"line":46,"column":33,"offset":1674},"end":{"line":46,"column":42,"offset":1683},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":46,"column":42,"offset":1683},"end":{"line":46,"column":44,"offset":1685},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Linking</code>","position":{"start":{"line":46,"column":44,"offset":1685},"end":{"line":46,"column":53,"offset":1694},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":46,"column":53,"offset":1694},"end":{"line":46,"column":55,"offset":1696},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Initialization</code>","position":{"start":{"line":46,"column":55,"offset":1696},"end":{"line":46,"column":71,"offset":1712},"indent":[]}},{"type":"text","value":"  세 단계의 절차로 수행된다. ","position":{"start":{"line":46,"column":71,"offset":1712},"end":{"line":46,"column":89,"offset":1730},"indent":[]}},{"type":"break","position":{"start":{"line":46,"column":89,"offset":1730},"end":{"line":47,"column":1,"offset":1732},"indent":[1]}},{"type":"text","value":"각 과정들을 하나씩 살펴보자.","position":{"start":{"line":47,"column":1,"offset":1732},"end":{"line":47,"column":17,"offset":1748},"indent":[]}}],"position":{"start":{"line":46,"column":1,"offset":1642},"end":{"line":47,"column":17,"offset":1748},"indent":[1]}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#loading","title":null,"children":[],"data":{"hProperties":{"aria-label":"loading permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Loading","position":{"start":{"line":49,"column":5,"offset":1754},"end":{"line":49,"column":12,"offset":1761},"indent":[]}}],"position":{"start":{"line":49,"column":1,"offset":1750},"end":{"line":49,"column":12,"offset":1761},"indent":[]},"data":{"id":"loading","htmlAttributes":{"id":"loading"},"hProperties":{"id":"loading","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":" ","position":{"start":{"line":50,"column":1,"offset":1762},"end":{"line":50,"column":7,"offset":1768},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":50,"column":7,"offset":1768},"end":{"line":50,"column":13,"offset":1774},"indent":[]}},{"type":"text","value":"클래스 로더가 바이트 코드를 JVM에 로드하는 과정이다.","position":{"start":{"line":50,"column":13,"offset":1774},"end":{"line":50,"column":44,"offset":1805},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">java.lang</code>","position":{"start":{"line":50,"column":44,"offset":1805},"end":{"line":50,"column":55,"offset":1816},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":50,"column":55,"offset":1816},"end":{"line":50,"column":57,"offset":1818},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">java.util</code>","position":{"start":{"line":50,"column":57,"offset":1818},"end":{"line":50,"column":68,"offset":1829},"indent":[]}},{"type":"text","value":" 같은 Java의 스탠다드 패키지부터 라이브러리까지 각 바이트 코드마다 담당하는 클래스 로더가 다르다. 내부적으로 JVM이 ","position":{"start":{"line":50,"column":68,"offset":1829},"end":{"line":50,"column":137,"offset":1898},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">ClassLoader.loadClass()</code>","position":{"start":{"line":50,"column":137,"offset":1898},"end":{"line":50,"column":162,"offset":1923},"indent":[]}},{"type":"text","value":" 를 실행하여 메모리에 바이트 코드를 적재한다. ","position":{"start":{"line":50,"column":162,"offset":1923},"end":{"line":50,"column":189,"offset":1950},"indent":[]}}],"position":{"start":{"line":50,"column":1,"offset":1762},"end":{"line":50,"column":189,"offset":1950},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":" ","position":{"start":{"line":52,"column":1,"offset":1952},"end":{"line":52,"column":7,"offset":1958},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":52,"column":7,"offset":1958},"end":{"line":52,"column":13,"offset":1964},"indent":[]}},{"type":"text","value":"Class Loader의 세부적인 계층 구성은 다음과 같다. ","position":{"start":{"line":52,"column":13,"offset":1964},"end":{"line":52,"column":47,"offset":1998},"indent":[]}}],"position":{"start":{"line":52,"column":1,"offset":1952},"end":{"line":52,"column":47,"offset":1998},"indent":[]}},{"type":"paragraph","children":[{"type":"linkReference","identifier":"class loader 계층 구성 이미지","label":"Class Loader 계층 구성 이미지","referenceType":"shortcut","children":[{"type":"text","value":"Class Loader 계층 구성 이미지","position":{"start":{"line":54,"column":2,"offset":2001},"end":{"line":54,"column":24,"offset":2023},"indent":[]}}],"position":{"start":{"line":54,"column":1,"offset":2000},"end":{"line":54,"column":25,"offset":2024},"indent":[]}}],"position":{"start":{"line":54,"column":1,"offset":2000},"end":{"line":54,"column":25,"offset":2024},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Boostrap Class Loader","position":{"start":{"line":56,"column":5,"offset":2030},"end":{"line":56,"column":26,"offset":2051},"indent":[]}}],"position":{"start":{"line":56,"column":3,"offset":2028},"end":{"line":56,"column":28,"offset":2053},"indent":[]}},{"type":"text","value":" : 모든 클래스 로더의 루트 레벨로써, ","position":{"start":{"line":56,"column":28,"offset":2053},"end":{"line":56,"column":51,"offset":2076},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">rt.jar</code>","position":{"start":{"line":56,"column":51,"offset":2076},"end":{"line":56,"column":59,"offset":2084},"indent":[]}},{"type":"text","value":"  파일에 위치하는 Java의 스탠다드 패키지들과 ","position":{"start":{"line":56,"column":59,"offset":2084},"end":{"line":56,"column":87,"offset":2112},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">$JAVA_HOME/jre/lib</code>","position":{"start":{"line":56,"column":87,"offset":2112},"end":{"line":56,"column":107,"offset":2132},"indent":[]}},{"type":"text","value":" 에 있는 코어 라이브러리들을 로드한다.","position":{"start":{"line":56,"column":107,"offset":2132},"end":{"line":56,"column":129,"offset":2154},"indent":[]}}],"position":{"start":{"line":56,"column":3,"offset":2028},"end":{"line":56,"column":129,"offset":2154},"indent":[]}}],"position":{"start":{"line":56,"column":1,"offset":2026},"end":{"line":56,"column":129,"offset":2154},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Extention Class Loader :","position":{"start":{"line":57,"column":5,"offset":2159},"end":{"line":57,"column":29,"offset":2183},"indent":[]}}],"position":{"start":{"line":57,"column":3,"offset":2157},"end":{"line":57,"column":31,"offset":2185},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":57,"column":31,"offset":2185},"end":{"line":57,"column":32,"offset":2186},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">$JAVA_HOME/jre/lib/ext</code>","position":{"start":{"line":57,"column":32,"offset":2186},"end":{"line":57,"column":56,"offset":2210},"indent":[]}},{"type":"text","value":" 에 위치하는 extension Java 라이브러리들을 로드한다.","position":{"start":{"line":57,"column":56,"offset":2210},"end":{"line":57,"column":92,"offset":2246},"indent":[]}}],"position":{"start":{"line":57,"column":3,"offset":2157},"end":{"line":57,"column":92,"offset":2246},"indent":[]}}],"position":{"start":{"line":57,"column":1,"offset":2155},"end":{"line":57,"column":92,"offset":2246},"indent":[]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Application Class Loader","position":{"start":{"line":58,"column":5,"offset":2251},"end":{"line":58,"column":29,"offset":2275},"indent":[]}}],"position":{"start":{"line":58,"column":3,"offset":2249},"end":{"line":58,"column":31,"offset":2277},"indent":[]}},{"type":"text","value":" : ","position":{"start":{"line":58,"column":31,"offset":2277},"end":{"line":58,"column":34,"offset":2280},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">classpath</code>","position":{"start":{"line":58,"column":34,"offset":2280},"end":{"line":58,"column":45,"offset":2291},"indent":[]}},{"type":"text","value":" 에 위치한 클래스들을 찾아서 로드한다. 즉, 라이브러리로가 아닌 개발자가 작성한 소스파일로부터 생성된 바이트 코드들을 JVM에 적재한다.","position":{"start":{"line":58,"column":45,"offset":2291},"end":{"line":58,"column":122,"offset":2368},"indent":[]}}],"position":{"start":{"line":58,"column":3,"offset":2249},"end":{"line":58,"column":122,"offset":2368},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"상위 클래스 로더부터 클래스를 하나씩 찾아가는데, 최하단에 있는 클래스 로더까지 해당되는 클래스 파일을 찾지 못하면 ","position":{"start":{"line":60,"column":4,"offset":2373},"end":{"line":60,"column":69,"offset":2438},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">ClassNotFoundException</code>","position":{"start":{"line":60,"column":69,"offset":2438},"end":{"line":60,"column":93,"offset":2462},"indent":[]}},{"type":"text","value":" 예외가 발생한다. ","position":{"start":{"line":60,"column":93,"offset":2462},"end":{"line":60,"column":104,"offset":2473},"indent":[]}}],"position":{"start":{"line":60,"column":4,"offset":2373},"end":{"line":60,"column":104,"offset":2473},"indent":[]}}],"position":{"start":{"line":58,"column":1,"offset":2247},"end":{"line":60,"column":104,"offset":2473},"indent":[1,1]}}],"position":{"start":{"line":56,"column":1,"offset":2026},"end":{"line":60,"column":104,"offset":2473},"indent":[1,1,1,1]}},{"type":"html","value":"<br/>","position":{"start":{"line":62,"column":1,"offset":2475},"end":{"line":62,"column":6,"offset":2480},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#linking","title":null,"children":[],"data":{"hProperties":{"aria-label":"linking permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Linking","position":{"start":{"line":64,"column":5,"offset":2486},"end":{"line":64,"column":12,"offset":2493},"indent":[]}}],"position":{"start":{"line":64,"column":1,"offset":2482},"end":{"line":64,"column":12,"offset":2493},"indent":[]},"data":{"id":"linking","htmlAttributes":{"id":"linking"},"hProperties":{"id":"linking","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":" ","position":{"start":{"line":66,"column":1,"offset":2495},"end":{"line":66,"column":7,"offset":2501},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":66,"column":7,"offset":2501},"end":{"line":66,"column":13,"offset":2507},"indent":[]}},{"type":"text","value":"클래스 파일이 메모리에 적재 된 이후 의존하는 클래스 파일들을 서로 연결(Link)하고 검증하는 과정이다.","position":{"start":{"line":66,"column":13,"offset":2507},"end":{"line":66,"column":72,"offset":2566},"indent":[]}}],"position":{"start":{"line":66,"column":1,"offset":2495},"end":{"line":66,"column":72,"offset":2566},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Verification","position":{"start":{"line":67,"column":7,"offset":2573},"end":{"line":67,"column":19,"offset":2585},"indent":[]}}],"position":{"start":{"line":67,"column":5,"offset":2571},"end":{"line":67,"column":21,"offset":2587},"indent":[]}},{"type":"text","value":" : 클래스 파일의 유효성을 검증한다. 유효하지 않은 클래스 파일인 경우 ","position":{"start":{"line":67,"column":21,"offset":2587},"end":{"line":67,"column":62,"offset":2628},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">VerifyException</code>","position":{"start":{"line":67,"column":62,"offset":2628},"end":{"line":67,"column":79,"offset":2645},"indent":[]}},{"type":"text","value":" 이 발생한다.","position":{"start":{"line":67,"column":79,"offset":2645},"end":{"line":67,"column":87,"offset":2653},"indent":[]}}],"position":{"start":{"line":67,"column":5,"offset":2571},"end":{"line":67,"column":87,"offset":2653},"indent":[]}}],"position":{"start":{"line":67,"column":1,"offset":2567},"end":{"line":67,"column":87,"offset":2653},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Preparation","position":{"start":{"line":68,"column":7,"offset":2660},"end":{"line":68,"column":18,"offset":2671},"indent":[]}}],"position":{"start":{"line":68,"column":5,"offset":2658},"end":{"line":68,"column":20,"offset":2673},"indent":[]}},{"type":"text","value":" : 유효성 검증을 통과한 클래스 파일들에 대하여 static 필드 및 클래스를 기본 값과 함께 초기화한다.","position":{"start":{"line":68,"column":20,"offset":2673},"end":{"line":68,"column":80,"offset":2733},"indent":[]}}],"position":{"start":{"line":68,"column":5,"offset":2658},"end":{"line":68,"column":80,"offset":2733},"indent":[]}}],"position":{"start":{"line":68,"column":1,"offset":2654},"end":{"line":68,"column":80,"offset":2733},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Resolution","position":{"start":{"line":69,"column":7,"offset":2740},"end":{"line":69,"column":17,"offset":2750},"indent":[]}}],"position":{"start":{"line":69,"column":5,"offset":2738},"end":{"line":69,"column":19,"offset":2752},"indent":[]}},{"type":"text","value":" : Symbolic Reference 값들을 클래스, 상수, 메소드 등 Runtime Constant Pool에 있는 실제 메모리 참조 값(Actual Reference)으로 대체한다.","position":{"start":{"line":69,"column":19,"offset":2752},"end":{"line":69,"column":123,"offset":2856},"indent":[]}}],"position":{"start":{"line":69,"column":5,"offset":2738},"end":{"line":69,"column":123,"offset":2856},"indent":[]}}],"position":{"start":{"line":69,"column":1,"offset":2734},"end":{"line":69,"column":123,"offset":2856},"indent":[]}}],"position":{"start":{"line":67,"column":1,"offset":2567},"end":{"line":69,"column":123,"offset":2856},"indent":[1,1]}},{"type":"html","value":"<br/>","position":{"start":{"line":71,"column":1,"offset":2858},"end":{"line":71,"column":6,"offset":2863},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#initialization","title":null,"children":[],"data":{"hProperties":{"aria-label":"initialization permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"strong","children":[{"type":"text","value":"Initialization","position":{"start":{"line":73,"column":7,"offset":2871},"end":{"line":73,"column":21,"offset":2885},"indent":[]}}],"position":{"start":{"line":73,"column":5,"offset":2869},"end":{"line":73,"column":23,"offset":2887},"indent":[]}}],"position":{"start":{"line":73,"column":1,"offset":2865},"end":{"line":73,"column":23,"offset":2887},"indent":[]},"data":{"id":"initialization","htmlAttributes":{"id":"initialization"},"hProperties":{"id":"initialization","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"   constructor, static  ****block 실행 등 초기화 과정이 수행된다. 클래스 로딩의 마지막 과정이라 할 수 있다. JVM은 멀티 쓰레드 환경에서 구동되기 때문에 Initialization 과정에서도 동시성 이슈가 발생할 여지가 있으므로 주의 해야한다.","position":{"start":{"line":75,"column":1,"offset":2889},"end":{"line":75,"column":155,"offset":3043},"indent":[]}}],"position":{"start":{"line":75,"column":1,"offset":2889},"end":{"line":75,"column":155,"offset":3043},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#runtime-data-area","title":null,"children":[],"data":{"hProperties":{"aria-label":"runtime data area permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Runtime Data Area","position":{"start":{"line":77,"column":4,"offset":3048},"end":{"line":77,"column":21,"offset":3065},"indent":[]}}],"position":{"start":{"line":77,"column":1,"offset":3045},"end":{"line":77,"column":21,"offset":3065},"indent":[]},"data":{"id":"runtime-data-area","htmlAttributes":{"id":"runtime-data-area"},"hProperties":{"id":"runtime-data-area","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"   앞서 살펴본 것과 같이 클래스 파일들은 Class Loader에 의해 Runtime Data Area에 적재 된다. Runtime Data Area는 5개 영역으로 나뉘어져 있는데, 애플리케이션 실행 도 중 데이터의 타입에 따라 ","position":{"start":{"line":79,"column":1,"offset":3067},"end":{"line":79,"column":132,"offset":3198},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Method Area</code>","position":{"start":{"line":79,"column":132,"offset":3198},"end":{"line":79,"column":145,"offset":3211},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":79,"column":145,"offset":3211},"end":{"line":79,"column":147,"offset":3213},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Heap Area</code>","position":{"start":{"line":79,"column":147,"offset":3213},"end":{"line":79,"column":158,"offset":3224},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":79,"column":158,"offset":3224},"end":{"line":79,"column":160,"offset":3226},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Stack Area</code>","position":{"start":{"line":79,"column":160,"offset":3226},"end":{"line":79,"column":172,"offset":3238},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":79,"column":172,"offset":3238},"end":{"line":79,"column":174,"offset":3240},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">PC Register</code>","position":{"start":{"line":79,"column":174,"offset":3240},"end":{"line":79,"column":187,"offset":3253},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":79,"column":187,"offset":3253},"end":{"line":79,"column":189,"offset":3255},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Native Method Stack</code>","position":{"start":{"line":79,"column":189,"offset":3255},"end":{"line":79,"column":210,"offset":3276},"indent":[]}},{"type":"text","value":" 영역에 저장되고 참조된다.","position":{"start":{"line":79,"column":210,"offset":3276},"end":{"line":79,"column":225,"offset":3291},"indent":[]}}],"position":{"start":{"line":79,"column":1,"offset":3067},"end":{"line":79,"column":225,"offset":3291},"indent":[]}},{"type":"paragraph","children":[{"type":"linkReference","identifier":"이미지","label":"이미지","referenceType":"shortcut","children":[{"type":"text","value":"이미지","position":{"start":{"line":81,"column":2,"offset":3294},"end":{"line":81,"column":5,"offset":3297},"indent":[]}}],"position":{"start":{"line":81,"column":1,"offset":3293},"end":{"line":81,"column":6,"offset":3298},"indent":[]}}],"position":{"start":{"line":81,"column":1,"offset":3293},"end":{"line":81,"column":6,"offset":3298},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#method-area","title":null,"children":[],"data":{"hProperties":{"aria-label":"method area permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Method Area","position":{"start":{"line":83,"column":5,"offset":3304},"end":{"line":83,"column":16,"offset":3315},"indent":[]}}],"position":{"start":{"line":83,"column":1,"offset":3300},"end":{"line":83,"column":16,"offset":3315},"indent":[]},"data":{"id":"method-area","htmlAttributes":{"id":"method-area"},"hProperties":{"id":"method-area","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"   실행 시점에 사용되는 Constant Pool, field, method, constructors 같은 데이터들이 위치한다. 만약 가용 공간이 부족하다면 ","position":{"start":{"line":85,"column":1,"offset":3317},"end":{"line":85,"column":90,"offset":3406},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">OutOfMemorryError</code>","position":{"start":{"line":85,"column":90,"offset":3406},"end":{"line":85,"column":109,"offset":3425},"indent":[]}},{"type":"text","value":" 가 발생한다. JVM 당 하나의 ","position":{"start":{"line":85,"column":109,"offset":3425},"end":{"line":85,"column":128,"offset":3444},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Method Area</code>","position":{"start":{"line":85,"column":128,"offset":3444},"end":{"line":85,"column":141,"offset":3457},"indent":[]}},{"type":"text","value":" 를 가진다.","position":{"start":{"line":85,"column":141,"offset":3457},"end":{"line":85,"column":148,"offset":3464},"indent":[]}}],"position":{"start":{"line":85,"column":1,"offset":3317},"end":{"line":85,"column":148,"offset":3464},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#heap-area","title":null,"children":[],"data":{"hProperties":{"aria-label":"heap area permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Heap Area","position":{"start":{"line":87,"column":5,"offset":3470},"end":{"line":87,"column":14,"offset":3479},"indent":[]}}],"position":{"start":{"line":87,"column":1,"offset":3466},"end":{"line":87,"column":14,"offset":3479},"indent":[]},"data":{"id":"heap-area","htmlAttributes":{"id":"heap-area"},"hProperties":{"id":"heap-area","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"   객체 및 인스턴스 변수, 배열 등과 같은 타입의 값들이 위치한다.","position":{"start":{"line":89,"column":1,"offset":3481},"end":{"line":89,"column":40,"offset":3520},"indent":[]}}],"position":{"start":{"line":89,"column":1,"offset":3481},"end":{"line":89,"column":40,"offset":3520},"indent":[]}},{"type":"html","lang":"java","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">Example</span> example <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Example</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":91,"column":1,"offset":3522},"end":{"line":93,"column":4,"offset":3566},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"   예를 들어 위와 같은 코드를 동작 시키면 ","position":{"start":{"line":95,"column":1,"offset":3568},"end":{"line":95,"column":27,"offset":3594},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Example</code>","position":{"start":{"line":95,"column":27,"offset":3594},"end":{"line":95,"column":36,"offset":3603},"indent":[]}},{"type":"text","value":" 인스턴스를 생성한 뒤 Heap Area에 배치한다. 메소드 영역과 마찬가지로 힙 영역 역시 JVM 당 하나의 공간만을 갖게 된다.","position":{"start":{"line":95,"column":36,"offset":3603},"end":{"line":95,"column":109,"offset":3676},"indent":[]}}],"position":{"start":{"line":95,"column":1,"offset":3568},"end":{"line":95,"column":109,"offset":3676},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#stack-area","title":null,"children":[],"data":{"hProperties":{"aria-label":"stack area permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Stack Area","position":{"start":{"line":97,"column":5,"offset":3682},"end":{"line":97,"column":15,"offset":3692},"indent":[]}}],"position":{"start":{"line":97,"column":1,"offset":3678},"end":{"line":97,"column":15,"offset":3692},"indent":[]},"data":{"id":"stack-area","htmlAttributes":{"id":"stack-area"},"hProperties":{"id":"stack-area","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"   특정 메소드가 호출 되고 실행되면서 사용되는 지역 변수(Local Variables), 중간 연산 결과(Operand Stack) 값이 갱신되며 저장되는 영역이다. 메소드 호출 시점마다 ","position":{"start":{"line":99,"column":1,"offset":3694},"end":{"line":99,"column":108,"offset":3801},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Stack Frame</code>","position":{"start":{"line":99,"column":108,"offset":3801},"end":{"line":99,"column":121,"offset":3814},"indent":[]}},{"type":"text","value":"이라는 하나의 단위가 스택에 생성되고, 해당 메소드가 종료되는 시점에 파괴된다.","position":{"start":{"line":99,"column":121,"offset":3814},"end":{"line":99,"column":165,"offset":3858},"indent":[]}}],"position":{"start":{"line":99,"column":1,"offset":3694},"end":{"line":99,"column":165,"offset":3858},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"   스택 영역은 JVM에 의해 쓰레드가 생성될 때 마다 각 쓰레드에 하나씩 할당된다. 따라서 동시성 문제로부터 자유롭다.","position":{"start":{"line":101,"column":1,"offset":3860},"end":{"line":101,"column":69,"offset":3928},"indent":[]}}],"position":{"start":{"line":101,"column":1,"offset":3860},"end":{"line":101,"column":69,"offset":3928},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#program-counter-pc-registers","title":null,"children":[],"data":{"hProperties":{"aria-label":"program counter pc registers permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Program Counter (PC) Registers","position":{"start":{"line":103,"column":5,"offset":3934},"end":{"line":103,"column":35,"offset":3964},"indent":[]}}],"position":{"start":{"line":103,"column":1,"offset":3930},"end":{"line":103,"column":35,"offset":3964},"indent":[]},"data":{"id":"program-counter-pc-registers","htmlAttributes":{"id":"program-counter-pc-registers"},"hProperties":{"id":"program-counter-pc-registers","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"   현재 실행되고 있는 명령어의 주소 값이 저장되는 공간이다. PC Register는 현재 실행하고 있는 명령어의 실행이 끝나면 다음 명령어의 주소 값을 갱신한다. 각 쓰레드 마다 하나의 PC Register가 할당된다.","position":{"start":{"line":105,"column":1,"offset":3966},"end":{"line":105,"column":125,"offset":4090},"indent":[]}}],"position":{"start":{"line":105,"column":1,"offset":3966},"end":{"line":105,"column":125,"offset":4090},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#native-method-stacks","title":null,"children":[],"data":{"hProperties":{"aria-label":"native method stacks permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Native Method Stacks","position":{"start":{"line":107,"column":5,"offset":4096},"end":{"line":107,"column":25,"offset":4116},"indent":[]}}],"position":{"start":{"line":107,"column":1,"offset":4092},"end":{"line":107,"column":25,"offset":4116},"indent":[]},"data":{"id":"native-method-stacks","htmlAttributes":{"id":"native-method-stacks"},"hProperties":{"id":"native-method-stacks","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"   Java가 아닌 C, C++과 같은 언어로 작성 된 메소드(Native Method) 실행을 지원하는 영역. 스택 영역과 같이 각 쓰레드마다 하나의 공간이 할당된다.","position":{"start":{"line":109,"column":1,"offset":4118},"end":{"line":109,"column":96,"offset":4213},"indent":[]}}],"position":{"start":{"line":109,"column":1,"offset":4118},"end":{"line":109,"column":96,"offset":4213},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#execution-engine","title":null,"children":[],"data":{"hProperties":{"aria-label":"execution engine permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Execution Engine","position":{"start":{"line":111,"column":4,"offset":4218},"end":{"line":111,"column":20,"offset":4234},"indent":[]}}],"position":{"start":{"line":111,"column":1,"offset":4215},"end":{"line":111,"column":20,"offset":4234},"indent":[]},"data":{"id":"execution-engine","htmlAttributes":{"id":"execution-engine"},"hProperties":{"id":"execution-engine","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"linkReference","identifier":"이미지","label":"이미지","referenceType":"shortcut","children":[{"type":"text","value":"이미지","position":{"start":{"line":113,"column":2,"offset":4237},"end":{"line":113,"column":5,"offset":4240},"indent":[]}}],"position":{"start":{"line":113,"column":1,"offset":4236},"end":{"line":113,"column":6,"offset":4241},"indent":[]}}],"position":{"start":{"line":113,"column":1,"offset":4236},"end":{"line":113,"column":6,"offset":4241},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"   Runtime Data Area에 각 바이트코드가 로드되면 ","position":{"start":{"line":115,"column":1,"offset":4243},"end":{"line":115,"column":37,"offset":4279},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Execution Engine</code>","position":{"start":{"line":115,"column":37,"offset":4279},"end":{"line":115,"column":55,"offset":4297},"indent":[]}},{"type":"text","value":"이 이들을 실행하는데, Java compiler에 의해 생성된 클래스 파일들은 머신이 읽을 수 있는 기계어가 아닌 바이트 코드이다. 따라서 이를 한번 더 변환하는 과정이 필요하다.","position":{"start":{"line":115,"column":55,"offset":4297},"end":{"line":115,"column":155,"offset":4397},"indent":[]}}],"position":{"start":{"line":115,"column":1,"offset":4243},"end":{"line":115,"column":155,"offset":4397},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"  JVM은 효율성을 위해 두 가지 방법을 혼합하여 이를 실현한다. 기본 전략으로는 JavaScript, Python와 같은 언어 처럼 ","position":{"start":{"line":117,"column":1,"offset":4399},"end":{"line":117,"column":77,"offset":4475},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Interpreter</code>","position":{"start":{"line":117,"column":77,"offset":4475},"end":{"line":117,"column":90,"offset":4488},"indent":[]}},{"type":"text","value":"가 한 라인씩 바이트 코드를 해석하는 방식을 사용하고, 만약 반복되는 바이트 코드가 발견되면 ","position":{"start":{"line":117,"column":90,"offset":4488},"end":{"line":117,"column":142,"offset":4540},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">JIT Compiler</code>","position":{"start":{"line":117,"column":142,"offset":4540},"end":{"line":117,"column":156,"offset":4554},"indent":[]}},{"type":"text","value":" 를 통해 이들을 한번에 변환하기도 한다.","position":{"start":{"line":117,"column":156,"offset":4554},"end":{"line":117,"column":179,"offset":4577},"indent":[]}}],"position":{"start":{"line":117,"column":1,"offset":4399},"end":{"line":117,"column":179,"offset":4577},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#interpreter","title":null,"children":[],"data":{"hProperties":{"aria-label":"interpreter permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Interpreter","position":{"start":{"line":119,"column":5,"offset":4583},"end":{"line":119,"column":16,"offset":4594},"indent":[]}}],"position":{"start":{"line":119,"column":1,"offset":4579},"end":{"line":119,"column":16,"offset":4594},"indent":[]},"data":{"id":"interpreter","htmlAttributes":{"id":"interpreter"},"hProperties":{"id":"interpreter","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"   바이트 코드를 한 줄씩 읽고 실행한다. 매 라인마다 이러한 동작을 반복하기 때문에, 코드 구성에 따라 통으로 컴파일하는 방식 보다 느릴 수 있다.","position":{"start":{"line":121,"column":1,"offset":4596},"end":{"line":121,"column":85,"offset":4680},"indent":[]}}],"position":{"start":{"line":121,"column":1,"offset":4596},"end":{"line":121,"column":85,"offset":4680},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"   아래처럼 값을 누적하는 코드와 같이, 같은 메소드의 반복이 자주 등장하는 코드의 경우 이를 통으로 변환하는 것이 더 유리할 수 있다.","position":{"start":{"line":123,"column":1,"offset":4682},"end":{"line":123,"column":78,"offset":4759},"indent":[]}}],"position":{"start":{"line":123,"column":1,"offset":4682},"end":{"line":123,"column":78,"offset":4759},"indent":[]}},{"type":"html","lang":"java","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">int</span> total <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   total <span class=\"token operator\">+=</span> i<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":125,"column":1,"offset":4761},"end":{"line":130,"column":4,"offset":4836},"indent":[1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#jit-compiler","title":null,"children":[],"data":{"hProperties":{"aria-label":"jit compiler permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"JIT Compiler","position":{"start":{"line":132,"column":5,"offset":4842},"end":{"line":132,"column":17,"offset":4854},"indent":[]}}],"position":{"start":{"line":132,"column":1,"offset":4838},"end":{"line":132,"column":17,"offset":4854},"indent":[]},"data":{"id":"jit-compiler","htmlAttributes":{"id":"jit-compiler"},"hProperties":{"id":"jit-compiler","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"   앞서 설명한 것과 같이, 반복되는 코드가 빈번한 경우, 인터프리터 방식이 성능상 비효율적일 수 있다. 실행 엔진은 ","position":{"start":{"line":134,"column":1,"offset":4856},"end":{"line":134,"column":68,"offset":4923},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">JIT Compiler</code>","position":{"start":{"line":134,"column":68,"offset":4923},"end":{"line":134,"column":82,"offset":4937},"indent":[]}},{"type":"text","value":" 를 통해 이를 해결한다.","position":{"start":{"line":134,"column":82,"offset":4937},"end":{"line":134,"column":96,"offset":4951},"indent":[]}}],"position":{"start":{"line":134,"column":1,"offset":4856},"end":{"line":134,"column":96,"offset":4951},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"   ","position":{"start":{"line":136,"column":1,"offset":4953},"end":{"line":136,"column":4,"offset":4956},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Profiler</code>","position":{"start":{"line":136,"column":4,"offset":4956},"end":{"line":136,"column":14,"offset":4966},"indent":[]}},{"type":"text","value":"를 통해 반복되는 코드(hotspot)를 발견하면 JIT Compiler는 이를 네이티브 머신 코드로 한번에 컴파일한다. 변환된 코드는 시스템에 의해 한번에 읽히게 되므로 성능이 향상된다.","position":{"start":{"line":136,"column":14,"offset":4966},"end":{"line":136,"column":119,"offset":5071},"indent":[]}}],"position":{"start":{"line":136,"column":1,"offset":4953},"end":{"line":136,"column":119,"offset":5071},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#garbage-collector","title":null,"children":[],"data":{"hProperties":{"aria-label":"garbage collector permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Garbage Collector","position":{"start":{"line":138,"column":4,"offset":5076},"end":{"line":138,"column":21,"offset":5093},"indent":[]}}],"position":{"start":{"line":138,"column":1,"offset":5073},"end":{"line":138,"column":21,"offset":5093},"indent":[]},"data":{"id":"garbage-collector","htmlAttributes":{"id":"garbage-collector"},"hProperties":{"id":"garbage-collector","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"   ","position":{"start":{"line":140,"column":1,"offset":5095},"end":{"line":140,"column":4,"offset":5098},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Garbage Collector</code>","position":{"start":{"line":140,"column":4,"offset":5098},"end":{"line":140,"column":23,"offset":5117},"indent":[]}},{"type":"text","value":" 는 Heap Area에 로드 되었지만 현재는 참조 되고 있지 않는 오브젝트들을 찾아서 지우고, 사용되지 않는 메모리 공간을 다시 회수한다.","position":{"start":{"line":140,"column":23,"offset":5117},"end":{"line":140,"column":101,"offset":5195},"indent":[]}}],"position":{"start":{"line":140,"column":1,"offset":5095},"end":{"line":140,"column":101,"offset":5195},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"   이는 다음의 두 과정을 거친다.","position":{"start":{"line":142,"column":1,"offset":5197},"end":{"line":142,"column":21,"offset":5217},"indent":[]}}],"position":{"start":{"line":142,"column":1,"offset":5197},"end":{"line":142,"column":21,"offset":5217},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Mark","position":{"start":{"line":144,"column":6,"offset":5224},"end":{"line":144,"column":10,"offset":5228},"indent":[]}}],"position":{"start":{"line":144,"column":4,"offset":5222},"end":{"line":144,"column":12,"offset":5230},"indent":[]}},{"type":"text","value":" : GC가 참조되지 않는 오브젝트들을 찾아서 mark한다.","position":{"start":{"line":144,"column":12,"offset":5230},"end":{"line":144,"column":45,"offset":5263},"indent":[]}}],"position":{"start":{"line":144,"column":4,"offset":5222},"end":{"line":144,"column":45,"offset":5263},"indent":[]}}],"position":{"start":{"line":144,"column":1,"offset":5219},"end":{"line":144,"column":45,"offset":5263},"indent":[]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Sweep","position":{"start":{"line":145,"column":6,"offset":5269},"end":{"line":145,"column":11,"offset":5274},"indent":[]}}],"position":{"start":{"line":145,"column":4,"offset":5267},"end":{"line":145,"column":13,"offset":5276},"indent":[]}},{"type":"text","value":" : GC가 mark 된 오브젝트들을 힙 메모리로부터 정리한다.","position":{"start":{"line":145,"column":13,"offset":5276},"end":{"line":145,"column":48,"offset":5311},"indent":[]}}],"position":{"start":{"line":145,"column":4,"offset":5267},"end":{"line":145,"column":48,"offset":5311},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"GC는 JVM에 의해 텀을 두고 자동으로 동작한다. ","position":{"start":{"line":147,"column":4,"offset":5316},"end":{"line":147,"column":33,"offset":5345},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">System.gc()</code>","position":{"start":{"line":147,"column":33,"offset":5345},"end":{"line":147,"column":46,"offset":5358},"indent":[]}},{"type":"text","value":" 를 통해 명시적으로 호출하는 방법도 있지만 이는 즉시 동작을 보장하진 않는다. 또한 JVM은 GC를 수행할 때, 이를 실행하는 쓰레드 이외에는 작업을 중단(","position":{"start":{"line":147,"column":46,"offset":5358},"end":{"line":147,"column":134,"offset":5446},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Stop The World</code>","position":{"start":{"line":147,"column":134,"offset":5446},"end":{"line":147,"column":150,"offset":5462},"indent":[]}},{"type":"text","value":")하게 되므로 명시적인 호출은 지양해야 한다.","position":{"start":{"line":147,"column":150,"offset":5462},"end":{"line":147,"column":175,"offset":5487},"indent":[]}}],"position":{"start":{"line":147,"column":4,"offset":5316},"end":{"line":147,"column":175,"offset":5487},"indent":[]}}],"position":{"start":{"line":145,"column":1,"offset":5264},"end":{"line":147,"column":175,"offset":5487},"indent":[1,1]}}],"position":{"start":{"line":144,"column":1,"offset":5219},"end":{"line":147,"column":175,"offset":5487},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"(GC는 그 자체로 하나의 아티클로 다루어야 할 규모의 주제라 생각한다. 추후 별도의 학습 포스트로 다뤄 볼 예정이므로, 이번 포스트에서는 대표적인 몇 가지 GC만 가볍게 살펴보고 넘어가려 한다.)","position":{"start":{"line":149,"column":1,"offset":5489},"end":{"line":149,"column":111,"offset":5599},"indent":[]}}],"position":{"start":{"line":149,"column":1,"offset":5489},"end":{"line":149,"column":111,"offset":5599},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#serial-gc","title":null,"children":[],"data":{"hProperties":{"aria-label":"serial gc permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Serial GC","position":{"start":{"line":151,"column":5,"offset":5605},"end":{"line":151,"column":14,"offset":5614},"indent":[]}}],"position":{"start":{"line":151,"column":1,"offset":5601},"end":{"line":151,"column":14,"offset":5614},"indent":[]},"data":{"id":"serial-gc","htmlAttributes":{"id":"serial-gc"},"hProperties":{"id":"serial-gc","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"   싱글 쓰레드 환경의 작은 애플리케이션에서 동작하는 가장 단순한 방식의 GC 구현체이다. 싱글 쓰레드 환경에만 적합한 GC이기 때문에 GC가 동작할 때 애플리케이션 전체가 중지(","position":{"start":{"line":153,"column":1,"offset":5616},"end":{"line":153,"column":102,"offset":5717},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Stop The World</code>","position":{"start":{"line":153,"column":102,"offset":5717},"end":{"line":153,"column":118,"offset":5733},"indent":[]}},{"type":"text","value":") 된다.","position":{"start":{"line":153,"column":118,"offset":5733},"end":{"line":153,"column":123,"offset":5738},"indent":[]}}],"position":{"start":{"line":153,"column":1,"offset":5616},"end":{"line":153,"column":123,"offset":5738},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#parallel-gc","title":null,"children":[],"data":{"hProperties":{"aria-label":"parallel gc permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Parallel GC","position":{"start":{"line":155,"column":5,"offset":5744},"end":{"line":155,"column":16,"offset":5755},"indent":[]}}],"position":{"start":{"line":155,"column":1,"offset":5740},"end":{"line":155,"column":16,"offset":5755},"indent":[]},"data":{"id":"parallel-gc","htmlAttributes":{"id":"parallel-gc"},"hProperties":{"id":"parallel-gc","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"   JVM의 Java 8의 default GC 구현체이며, 다중 쓰레드 환경을 지원한다. ","position":{"start":{"line":157,"column":1,"offset":5757},"end":{"line":157,"column":52,"offset":5808},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Serial GC</code>","position":{"start":{"line":157,"column":52,"offset":5808},"end":{"line":157,"column":63,"offset":5819},"indent":[]}},{"type":"text","value":" 보다 빠른 퍼포먼스를 보여준다.","position":{"start":{"line":157,"column":63,"offset":5819},"end":{"line":157,"column":81,"offset":5837},"indent":[]}}],"position":{"start":{"line":157,"column":1,"offset":5757},"end":{"line":157,"column":81,"offset":5837},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#garbage-first-gc-g1-gc","title":null,"children":[],"data":{"hProperties":{"aria-label":"garbage first gc g1 gc permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Garbage First GC (G1 GC)","position":{"start":{"line":159,"column":5,"offset":5843},"end":{"line":159,"column":29,"offset":5867},"indent":[]}}],"position":{"start":{"line":159,"column":1,"offset":5839},"end":{"line":159,"column":29,"offset":5867},"indent":[]},"data":{"id":"garbage-first-gc-g1-gc","htmlAttributes":{"id":"garbage-first-gc-g1-gc"},"hProperties":{"id":"garbage-first-gc-g1-gc","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"멀티 프로세스 환경을 지원하기 위해 개발 된 GC 구현체이며, 대용량 메모리 운용이 가능하다. ","position":{"start":{"line":161,"column":1,"offset":5869},"end":{"line":161,"column":54,"offset":5922},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Stop The World</code>","position":{"start":{"line":161,"column":54,"offset":5922},"end":{"line":161,"column":70,"offset":5938},"indent":[]}},{"type":"text","value":" 시간을 최소화 하였지만, 이를 완전 해결하지는 못했다. Java 9부터 default GC 구현체이다.","position":{"start":{"line":161,"column":70,"offset":5938},"end":{"line":161,"column":128,"offset":5996},"indent":[]}}],"position":{"start":{"line":161,"column":1,"offset":5869},"end":{"line":161,"column":128,"offset":5996},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#java-native-interface-jni","title":null,"children":[],"data":{"hProperties":{"aria-label":"java native interface jni permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Java Native Interface (JNI)","position":{"start":{"line":164,"column":4,"offset":6002},"end":{"line":164,"column":31,"offset":6029},"indent":[]}}],"position":{"start":{"line":164,"column":1,"offset":5999},"end":{"line":164,"column":31,"offset":6029},"indent":[]},"data":{"id":"java-native-interface-jni","htmlAttributes":{"id":"java-native-interface-jni"},"hProperties":{"id":"java-native-interface-jni","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"  ","position":{"start":{"line":166,"column":1,"offset":6031},"end":{"line":166,"column":3,"offset":6033},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Runtime Data Area</code>","position":{"start":{"line":166,"column":3,"offset":6033},"end":{"line":166,"column":22,"offset":6052},"indent":[]}},{"type":"text","value":" 를 다루며 ","position":{"start":{"line":166,"column":22,"offset":6052},"end":{"line":166,"column":29,"offset":6059},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Native Method Stacks</code>","position":{"start":{"line":166,"column":29,"offset":6059},"end":{"line":166,"column":51,"offset":6081},"indent":[]}},{"type":"text","value":" 에 대해 간단히 알아보았다. \n  JNI 역시 Java가 아닌 네이티브 코드를 사용하여 OS 혹은 하드웨어를 컨트롤하는 프로그램 혹은 라이브러리의 사용을 가능케한다.","position":{"start":{"line":166,"column":51,"offset":6081},"end":{"line":167,"column":76,"offset":6174},"indent":[1]}}],"position":{"start":{"line":166,"column":1,"offset":6031},"end":{"line":167,"column":76,"offset":6174},"indent":[1]}},{"type":"html","value":"<br/>","position":{"start":{"line":169,"column":1,"offset":6176},"end":{"line":169,"column":6,"offset":6181},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#references","title":null,"children":[],"data":{"hProperties":{"aria-label":"references permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"References:","position":{"start":{"line":171,"column":5,"offset":6187},"end":{"line":171,"column":16,"offset":6198},"indent":[]}}],"position":{"start":{"line":171,"column":1,"offset":6183},"end":{"line":171,"column":16,"offset":6198},"indent":[]},"data":{"id":"references","htmlAttributes":{"id":"references"},"hProperties":{"id":"references","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://www.infoworld.com/article/3272244/what-is-the-jvm-introducing-the-java-virtual-machine.html","children":[{"type":"text","value":"https://www.infoworld.com/article/3272244/what-is-the-jvm-introducing-the-java-virtual-machine.html","position":{"start":{"line":172,"column":2,"offset":6200},"end":{"line":172,"column":101,"offset":6299},"indent":[]}}],"position":{"start":{"line":172,"column":1,"offset":6199},"end":{"line":172,"column":203,"offset":6401},"indent":[]},"data":{"hProperties":{"target":"_blank","rel":"nofollow noopener noreferrer"}}},{"type":"text","value":"\n","position":{"start":{"line":172,"column":203,"offset":6401},"end":{"line":173,"column":1,"offset":6402},"indent":[1]}},{"type":"link","title":null,"url":"https://en.wikipedia.org/wiki/Java_virtual_machine","children":[{"type":"text","value":"https://en.wikipedia.org/wiki/Java","position":{"start":{"line":173,"column":2,"offset":6403},"end":{"line":173,"column":36,"offset":6437},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"virtual","position":{"start":{"line":173,"column":37,"offset":6438},"end":{"line":173,"column":44,"offset":6445},"indent":[]}}],"position":{"start":{"line":173,"column":36,"offset":6437},"end":{"line":173,"column":45,"offset":6446},"indent":[]}},{"type":"text","value":"machine","position":{"start":{"line":173,"column":45,"offset":6446},"end":{"line":173,"column":52,"offset":6453},"indent":[]}}],"position":{"start":{"line":173,"column":1,"offset":6402},"end":{"line":173,"column":105,"offset":6506},"indent":[]},"data":{"hProperties":{"target":"_blank","rel":"nofollow noopener noreferrer"}}},{"type":"text","value":"\n","position":{"start":{"line":173,"column":105,"offset":6506},"end":{"line":174,"column":1,"offset":6507},"indent":[1]}},{"type":"link","title":null,"url":"https://www.freecodecamp.org/news/jvm-tutorial-java-virtual-machine-architecture-explained-for-beginners/","children":[{"type":"text","value":"https://www.freecodecamp.org/news/jvm-tutorial-java-virtual-machine-architecture-explained-for-beginners/","position":{"start":{"line":174,"column":2,"offset":6508},"end":{"line":174,"column":107,"offset":6613},"indent":[]}}],"position":{"start":{"line":174,"column":1,"offset":6507},"end":{"line":174,"column":215,"offset":6721},"indent":[]},"data":{"hProperties":{"target":"_blank","rel":"nofollow noopener noreferrer"}}},{"type":"text","value":"\n","position":{"start":{"line":174,"column":215,"offset":6721},"end":{"line":175,"column":1,"offset":6722},"indent":[1]}},{"type":"link","title":null,"url":"https://www.redhat.com/ko/topics/virtualization/what-is-a-hypervisor","children":[{"type":"text","value":"https://www.redhat.com/ko/topics/virtualization/what-is-a-hypervisor","position":{"start":{"line":175,"column":2,"offset":6723},"end":{"line":175,"column":70,"offset":6791},"indent":[]}}],"position":{"start":{"line":175,"column":1,"offset":6722},"end":{"line":175,"column":141,"offset":6862},"indent":[]},"data":{"hProperties":{"target":"_blank","rel":"nofollow noopener noreferrer"}}},{"type":"text","value":"\n","position":{"start":{"line":175,"column":141,"offset":6862},"end":{"line":176,"column":1,"offset":6863},"indent":[1]}},{"type":"link","title":null,"url":"https://www.redhat.com/ko/topics/virtualization/what-is-a-virtual-machine","children":[{"type":"text","value":"https://www.redhat.com/ko/topics/virtualization/what-is-a-virtual-machine","position":{"start":{"line":176,"column":2,"offset":6864},"end":{"line":176,"column":75,"offset":6937},"indent":[]}}],"position":{"start":{"line":176,"column":1,"offset":6863},"end":{"line":176,"column":151,"offset":7013},"indent":[]},"data":{"hProperties":{"target":"_blank","rel":"nofollow noopener noreferrer"}}}],"position":{"start":{"line":172,"column":1,"offset":6199},"end":{"line":176,"column":151,"offset":7013},"indent":[1,1,1,1]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":176,"column":151,"offset":7013}}}}