{"expireTime":9007200904349025000,"key":"transformer-remark-markdown-html-ast-cfe22e63ed1c64a67e6bb4d8d1f6b69d-gatsby-remark-imagesgatsby-remark-prismjsgatsby-remark-emojisgatsby-remark-autolink-headersgatsby-remark-katexgatsby-remark-external-linksgatsby-remark-copy-linked-files-","val":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":" ","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":7,"offset":7}}},{"type":"text","value":" ","position":{"start":{"line":2,"column":7,"offset":7},"end":{"line":2,"column":13,"offset":13}}},{"type":"text","value":"JVM(Java Virtual Machine)은 피지컬 머신에서 자바 코드를 컴파일하고 실행하기 위한 Java 생태계의 필수 요소라 할 수 있다.\n초기의 JVM은 Java 플랫폼만을 지원하도록 설계 되었지만, 현재는 Kotlin, Groovy, Scala와 같은 다양한 언어를 지원하고 있다. 이렇게 JVM이 지원하는 언어들을 통틀어 JVM languages라고도 한다.","position":{"start":{"line":2,"column":13,"offset":13},"end":{"line":3,"column":126,"offset":220}}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":3,"column":126,"offset":220}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{"id":"jvm-java-virtual-machine","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#jvm-java-virtual-machine","aria-label":"jvm java virtual machine permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"JVM (Java Virtual Machine)","position":{"start":{"line":6,"column":3,"offset":225},"end":{"line":6,"column":29,"offset":251}}}],"position":{"start":{"line":6,"column":1,"offset":223},"end":{"line":6,"column":29,"offset":251}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":" ","position":{"start":{"line":8,"column":1,"offset":253},"end":{"line":8,"column":7,"offset":259}}},{"type":"text","value":" ","position":{"start":{"line":8,"column":7,"offset":259},"end":{"line":8,"column":13,"offset":265}}},{"type":"text","value":"이름에서 살펴볼 수 있 듯 JVM을 ","position":{"start":{"line":8,"column":13,"offset":265},"end":{"line":8,"column":33,"offset":285}}},{"type":"raw","value":"<code class=\"language-text\">가상 머신(Virtual Machine)</code>","position":{"start":{"line":8,"column":33,"offset":285},"end":{"line":8,"column":57,"offset":309}}},{"type":"text","value":"이라 부르고 있다. 가상머신이란 하나의 물리적인 하드웨어 위에서 격리되어 구동되는 가상 환경이라 할 수 있다.","position":{"start":{"line":8,"column":57,"offset":309},"end":{"line":8,"column":118,"offset":370}}}],"position":{"start":{"line":8,"column":1,"offset":253},"end":{"line":8,"column":118,"offset":370}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"[VM 이미지]","position":{"start":{"line":10,"column":2,"offset":373},"end":{"line":10,"column":8,"offset":379}}}],"position":{"start":{"line":10,"column":1,"offset":372},"end":{"line":10,"column":9,"offset":380}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":" ","position":{"start":{"line":12,"column":1,"offset":382},"end":{"line":12,"column":7,"offset":388}}},{"type":"text","value":" ","position":{"start":{"line":12,"column":7,"offset":388},"end":{"line":12,"column":13,"offset":394}}},{"type":"text","value":"하나의 가상머신은 하이퍼바이저라는 소프트웨어가 설치된 하나의 호스트 머신 위에서 각각 격리되어 CPU, 메모리, 스토리지, 네트워크 인터페이스를 갖추고 있다. 이러한 ","position":{"start":{"line":12,"column":13,"offset":394},"end":{"line":12,"column":106,"offset":487}}},{"type":"raw","value":"<code class=\"language-text\">System Virtual Machine</code>","position":{"start":{"line":12,"column":106,"offset":487},"end":{"line":12,"column":130,"offset":511}}},{"type":"text","value":"은 격리된 환경에서 기능적으로 OS가 제공하는 대부분의 기능들을 제공한다.","position":{"start":{"line":12,"column":130,"offset":511},"end":{"line":12,"column":171,"offset":552}}}],"position":{"start":{"line":12,"column":1,"offset":382},"end":{"line":12,"column":171,"offset":552}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":" ","position":{"start":{"line":14,"column":1,"offset":554},"end":{"line":14,"column":7,"offset":560}}},{"type":"text","value":" ","position":{"start":{"line":14,"column":7,"offset":560},"end":{"line":14,"column":13,"offset":566}}},{"type":"text","value":"JVM은 OS로부터 메모리 공간을 할당 받아 해당 메모리를 자체적으로 관리하며, 독립적인 런타임 환경에서 Java 클래스 파일을 실행하는 ","position":{"start":{"line":14,"column":13,"offset":566},"end":{"line":14,"column":90,"offset":643}}},{"type":"raw","value":"<code class=\"language-text\">Process Virtual Machine</code>","position":{"start":{"line":14,"column":90,"offset":643},"end":{"line":14,"column":115,"offset":668}}},{"type":"text","value":"이라 할 수 있다.","position":{"start":{"line":14,"column":115,"offset":668},"end":{"line":14,"column":125,"offset":678}}}],"position":{"start":{"line":14,"column":1,"offset":554},"end":{"line":14,"column":125,"offset":678}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{"id":"jvm의-구성요소","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#jvm%EC%9D%98-%EA%B5%AC%EC%84%B1%EC%9A%94%EC%86%8C","aria-label":"jvm의 구성요소 permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"JVM의 구성요소","position":{"start":{"line":16,"column":3,"offset":682},"end":{"line":16,"column":12,"offset":691}}}],"position":{"start":{"line":16,"column":1,"offset":680},"end":{"line":16,"column":12,"offset":691}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":" ","position":{"start":{"line":18,"column":1,"offset":693},"end":{"line":18,"column":7,"offset":699}}},{"type":"text","value":" ","position":{"start":{"line":18,"column":7,"offset":699},"end":{"line":18,"column":13,"offset":705}}},{"type":"text","value":"컴파일 이후 JVM이 Java Application을 실행하는 큰 흐름은 다음과 같다.","position":{"start":{"line":18,"column":13,"offset":705},"end":{"line":18,"column":61,"offset":753}}}],"position":{"start":{"line":18,"column":1,"offset":693},"end":{"line":18,"column":61,"offset":753}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"(1) 컴파일 된 class 파일을 ","position":{"start":{"line":20,"column":3,"offset":757},"end":{"line":20,"column":23,"offset":777}}},{"type":"raw","value":"<code class=\"language-text\">Class Loader</code>","position":{"start":{"line":20,"column":23,"offset":777},"end":{"line":20,"column":37,"offset":791}}},{"type":"text","value":"가 ","position":{"start":{"line":20,"column":37,"offset":791},"end":{"line":20,"column":39,"offset":793}}},{"type":"raw","value":"<code class=\"language-text\">Runtime Data Area</code>","position":{"start":{"line":20,"column":39,"offset":793},"end":{"line":20,"column":58,"offset":812}}},{"type":"text","value":"에 로드한다. ","position":{"start":{"line":20,"column":58,"offset":812},"end":{"line":20,"column":66,"offset":820}}},{"type":"element","tagName":"br","properties":{},"children":[],"position":{"start":{"line":20,"column":66,"offset":820},"end":{"line":21,"column":3,"offset":824}}},{"type":"text","value":"\n"},{"type":"text","value":"(2) 적재한 바이트코드를 ","position":{"start":{"line":21,"column":3,"offset":824},"end":{"line":21,"column":18,"offset":839}}},{"type":"raw","value":"<code class=\"language-text\">Execution Engine</code>","position":{"start":{"line":21,"column":18,"offset":839},"end":{"line":21,"column":36,"offset":857}}},{"type":"text","value":"으로 실행한다. ","position":{"start":{"line":21,"column":36,"offset":857},"end":{"line":21,"column":45,"offset":866}}},{"type":"element","tagName":"br","properties":{},"children":[],"position":{"start":{"line":21,"column":45,"offset":866},"end":{"line":22,"column":3,"offset":870}}},{"type":"text","value":"\n"},{"type":"text","value":"(3) 실행 도 중 Heap 영역에서 더 이상 참조되지 않는 objects 들을 ","position":{"start":{"line":22,"column":3,"offset":870},"end":{"line":22,"column":48,"offset":915}}},{"type":"raw","value":"<code class=\"language-text\">Garbage Collector</code>","position":{"start":{"line":22,"column":48,"offset":915},"end":{"line":22,"column":67,"offset":934}}},{"type":"text","value":" 가 정리한다.","position":{"start":{"line":22,"column":67,"offset":934},"end":{"line":22,"column":75,"offset":942}}}],"position":{"start":{"line":20,"column":3,"offset":757},"end":{"line":22,"column":75,"offset":942}}},{"type":"text","value":"\n"}],"position":{"start":{"line":20,"column":1,"offset":755},"end":{"line":22,"column":75,"offset":942}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":" ","position":{"start":{"line":24,"column":1,"offset":944},"end":{"line":24,"column":7,"offset":950}}},{"type":"text","value":" ","position":{"start":{"line":24,"column":7,"offset":950},"end":{"line":24,"column":13,"offset":956}}},{"type":"text","value":"생략된 것이 많은 매우 간략한 내용이지만, 애플리케이션이 실행된 이후 종료되기까지, ","position":{"start":{"line":24,"column":13,"offset":956},"end":{"line":24,"column":60,"offset":1003}}},{"type":"element","tagName":"br","properties":{},"children":[],"position":{"start":{"line":24,"column":60,"offset":1003},"end":{"line":25,"column":1,"offset":1005}}},{"type":"text","value":"\n"},{"type":"raw","value":"<code class=\"language-text\">Class Loader</code>","position":{"start":{"line":25,"column":1,"offset":1005},"end":{"line":25,"column":15,"offset":1019}}},{"type":"text","value":", ","position":{"start":{"line":25,"column":15,"offset":1019},"end":{"line":25,"column":17,"offset":1021}}},{"type":"raw","value":"<code class=\"language-text\">Runtime Data Area</code>","position":{"start":{"line":25,"column":17,"offset":1021},"end":{"line":25,"column":36,"offset":1040}}},{"type":"text","value":", ","position":{"start":{"line":25,"column":36,"offset":1040},"end":{"line":25,"column":38,"offset":1042}}},{"type":"raw","value":"<code class=\"language-text\">Execution Engine</code>","position":{"start":{"line":25,"column":38,"offset":1042},"end":{"line":25,"column":56,"offset":1060}}},{"type":"text","value":", ","position":{"start":{"line":25,"column":56,"offset":1060},"end":{"line":25,"column":58,"offset":1062}}},{"type":"raw","value":"<code class=\"language-text\">Garbage Collector</code>","position":{"start":{"line":25,"column":58,"offset":1062},"end":{"line":25,"column":77,"offset":1081}}},{"type":"text","value":" 네 가지 JVM 컴포넌트들이 이런 유기적인 상호작용을 하며 동작한다.","position":{"start":{"line":25,"column":77,"offset":1081},"end":{"line":25,"column":116,"offset":1120}}}],"position":{"start":{"line":24,"column":1,"offset":944},"end":{"line":25,"column":116,"offset":1120}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":" ","position":{"start":{"line":27,"column":1,"offset":1122},"end":{"line":27,"column":7,"offset":1128}}},{"type":"text","value":" ","position":{"start":{"line":27,"column":7,"offset":1128},"end":{"line":27,"column":13,"offset":1134}}},{"type":"text","value":"JVM의 핵심 컴포넌트들은 다음과 같은 구조를 이룬다.","position":{"start":{"line":27,"column":13,"offset":1134},"end":{"line":27,"column":43,"offset":1164}}}],"position":{"start":{"line":27,"column":1,"offset":1122},"end":{"line":27,"column":43,"offset":1164}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"[JVM의 구조 이미지]","position":{"start":{"line":29,"column":2,"offset":1167},"end":{"line":29,"column":13,"offset":1178}}}],"position":{"start":{"line":29,"column":1,"offset":1166},"end":{"line":29,"column":14,"offset":1179}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":" ","position":{"start":{"line":31,"column":1,"offset":1181},"end":{"line":31,"column":7,"offset":1187}}},{"type":"text","value":" ","position":{"start":{"line":31,"column":7,"offset":1187},"end":{"line":31,"column":13,"offset":1193}}},{"type":"text","value":"JVM을 구성하는 핵심 컴포넌트들을 정확하게 이해하는 것이 곧 JVM을 이해하는 것이라 할 수 있다. ","position":{"start":{"line":31,"column":13,"offset":1193},"end":{"line":31,"column":70,"offset":1250}}},{"type":"element","tagName":"br","properties":{},"children":[],"position":{"start":{"line":31,"column":70,"offset":1250},"end":{"line":32,"column":1,"offset":1252}}},{"type":"text","value":"\n"},{"type":"text","value":"이제부터 각 컴포넌트들을 자세히 학습 해보면서 JVM에 대한 이해도를 더욱 높여보고자 한다.","position":{"start":{"line":32,"column":1,"offset":1252},"end":{"line":32,"column":52,"offset":1303}}}],"position":{"start":{"line":31,"column":1,"offset":1181},"end":{"line":32,"column":52,"offset":1303}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"class-loader","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#class-loader","aria-label":"class loader permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Class Loader","position":{"start":{"line":34,"column":4,"offset":1308},"end":{"line":34,"column":16,"offset":1320}}}],"position":{"start":{"line":34,"column":1,"offset":1305},"end":{"line":34,"column":16,"offset":1320}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":" ","position":{"start":{"line":36,"column":1,"offset":1322},"end":{"line":36,"column":7,"offset":1328}}},{"type":"text","value":" ","position":{"start":{"line":36,"column":7,"offset":1328},"end":{"line":36,"column":13,"offset":1334}}},{"type":"text","value":"클래스 로더는 컴파일 된 바이트 코드(","position":{"start":{"line":36,"column":13,"offset":1334},"end":{"line":36,"column":34,"offset":1355}}},{"type":"raw","value":"<code class=\"language-text\">.class</code>","position":{"start":{"line":36,"column":34,"offset":1355},"end":{"line":36,"column":42,"offset":1363}}},{"type":"text","value":" files)들을 ","position":{"start":{"line":36,"column":42,"offset":1363},"end":{"line":36,"column":52,"offset":1373}}},{"type":"raw","value":"<code class=\"language-text\">Runtime Data Area</code>","position":{"start":{"line":36,"column":52,"offset":1373},"end":{"line":36,"column":71,"offset":1392}}},{"type":"text","value":" 에 로드한다. ","position":{"start":{"line":36,"column":71,"offset":1392},"end":{"line":36,"column":80,"offset":1401}}},{"type":"element","tagName":"br","properties":{},"children":[],"position":{"start":{"line":36,"column":80,"offset":1401},"end":{"line":37,"column":1,"offset":1403}}},{"type":"text","value":"\n"},{"type":"text","value":"여기서 주의해야 할 것은, 모든 클래스 파일들을 이 시점에 로드하는 것이 아니라는 점이다. JVM의 기본 클래스 로딩 방식은 Lazy loading이다. ","position":{"start":{"line":37,"column":1,"offset":1403},"end":{"line":37,"column":87,"offset":1489}}},{"type":"raw","value":"<code class=\"language-text\">main()</code>","position":{"start":{"line":37,"column":87,"offset":1489},"end":{"line":37,"column":95,"offset":1497}}},{"type":"text","value":" 메소드가 위치한 클래스를 로드하고, 실행엔진으로 바이트 코드를 해석하며, 필요할 때 마다 각 클래스를 메인 메모리에 적재하고 읽어들인다.","position":{"start":{"line":37,"column":95,"offset":1497},"end":{"line":37,"column":172,"offset":1574}}}],"position":{"start":{"line":36,"column":1,"offset":1322},"end":{"line":37,"column":172,"offset":1574}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":" ","position":{"start":{"line":39,"column":1,"offset":1576},"end":{"line":39,"column":7,"offset":1582}}},{"type":"text","value":" ","position":{"start":{"line":39,"column":7,"offset":1582},"end":{"line":39,"column":13,"offset":1588}}},{"type":"text","value":"클래스 로더의 세부 구성을 살펴보면 다음과 같다.","position":{"start":{"line":39,"column":13,"offset":1588},"end":{"line":39,"column":40,"offset":1615}}}],"position":{"start":{"line":39,"column":1,"offset":1576},"end":{"line":39,"column":40,"offset":1615}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"[클래스 로더 이미지]","position":{"start":{"line":41,"column":2,"offset":1618},"end":{"line":41,"column":12,"offset":1628}}}],"position":{"start":{"line":41,"column":1,"offset":1617},"end":{"line":41,"column":13,"offset":1629}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":" ","position":{"start":{"line":43,"column":1,"offset":1631},"end":{"line":43,"column":7,"offset":1637}}},{"type":"text","value":" ","position":{"start":{"line":43,"column":7,"offset":1637},"end":{"line":43,"column":13,"offset":1643}}},{"type":"text","value":"클래스 로더의 동작 메커니즘은 크게 ","position":{"start":{"line":43,"column":13,"offset":1643},"end":{"line":43,"column":33,"offset":1663}}},{"type":"raw","value":"<code class=\"language-text\">Loading</code>","position":{"start":{"line":43,"column":33,"offset":1663},"end":{"line":43,"column":42,"offset":1672}}},{"type":"text","value":", ","position":{"start":{"line":43,"column":42,"offset":1672},"end":{"line":43,"column":44,"offset":1674}}},{"type":"raw","value":"<code class=\"language-text\">Linking</code>","position":{"start":{"line":43,"column":44,"offset":1674},"end":{"line":43,"column":53,"offset":1683}}},{"type":"text","value":", ","position":{"start":{"line":43,"column":53,"offset":1683},"end":{"line":43,"column":55,"offset":1685}}},{"type":"raw","value":"<code class=\"language-text\">Initialization</code>","position":{"start":{"line":43,"column":55,"offset":1685},"end":{"line":43,"column":71,"offset":1701}}},{"type":"text","value":"  세 단계의 절차로 수행된다. ","position":{"start":{"line":43,"column":71,"offset":1701},"end":{"line":43,"column":89,"offset":1719}}},{"type":"element","tagName":"br","properties":{},"children":[],"position":{"start":{"line":43,"column":89,"offset":1719},"end":{"line":44,"column":1,"offset":1721}}},{"type":"text","value":"\n"},{"type":"text","value":"각 과정들을 하나씩 살펴보자.","position":{"start":{"line":44,"column":1,"offset":1721},"end":{"line":44,"column":17,"offset":1737}}}],"position":{"start":{"line":43,"column":1,"offset":1631},"end":{"line":44,"column":17,"offset":1737}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"loading","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#loading","aria-label":"loading permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Loading","position":{"start":{"line":46,"column":5,"offset":1743},"end":{"line":46,"column":12,"offset":1750}}}],"position":{"start":{"line":46,"column":1,"offset":1739},"end":{"line":46,"column":12,"offset":1750}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":" ","position":{"start":{"line":47,"column":1,"offset":1751},"end":{"line":47,"column":7,"offset":1757}}},{"type":"text","value":" ","position":{"start":{"line":47,"column":7,"offset":1757},"end":{"line":47,"column":13,"offset":1763}}},{"type":"text","value":"클래스 로더가 바이트 코드를 JVM에 로드하는 과정이다.","position":{"start":{"line":47,"column":13,"offset":1763},"end":{"line":47,"column":44,"offset":1794}}},{"type":"raw","value":"<code class=\"language-text\">java.lang</code>","position":{"start":{"line":47,"column":44,"offset":1794},"end":{"line":47,"column":55,"offset":1805}}},{"type":"text","value":", ","position":{"start":{"line":47,"column":55,"offset":1805},"end":{"line":47,"column":57,"offset":1807}}},{"type":"raw","value":"<code class=\"language-text\">java.util</code>","position":{"start":{"line":47,"column":57,"offset":1807},"end":{"line":47,"column":68,"offset":1818}}},{"type":"text","value":" 같은 Java의 스탠다드 패키지부터 라이브러리까지 각 바이트 코드마다 담당하는 클래스 로더가 다르다. 내부적으로 JVM이 ","position":{"start":{"line":47,"column":68,"offset":1818},"end":{"line":47,"column":137,"offset":1887}}},{"type":"raw","value":"<code class=\"language-text\">ClassLoader.loadClass()</code>","position":{"start":{"line":47,"column":137,"offset":1887},"end":{"line":47,"column":162,"offset":1912}}},{"type":"text","value":" 를 실행하여 메모리에 바이트 코드를 적재한다. ","position":{"start":{"line":47,"column":162,"offset":1912},"end":{"line":47,"column":189,"offset":1939}}}],"position":{"start":{"line":47,"column":1,"offset":1751},"end":{"line":47,"column":189,"offset":1939}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":" ","position":{"start":{"line":49,"column":1,"offset":1941},"end":{"line":49,"column":7,"offset":1947}}},{"type":"text","value":" ","position":{"start":{"line":49,"column":7,"offset":1947},"end":{"line":49,"column":13,"offset":1953}}},{"type":"text","value":"Class Loader의 세부적인 계층 구성은 다음과 같다. ","position":{"start":{"line":49,"column":13,"offset":1953},"end":{"line":49,"column":47,"offset":1987}}}],"position":{"start":{"line":49,"column":1,"offset":1941},"end":{"line":49,"column":47,"offset":1987}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"[Class Loader 계층 구성 이미지]","position":{"start":{"line":51,"column":2,"offset":1990},"end":{"line":51,"column":24,"offset":2012}}}],"position":{"start":{"line":51,"column":1,"offset":1989},"end":{"line":51,"column":25,"offset":2013}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Boostrap Class Loader","position":{"start":{"line":53,"column":5,"offset":2019},"end":{"line":53,"column":26,"offset":2040}}}],"position":{"start":{"line":53,"column":3,"offset":2017},"end":{"line":53,"column":28,"offset":2042}}},{"type":"text","value":" : 모든 클래스 로더의 루트 레벨로써, ","position":{"start":{"line":53,"column":28,"offset":2042},"end":{"line":53,"column":51,"offset":2065}}},{"type":"raw","value":"<code class=\"language-text\">rt.jar</code>","position":{"start":{"line":53,"column":51,"offset":2065},"end":{"line":53,"column":59,"offset":2073}}},{"type":"text","value":"  파일에 위치하는 Java의 스탠다드 패키지들과 ","position":{"start":{"line":53,"column":59,"offset":2073},"end":{"line":53,"column":87,"offset":2101}}},{"type":"raw","value":"<code class=\"language-text\">$JAVA_HOME/jre/lib</code>","position":{"start":{"line":53,"column":87,"offset":2101},"end":{"line":53,"column":107,"offset":2121}}},{"type":"text","value":" 에 있는 코어 라이브러리들을 로드한다.","position":{"start":{"line":53,"column":107,"offset":2121},"end":{"line":53,"column":129,"offset":2143}}}],"position":{"start":{"line":53,"column":1,"offset":2015},"end":{"line":53,"column":129,"offset":2143}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Extention Class Loader :","position":{"start":{"line":54,"column":5,"offset":2148},"end":{"line":54,"column":29,"offset":2172}}}],"position":{"start":{"line":54,"column":3,"offset":2146},"end":{"line":54,"column":31,"offset":2174}}},{"type":"text","value":" ","position":{"start":{"line":54,"column":31,"offset":2174},"end":{"line":54,"column":32,"offset":2175}}},{"type":"raw","value":"<code class=\"language-text\">$JAVA_HOME/jre/lib/ext</code>","position":{"start":{"line":54,"column":32,"offset":2175},"end":{"line":54,"column":56,"offset":2199}}},{"type":"text","value":" 에 위치하는 extension Java 라이브러리들을 로드한다.","position":{"start":{"line":54,"column":56,"offset":2199},"end":{"line":54,"column":92,"offset":2235}}}],"position":{"start":{"line":54,"column":1,"offset":2144},"end":{"line":54,"column":92,"offset":2235}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Application Class Loader","position":{"start":{"line":55,"column":5,"offset":2240},"end":{"line":55,"column":29,"offset":2264}}}],"position":{"start":{"line":55,"column":3,"offset":2238},"end":{"line":55,"column":31,"offset":2266}}},{"type":"text","value":" : ","position":{"start":{"line":55,"column":31,"offset":2266},"end":{"line":55,"column":34,"offset":2269}}},{"type":"raw","value":"<code class=\"language-text\">classpath</code>","position":{"start":{"line":55,"column":34,"offset":2269},"end":{"line":55,"column":45,"offset":2280}}},{"type":"text","value":" 에 위치한 클래스들을 찾아서 로드한다. 즉, 라이브러리로가 아닌 개발자가 작성한 소스파일로부터 생성된 바이트 코드들을 JVM에 적재한다.","position":{"start":{"line":55,"column":45,"offset":2280},"end":{"line":55,"column":122,"offset":2357}}}],"position":{"start":{"line":55,"column":1,"offset":2236},"end":{"line":55,"column":122,"offset":2357}}},{"type":"text","value":"\n"}],"position":{"start":{"line":53,"column":1,"offset":2015},"end":{"line":55,"column":122,"offset":2357}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":" ","position":{"start":{"line":57,"column":1,"offset":2359},"end":{"line":57,"column":7,"offset":2365}}},{"type":"text","value":"클래스 로더는 상위 로더부터 클래스를 하나씩 찾아간다. 최하단에 있는 클래스 로더까지(","position":{"start":{"line":57,"column":7,"offset":2365},"end":{"line":57,"column":55,"offset":2413}}},{"type":"raw","value":"<code class=\"language-text\">) 해당되는 클래스 파일을 찾지 못하면</code>","position":{"start":{"line":57,"column":55,"offset":2413},"end":{"line":57,"column":79,"offset":2437}}},{"type":"text","value":"ClassNotFoundException` 예외가 발생한다.\n","position":{"start":{"line":57,"column":79,"offset":2437},"end":{"line":58,"column":1,"offset":2472}}},{"type":"raw","value":"<br/>","position":{"start":{"line":58,"column":1,"offset":2472},"end":{"line":58,"column":6,"offset":2477}}}],"position":{"start":{"line":57,"column":1,"offset":2359},"end":{"line":58,"column":6,"offset":2477}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"linking","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#linking","aria-label":"linking permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Linking","position":{"start":{"line":59,"column":5,"offset":2482},"end":{"line":59,"column":12,"offset":2489}}}],"position":{"start":{"line":59,"column":1,"offset":2478},"end":{"line":59,"column":12,"offset":2489}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":" ","position":{"start":{"line":61,"column":1,"offset":2491},"end":{"line":61,"column":7,"offset":2497}}},{"type":"text","value":" ","position":{"start":{"line":61,"column":7,"offset":2497},"end":{"line":61,"column":13,"offset":2503}}},{"type":"text","value":"클래스 파일이 메모리에 적재 된 이후 의존하는 클래스 파일들을 서로 연결(Link)하고 검증하는 과정이다.","position":{"start":{"line":61,"column":13,"offset":2503},"end":{"line":61,"column":72,"offset":2562}}}],"position":{"start":{"line":61,"column":1,"offset":2491},"end":{"line":61,"column":72,"offset":2562}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Verification","position":{"start":{"line":62,"column":5,"offset":2567},"end":{"line":62,"column":17,"offset":2579}}}],"position":{"start":{"line":62,"column":3,"offset":2565},"end":{"line":62,"column":19,"offset":2581}}},{"type":"text","value":" : 클래스 파일의 유효성을 검증한다. 유효하지 않은 클래스 파일인 경우 ","position":{"start":{"line":62,"column":19,"offset":2581},"end":{"line":62,"column":60,"offset":2622}}},{"type":"raw","value":"<code class=\"language-text\">VerifyException</code>","position":{"start":{"line":62,"column":60,"offset":2622},"end":{"line":62,"column":77,"offset":2639}}},{"type":"text","value":" 이 발생한다.","position":{"start":{"line":62,"column":77,"offset":2639},"end":{"line":62,"column":85,"offset":2647}}}],"position":{"start":{"line":62,"column":1,"offset":2563},"end":{"line":62,"column":85,"offset":2647}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Preparation","position":{"start":{"line":63,"column":5,"offset":2652},"end":{"line":63,"column":16,"offset":2663}}}],"position":{"start":{"line":63,"column":3,"offset":2650},"end":{"line":63,"column":18,"offset":2665}}},{"type":"text","value":" : 유효성 검증을 통과한 클래스 파일들에 대하여 static 필드 및 클래스를 기본 값과 함께 초기화한다.","position":{"start":{"line":63,"column":18,"offset":2665},"end":{"line":63,"column":78,"offset":2725}}}],"position":{"start":{"line":63,"column":1,"offset":2648},"end":{"line":63,"column":78,"offset":2725}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Resolution","position":{"start":{"line":64,"column":5,"offset":2730},"end":{"line":64,"column":15,"offset":2740}}}],"position":{"start":{"line":64,"column":3,"offset":2728},"end":{"line":64,"column":17,"offset":2742}}},{"type":"text","value":" : Symbolic Reference 값들을 클래스, 상수, 메소드 등 Runtime Constant Pool에 있는 실제 메모리 참조 값(Actual Reference)으로 대체한다.","position":{"start":{"line":64,"column":17,"offset":2742},"end":{"line":64,"column":121,"offset":2846}}}],"position":{"start":{"line":64,"column":1,"offset":2726},"end":{"line":64,"column":121,"offset":2846}}},{"type":"text","value":"\n"}],"position":{"start":{"line":62,"column":1,"offset":2563},"end":{"line":64,"column":121,"offset":2846}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br/>","position":{"start":{"line":66,"column":1,"offset":2848},"end":{"line":66,"column":6,"offset":2853}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"initialization","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#initialization","aria-label":"initialization permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Initialization","position":{"start":{"line":68,"column":7,"offset":2861},"end":{"line":68,"column":21,"offset":2875}}}],"position":{"start":{"line":68,"column":5,"offset":2859},"end":{"line":68,"column":23,"offset":2877}}}],"position":{"start":{"line":68,"column":1,"offset":2855},"end":{"line":68,"column":23,"offset":2877}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   constructor, static  ****block 실행 등 초기화 과정이 수행된다. 클래스 로딩의 마지막 과정이라 할 수 있다. JVM은 멀티 쓰레드 환경에서 구동되기 때문에 Initialization 과정에서도 동시성 이슈가 발생할 여지가 있으므로 주의 해야한다.","position":{"start":{"line":70,"column":1,"offset":2879},"end":{"line":70,"column":155,"offset":3033}}}],"position":{"start":{"line":70,"column":1,"offset":2879},"end":{"line":70,"column":155,"offset":3033}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"runtime-data-area","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#runtime-data-area","aria-label":"runtime data area permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Runtime Data Area","position":{"start":{"line":72,"column":4,"offset":3038},"end":{"line":72,"column":21,"offset":3055}}}],"position":{"start":{"line":72,"column":1,"offset":3035},"end":{"line":72,"column":21,"offset":3055}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   앞서 살펴본 것과 같이 클래스 파일들은 Class Loader에 의해 Runtime Data Area에 적재 된다. Runtime Data Area는 5개 영역으로 나뉘어져 있는데, 애플리케이션 실행 도 중 데이터의 타입에 따라 ","position":{"start":{"line":74,"column":1,"offset":3057},"end":{"line":74,"column":132,"offset":3188}}},{"type":"raw","value":"<code class=\"language-text\">Method Area</code>","position":{"start":{"line":74,"column":132,"offset":3188},"end":{"line":74,"column":145,"offset":3201}}},{"type":"text","value":", ","position":{"start":{"line":74,"column":145,"offset":3201},"end":{"line":74,"column":147,"offset":3203}}},{"type":"raw","value":"<code class=\"language-text\">Heap Area</code>","position":{"start":{"line":74,"column":147,"offset":3203},"end":{"line":74,"column":158,"offset":3214}}},{"type":"text","value":", ","position":{"start":{"line":74,"column":158,"offset":3214},"end":{"line":74,"column":160,"offset":3216}}},{"type":"raw","value":"<code class=\"language-text\">Stack Area</code>","position":{"start":{"line":74,"column":160,"offset":3216},"end":{"line":74,"column":172,"offset":3228}}},{"type":"text","value":", ","position":{"start":{"line":74,"column":172,"offset":3228},"end":{"line":74,"column":174,"offset":3230}}},{"type":"raw","value":"<code class=\"language-text\">PC Register</code>","position":{"start":{"line":74,"column":174,"offset":3230},"end":{"line":74,"column":187,"offset":3243}}},{"type":"text","value":", ","position":{"start":{"line":74,"column":187,"offset":3243},"end":{"line":74,"column":189,"offset":3245}}},{"type":"raw","value":"<code class=\"language-text\">Native Method Stack</code>","position":{"start":{"line":74,"column":189,"offset":3245},"end":{"line":74,"column":210,"offset":3266}}},{"type":"text","value":" 영역에 저장되고 참조된다.","position":{"start":{"line":74,"column":210,"offset":3266},"end":{"line":74,"column":225,"offset":3281}}}],"position":{"start":{"line":74,"column":1,"offset":3057},"end":{"line":74,"column":225,"offset":3281}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"[이미지]","position":{"start":{"line":76,"column":2,"offset":3284},"end":{"line":76,"column":5,"offset":3287}}}],"position":{"start":{"line":76,"column":1,"offset":3283},"end":{"line":76,"column":6,"offset":3288}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"method-area","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#method-area","aria-label":"method area permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Method Area","position":{"start":{"line":78,"column":5,"offset":3294},"end":{"line":78,"column":16,"offset":3305}}}],"position":{"start":{"line":78,"column":1,"offset":3290},"end":{"line":78,"column":16,"offset":3305}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   실행 시점에 사용되는 Constant Pool, field, method, constructors 같은 데이터들이 위치한다. 만약 가용 공간이 부족하다면 ","position":{"start":{"line":80,"column":1,"offset":3307},"end":{"line":80,"column":90,"offset":3396}}},{"type":"raw","value":"<code class=\"language-text\">OutOfMemorryError</code>","position":{"start":{"line":80,"column":90,"offset":3396},"end":{"line":80,"column":109,"offset":3415}}},{"type":"text","value":" 가 발생한다. JVM 당 하나의 ","position":{"start":{"line":80,"column":109,"offset":3415},"end":{"line":80,"column":128,"offset":3434}}},{"type":"raw","value":"<code class=\"language-text\">Method Area</code>","position":{"start":{"line":80,"column":128,"offset":3434},"end":{"line":80,"column":141,"offset":3447}}},{"type":"text","value":" 를 가진다.","position":{"start":{"line":80,"column":141,"offset":3447},"end":{"line":80,"column":148,"offset":3454}}}],"position":{"start":{"line":80,"column":1,"offset":3307},"end":{"line":80,"column":148,"offset":3454}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"heap-area","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#heap-area","aria-label":"heap area permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Heap Area","position":{"start":{"line":82,"column":5,"offset":3460},"end":{"line":82,"column":14,"offset":3469}}}],"position":{"start":{"line":82,"column":1,"offset":3456},"end":{"line":82,"column":14,"offset":3469}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   객체 및 인스턴스 변수, 배열 등과 같은 타입의 값들이 위치한다.","position":{"start":{"line":84,"column":1,"offset":3471},"end":{"line":84,"column":40,"offset":3510}}}],"position":{"start":{"line":84,"column":1,"offset":3471},"end":{"line":84,"column":40,"offset":3510}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">Example</span> example <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Example</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":86,"column":1,"offset":3512},"end":{"line":88,"column":4,"offset":3556}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   예를 들어 위와 같은 코드를 동작 시키면 ","position":{"start":{"line":90,"column":1,"offset":3558},"end":{"line":90,"column":27,"offset":3584}}},{"type":"raw","value":"<code class=\"language-text\">Example</code>","position":{"start":{"line":90,"column":27,"offset":3584},"end":{"line":90,"column":36,"offset":3593}}},{"type":"text","value":" 인스턴스를 생성한 뒤 Heap Area에 배치한다. 메소드 영역과 마찬가지로 힙 영역 역시 JVM 당 하나의 공간만을 갖게 된다.","position":{"start":{"line":90,"column":36,"offset":3593},"end":{"line":90,"column":109,"offset":3666}}}],"position":{"start":{"line":90,"column":1,"offset":3558},"end":{"line":90,"column":109,"offset":3666}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"stack-area","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#stack-area","aria-label":"stack area permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Stack Area","position":{"start":{"line":92,"column":5,"offset":3672},"end":{"line":92,"column":15,"offset":3682}}}],"position":{"start":{"line":92,"column":1,"offset":3668},"end":{"line":92,"column":15,"offset":3682}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   특정 메소드가 호출 되고 실행되면서 사용되는 지역 변수(Local Variables), 중간 연산 결과(Operand Stack) 값이 갱신되며 저장되는 영역이다. 메소드 호출 시점마다 ","position":{"start":{"line":94,"column":1,"offset":3684},"end":{"line":94,"column":108,"offset":3791}}},{"type":"raw","value":"<code class=\"language-text\">Stack Frame</code>","position":{"start":{"line":94,"column":108,"offset":3791},"end":{"line":94,"column":121,"offset":3804}}},{"type":"text","value":"이라는 하나의 단위가 스택에 생성되고, 해당 메소드가 종료되는 시점에 파괴된다.","position":{"start":{"line":94,"column":121,"offset":3804},"end":{"line":94,"column":165,"offset":3848}}}],"position":{"start":{"line":94,"column":1,"offset":3684},"end":{"line":94,"column":165,"offset":3848}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   스택 영역은 JVM에 의해 쓰레드가 생성될 때 마다 각 쓰레드에 하나씩 할당된다. 따라서 동시성 문제로부터 자유롭다.","position":{"start":{"line":96,"column":1,"offset":3850},"end":{"line":96,"column":69,"offset":3918}}}],"position":{"start":{"line":96,"column":1,"offset":3850},"end":{"line":96,"column":69,"offset":3918}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"program-counter-pc-registers","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#program-counter-pc-registers","aria-label":"program counter pc registers permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Program Counter (PC) Registers","position":{"start":{"line":98,"column":5,"offset":3924},"end":{"line":98,"column":35,"offset":3954}}}],"position":{"start":{"line":98,"column":1,"offset":3920},"end":{"line":98,"column":35,"offset":3954}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   현재 실행되고 있는 명령어의 주소 값이 저장되는 공간이다. PC Register는 현재 실행하고 있는 명령어의 실행이 끝나면 다음 명령어의 주소 값을 갱신한다. 각 쓰레드 마다 하나의 PC Register가 할당된다.","position":{"start":{"line":100,"column":1,"offset":3956},"end":{"line":100,"column":125,"offset":4080}}}],"position":{"start":{"line":100,"column":1,"offset":3956},"end":{"line":100,"column":125,"offset":4080}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"native-method-stacks","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#native-method-stacks","aria-label":"native method stacks permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Native Method Stacks","position":{"start":{"line":102,"column":5,"offset":4086},"end":{"line":102,"column":25,"offset":4106}}}],"position":{"start":{"line":102,"column":1,"offset":4082},"end":{"line":102,"column":25,"offset":4106}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   Java가 아닌 C, C++과 같은 언어로 작성 된 메소드(Native Method) 실행을 지원하는 영역. 스택 영역과 같이 각 쓰레드마다 하나의 공간이 할당된다.","position":{"start":{"line":104,"column":1,"offset":4108},"end":{"line":104,"column":96,"offset":4203}}}],"position":{"start":{"line":104,"column":1,"offset":4108},"end":{"line":104,"column":96,"offset":4203}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"execution-engine","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#execution-engine","aria-label":"execution engine permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Execution Engine","position":{"start":{"line":106,"column":4,"offset":4208},"end":{"line":106,"column":20,"offset":4224}}}],"position":{"start":{"line":106,"column":1,"offset":4205},"end":{"line":106,"column":20,"offset":4224}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"[이미지]","position":{"start":{"line":108,"column":2,"offset":4227},"end":{"line":108,"column":5,"offset":4230}}}],"position":{"start":{"line":108,"column":1,"offset":4226},"end":{"line":108,"column":6,"offset":4231}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   Runtime Data Area에 각 바이트코드가 로드되면 ","position":{"start":{"line":110,"column":1,"offset":4233},"end":{"line":110,"column":37,"offset":4269}}},{"type":"raw","value":"<code class=\"language-text\">Execution Engine</code>","position":{"start":{"line":110,"column":37,"offset":4269},"end":{"line":110,"column":55,"offset":4287}}},{"type":"text","value":"이 이들을 실행하는데, Java compiler에 의해 생성된 클래스 파일들은 머신이 읽을 수 있는 기계어가 아닌 바이트 코드이다. 따라서 이를 한번 더 변환하는 과정이 필요하다.","position":{"start":{"line":110,"column":55,"offset":4287},"end":{"line":110,"column":155,"offset":4387}}}],"position":{"start":{"line":110,"column":1,"offset":4233},"end":{"line":110,"column":155,"offset":4387}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"  JVM은 효율성을 위해 두 가지 방법을 혼합하여 이를 실현한다. 기본 전략으로는 JavaScript, Python와 같은 언어 처럼 ","position":{"start":{"line":112,"column":1,"offset":4389},"end":{"line":112,"column":77,"offset":4465}}},{"type":"raw","value":"<code class=\"language-text\">Interpreter</code>","position":{"start":{"line":112,"column":77,"offset":4465},"end":{"line":112,"column":90,"offset":4478}}},{"type":"text","value":"가 한 라인씩 바이트 코드를 해석하는 방식을 사용하고, 만약 반복되는 바이트 코드가 발견되면 ","position":{"start":{"line":112,"column":90,"offset":4478},"end":{"line":112,"column":142,"offset":4530}}},{"type":"raw","value":"<code class=\"language-text\">JIT Compiler</code>","position":{"start":{"line":112,"column":142,"offset":4530},"end":{"line":112,"column":156,"offset":4544}}},{"type":"text","value":" 를 통해 이들을 한번에 변환하기도 한다.","position":{"start":{"line":112,"column":156,"offset":4544},"end":{"line":112,"column":179,"offset":4567}}}],"position":{"start":{"line":112,"column":1,"offset":4389},"end":{"line":112,"column":179,"offset":4567}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"interpreter","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#interpreter","aria-label":"interpreter permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Interpreter","position":{"start":{"line":114,"column":5,"offset":4573},"end":{"line":114,"column":16,"offset":4584}}}],"position":{"start":{"line":114,"column":1,"offset":4569},"end":{"line":114,"column":16,"offset":4584}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   바이트 코드를 한 줄씩 읽고 실행한다. 매 라인마다 이러한 동작을 반복하기 때문에, 코드 구성에 따라 통으로 컴파일하는 방식 보다 느릴 수 있다.","position":{"start":{"line":116,"column":1,"offset":4586},"end":{"line":116,"column":85,"offset":4670}}}],"position":{"start":{"line":116,"column":1,"offset":4586},"end":{"line":116,"column":85,"offset":4670}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   아래처럼 값을 누적하는 코드와 같이, 같은 메소드의 반복이 자주 등장하는 코드의 경우 이를 통으로 변환하는 것이 더 유리할 수 있다.","position":{"start":{"line":118,"column":1,"offset":4672},"end":{"line":118,"column":78,"offset":4749}}}],"position":{"start":{"line":118,"column":1,"offset":4672},"end":{"line":118,"column":78,"offset":4749}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">int</span> total <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   total <span class=\"token operator\">+=</span> i<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":120,"column":1,"offset":4751},"end":{"line":125,"column":4,"offset":4826}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"jit-compiler","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#jit-compiler","aria-label":"jit compiler permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"JIT Compiler","position":{"start":{"line":127,"column":5,"offset":4832},"end":{"line":127,"column":17,"offset":4844}}}],"position":{"start":{"line":127,"column":1,"offset":4828},"end":{"line":127,"column":17,"offset":4844}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   앞서 설명한 것과 같이, 반복되는 코드가 빈번한 경우, 인터프리터 방식이 성능상 비효율적일 수 있다. 실행 엔진은 ","position":{"start":{"line":129,"column":1,"offset":4846},"end":{"line":129,"column":68,"offset":4913}}},{"type":"raw","value":"<code class=\"language-text\">JIT Compiler</code>","position":{"start":{"line":129,"column":68,"offset":4913},"end":{"line":129,"column":82,"offset":4927}}},{"type":"text","value":" 를 통해 이를 해결한다.","position":{"start":{"line":129,"column":82,"offset":4927},"end":{"line":129,"column":96,"offset":4941}}}],"position":{"start":{"line":129,"column":1,"offset":4846},"end":{"line":129,"column":96,"offset":4941}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   ","position":{"start":{"line":131,"column":1,"offset":4943},"end":{"line":131,"column":4,"offset":4946}}},{"type":"raw","value":"<code class=\"language-text\">Profiler</code>","position":{"start":{"line":131,"column":4,"offset":4946},"end":{"line":131,"column":14,"offset":4956}}},{"type":"text","value":"를 통해 반복되는 코드(hotspot)를 발견하면 JIT Compiler는 이를 네이티브 머신 코드로 한번에 컴파일한다. 변환된 코드는 시스템에 의해 한번에 읽히게 되므로 성능이 향상된다.","position":{"start":{"line":131,"column":14,"offset":4956},"end":{"line":131,"column":119,"offset":5061}}}],"position":{"start":{"line":131,"column":1,"offset":4943},"end":{"line":131,"column":119,"offset":5061}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"garbage-collector","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#garbage-collector","aria-label":"garbage collector permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Garbage Collector","position":{"start":{"line":133,"column":4,"offset":5066},"end":{"line":133,"column":21,"offset":5083}}}],"position":{"start":{"line":133,"column":1,"offset":5063},"end":{"line":133,"column":21,"offset":5083}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   ","position":{"start":{"line":135,"column":1,"offset":5085},"end":{"line":135,"column":4,"offset":5088}}},{"type":"raw","value":"<code class=\"language-text\">Garbage Collector</code>","position":{"start":{"line":135,"column":4,"offset":5088},"end":{"line":135,"column":23,"offset":5107}}},{"type":"text","value":" 는 Heap Area에 로드 되었지만 현재는 참조 되고 있지 않는 오브젝트들을 찾아서 지우고, 사용되지 않는 메모리 공간을 다시 회수한다.","position":{"start":{"line":135,"column":23,"offset":5107},"end":{"line":135,"column":101,"offset":5185}}}],"position":{"start":{"line":135,"column":1,"offset":5085},"end":{"line":135,"column":101,"offset":5185}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   이는 다음의 두 과정을 거친다.","position":{"start":{"line":137,"column":1,"offset":5187},"end":{"line":137,"column":21,"offset":5207}}}],"position":{"start":{"line":137,"column":1,"offset":5187},"end":{"line":137,"column":21,"offset":5207}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Mark","position":{"start":{"line":139,"column":6,"offset":5214},"end":{"line":139,"column":10,"offset":5218}}}],"position":{"start":{"line":139,"column":4,"offset":5212},"end":{"line":139,"column":12,"offset":5220}}},{"type":"text","value":" : GC가 참조되지 않는 오브젝트들을 찾아서 mark한다.","position":{"start":{"line":139,"column":12,"offset":5220},"end":{"line":139,"column":45,"offset":5253}}}],"position":{"start":{"line":139,"column":1,"offset":5209},"end":{"line":139,"column":45,"offset":5253}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Sweep","position":{"start":{"line":140,"column":6,"offset":5259},"end":{"line":140,"column":11,"offset":5264}}}],"position":{"start":{"line":140,"column":4,"offset":5257},"end":{"line":140,"column":13,"offset":5266}}},{"type":"text","value":" : GC가 mark 된 오브젝트들을 힙 메모리로부터 정리한다.","position":{"start":{"line":140,"column":13,"offset":5266},"end":{"line":140,"column":48,"offset":5301}}}],"position":{"start":{"line":140,"column":4,"offset":5257},"end":{"line":140,"column":48,"offset":5301}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"GC는 JVM에 의해 텀을 두고 자동으로 동작한다. ","position":{"start":{"line":142,"column":4,"offset":5306},"end":{"line":142,"column":33,"offset":5335}}},{"type":"raw","value":"<code class=\"language-text\">System.gc()</code>","position":{"start":{"line":142,"column":33,"offset":5335},"end":{"line":142,"column":46,"offset":5348}}},{"type":"text","value":" 를 통해 명시적으로 호출하는 방법도 있지만 이는 즉시 동작을 보장하진 않는다. 또한 JVM은 GC를 수행할 때, 이를 실행하는 쓰레드 이외에는 작업을 중단(","position":{"start":{"line":142,"column":46,"offset":5348},"end":{"line":142,"column":134,"offset":5436}}},{"type":"raw","value":"<code class=\"language-text\">Stop The World</code>","position":{"start":{"line":142,"column":134,"offset":5436},"end":{"line":142,"column":150,"offset":5452}}},{"type":"text","value":")하게 되므로 명시적인 호출은 지양해야 한다.","position":{"start":{"line":142,"column":150,"offset":5452},"end":{"line":142,"column":175,"offset":5477}}}],"position":{"start":{"line":142,"column":4,"offset":5306},"end":{"line":142,"column":175,"offset":5477}}},{"type":"text","value":"\n"}],"position":{"start":{"line":140,"column":1,"offset":5254},"end":{"line":142,"column":175,"offset":5477}}},{"type":"text","value":"\n"}],"position":{"start":{"line":139,"column":1,"offset":5209},"end":{"line":142,"column":175,"offset":5477}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"(GC는 그 자체로 하나의 아티클로 다루어야 할 규모의 주제라 생각한다. 추후 별도의 학습 포스트로 다뤄 볼 예정이므로, 이번 포스트에서는 대표적인 몇 가지 GC만 가볍게 살펴보고 넘어가려 한다.)","position":{"start":{"line":144,"column":1,"offset":5479},"end":{"line":144,"column":111,"offset":5589}}}],"position":{"start":{"line":144,"column":1,"offset":5479},"end":{"line":144,"column":111,"offset":5589}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"serial-gc","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#serial-gc","aria-label":"serial gc permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Serial GC","position":{"start":{"line":146,"column":5,"offset":5595},"end":{"line":146,"column":14,"offset":5604}}}],"position":{"start":{"line":146,"column":1,"offset":5591},"end":{"line":146,"column":14,"offset":5604}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   싱글 쓰레드 환경의 작은 애플리케이션에서 동작하는 가장 단순한 방식의 GC 구현체이다. 싱글 쓰레드 환경에만 적합한 GC이기 때문에 GC가 동작할 때 애플리케이션 전체가 중지(","position":{"start":{"line":148,"column":1,"offset":5606},"end":{"line":148,"column":102,"offset":5707}}},{"type":"raw","value":"<code class=\"language-text\">Stop The World</code>","position":{"start":{"line":148,"column":102,"offset":5707},"end":{"line":148,"column":118,"offset":5723}}},{"type":"text","value":") 된다.","position":{"start":{"line":148,"column":118,"offset":5723},"end":{"line":148,"column":123,"offset":5728}}}],"position":{"start":{"line":148,"column":1,"offset":5606},"end":{"line":148,"column":123,"offset":5728}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"parallel-gc","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#parallel-gc","aria-label":"parallel gc permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Parallel GC","position":{"start":{"line":150,"column":5,"offset":5734},"end":{"line":150,"column":16,"offset":5745}}}],"position":{"start":{"line":150,"column":1,"offset":5730},"end":{"line":150,"column":16,"offset":5745}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   JVM의 Java 8의 default GC 구현체이며, 다중 쓰레드 환경을 지원한다. ","position":{"start":{"line":152,"column":1,"offset":5747},"end":{"line":152,"column":52,"offset":5798}}},{"type":"raw","value":"<code class=\"language-text\">Serial GC</code>","position":{"start":{"line":152,"column":52,"offset":5798},"end":{"line":152,"column":63,"offset":5809}}},{"type":"text","value":" 보다 빠른 퍼포먼스를 보여준다.","position":{"start":{"line":152,"column":63,"offset":5809},"end":{"line":152,"column":81,"offset":5827}}}],"position":{"start":{"line":152,"column":1,"offset":5747},"end":{"line":152,"column":81,"offset":5827}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"garbage-first-gc-g1-gc","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#garbage-first-gc-g1-gc","aria-label":"garbage first gc g1 gc permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Garbage First GC (G1 GC)","position":{"start":{"line":154,"column":5,"offset":5833},"end":{"line":154,"column":29,"offset":5857}}}],"position":{"start":{"line":154,"column":1,"offset":5829},"end":{"line":154,"column":29,"offset":5857}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"멀티 프로세스 환경을 지원하기 위해 개발 된 GC 구현체이며, 대용량 메모리 운용이 가능하다. ","position":{"start":{"line":156,"column":1,"offset":5859},"end":{"line":156,"column":54,"offset":5912}}},{"type":"raw","value":"<code class=\"language-text\">Stop The World</code>","position":{"start":{"line":156,"column":54,"offset":5912},"end":{"line":156,"column":70,"offset":5928}}},{"type":"text","value":" 시간을 최소화 하였지만, 이를 완전 해결하지는 못했다. Java 9부터 default GC 구현체이다.","position":{"start":{"line":156,"column":70,"offset":5928},"end":{"line":156,"column":128,"offset":5986}}}],"position":{"start":{"line":156,"column":1,"offset":5859},"end":{"line":156,"column":128,"offset":5986}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"java-native-interface-jni","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#java-native-interface-jni","aria-label":"java native interface jni permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Java Native Interface (JNI)","position":{"start":{"line":159,"column":4,"offset":5992},"end":{"line":159,"column":31,"offset":6019}}}],"position":{"start":{"line":159,"column":1,"offset":5989},"end":{"line":159,"column":31,"offset":6019}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"  ","position":{"start":{"line":161,"column":1,"offset":6021},"end":{"line":161,"column":3,"offset":6023}}},{"type":"raw","value":"<code class=\"language-text\">Runtime Data Area</code>","position":{"start":{"line":161,"column":3,"offset":6023},"end":{"line":161,"column":22,"offset":6042}}},{"type":"text","value":" 를 다루며 ","position":{"start":{"line":161,"column":22,"offset":6042},"end":{"line":161,"column":29,"offset":6049}}},{"type":"raw","value":"<code class=\"language-text\">Native Method Stacks</code>","position":{"start":{"line":161,"column":29,"offset":6049},"end":{"line":161,"column":51,"offset":6071}}},{"type":"text","value":" 에 대해 간단히 알아보았다.\nJNI 역시 Java가 아닌 네이티브 코드를 사용하여 OS 혹은 하드웨어를 컨트롤하는 프로그램 혹은 라이브러리의 사용을 가능케한다.","position":{"start":{"line":161,"column":51,"offset":6071},"end":{"line":162,"column":76,"offset":6164}}}],"position":{"start":{"line":161,"column":1,"offset":6021},"end":{"line":162,"column":76,"offset":6164}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br/>","position":{"start":{"line":164,"column":1,"offset":6166},"end":{"line":164,"column":6,"offset":6171}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"references","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#references","aria-label":"references permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"References:","position":{"start":{"line":166,"column":5,"offset":6177},"end":{"line":166,"column":16,"offset":6188}}}],"position":{"start":{"line":166,"column":1,"offset":6173},"end":{"line":166,"column":16,"offset":6188}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://www.infoworld.com/article/3272244/what-is-the-jvm-introducing-the-java-virtual-machine.html","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"text","value":"https://www.infoworld.com/article/3272244/what-is-the-jvm-introducing-the-java-virtual-machine.html","position":{"start":{"line":167,"column":2,"offset":6190},"end":{"line":167,"column":101,"offset":6289}}}],"position":{"start":{"line":167,"column":1,"offset":6189},"end":{"line":167,"column":203,"offset":6391}}},{"type":"text","value":"\n","position":{"start":{"line":167,"column":203,"offset":6391},"end":{"line":168,"column":1,"offset":6392}}},{"type":"element","tagName":"a","properties":{"href":"https://en.wikipedia.org/wiki/Java_virtual_machine","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"text","value":"https://en.wikipedia.org/wiki/Java","position":{"start":{"line":168,"column":2,"offset":6393},"end":{"line":168,"column":36,"offset":6427}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"virtual","position":{"start":{"line":168,"column":37,"offset":6428},"end":{"line":168,"column":44,"offset":6435}}}],"position":{"start":{"line":168,"column":36,"offset":6427},"end":{"line":168,"column":45,"offset":6436}}},{"type":"text","value":"machine","position":{"start":{"line":168,"column":45,"offset":6436},"end":{"line":168,"column":52,"offset":6443}}}],"position":{"start":{"line":168,"column":1,"offset":6392},"end":{"line":168,"column":105,"offset":6496}}},{"type":"text","value":"\n","position":{"start":{"line":168,"column":105,"offset":6496},"end":{"line":169,"column":1,"offset":6497}}},{"type":"element","tagName":"a","properties":{"href":"https://www.freecodecamp.org/news/jvm-tutorial-java-virtual-machine-architecture-explained-for-beginners/","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"text","value":"https://www.freecodecamp.org/news/jvm-tutorial-java-virtual-machine-architecture-explained-for-beginners/","position":{"start":{"line":169,"column":2,"offset":6498},"end":{"line":169,"column":107,"offset":6603}}}],"position":{"start":{"line":169,"column":1,"offset":6497},"end":{"line":169,"column":215,"offset":6711}}},{"type":"text","value":"\n","position":{"start":{"line":169,"column":215,"offset":6711},"end":{"line":170,"column":1,"offset":6712}}},{"type":"element","tagName":"a","properties":{"href":"https://www.redhat.com/ko/topics/virtualization/what-is-a-hypervisor","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"text","value":"https://www.redhat.com/ko/topics/virtualization/what-is-a-hypervisor","position":{"start":{"line":170,"column":2,"offset":6713},"end":{"line":170,"column":70,"offset":6781}}}],"position":{"start":{"line":170,"column":1,"offset":6712},"end":{"line":170,"column":141,"offset":6852}}},{"type":"text","value":"\n","position":{"start":{"line":170,"column":141,"offset":6852},"end":{"line":171,"column":1,"offset":6853}}},{"type":"element","tagName":"a","properties":{"href":"https://www.redhat.com/ko/topics/virtualization/what-is-a-virtual-machine","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"text","value":"https://www.redhat.com/ko/topics/virtualization/what-is-a-virtual-machine","position":{"start":{"line":171,"column":2,"offset":6854},"end":{"line":171,"column":75,"offset":6927}}}],"position":{"start":{"line":171,"column":1,"offset":6853},"end":{"line":171,"column":151,"offset":7003}}}],"position":{"start":{"line":167,"column":1,"offset":6189},"end":{"line":171,"column":151,"offset":7003}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":171,"column":151,"offset":7003}}}}