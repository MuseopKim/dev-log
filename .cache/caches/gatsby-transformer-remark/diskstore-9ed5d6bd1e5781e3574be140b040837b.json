{"expireTime":9007200904346899000,"key":"transformer-remark-markdown-html-ast-d456785e01842cbd095d43d26a797c5c-gatsby-remark-imagesgatsby-remark-prismjsgatsby-remark-emojisgatsby-remark-autolink-headersgatsby-remark-katexgatsby-remark-external-linksgatsby-remark-copy-linked-files-","val":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":" ","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":7,"offset":7}}},{"type":"text","value":" ","position":{"start":{"line":2,"column":7,"offset":7},"end":{"line":2,"column":13,"offset":13}}},{"type":"text","value":"JVM(Java Virtual Machine)은 피지컬 머신에서 자바 코드를 컴파일하고 실행하기 위한 Java 생태계의 필수 요소라 할 수 있다.\n초기의 JVM은 Java 플랫폼만을 지원하도록 설계 되었지만, 현재는 Kotlin, Groovy, Scala와 같은 다양한 언어를 지원하고 있다. 이렇게 JVM이 지원하는 언어들을 통틀어 JVM languages라고도 한다.","position":{"start":{"line":2,"column":13,"offset":13},"end":{"line":3,"column":126,"offset":220}}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":3,"column":126,"offset":220}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{"id":"jvm-java-virtual-machine","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#jvm-java-virtual-machine","aria-label":"jvm java virtual machine permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"JVM (Java Virtual Machine)","position":{"start":{"line":5,"column":3,"offset":224},"end":{"line":5,"column":29,"offset":250}}}],"position":{"start":{"line":5,"column":1,"offset":222},"end":{"line":5,"column":29,"offset":250}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":" ","position":{"start":{"line":7,"column":1,"offset":252},"end":{"line":7,"column":7,"offset":258}}},{"type":"text","value":" ","position":{"start":{"line":7,"column":7,"offset":258},"end":{"line":7,"column":13,"offset":264}}},{"type":"text","value":"이름에서 살펴볼 수 있 듯 JVM을 ","position":{"start":{"line":7,"column":13,"offset":264},"end":{"line":7,"column":33,"offset":284}}},{"type":"raw","value":"<code class=\"language-text\">가상 머신(Virtual Machine)</code>","position":{"start":{"line":7,"column":33,"offset":284},"end":{"line":7,"column":57,"offset":308}}},{"type":"text","value":"이라 부르고 있다. 가상머신이란 하나의 물리적인 하드웨어 위에서 격리되어 구동되는 가상 환경이라 할 수 있다.","position":{"start":{"line":7,"column":57,"offset":308},"end":{"line":7,"column":118,"offset":369}}}],"position":{"start":{"line":7,"column":1,"offset":252},"end":{"line":7,"column":118,"offset":369}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"[VM 이미지]","position":{"start":{"line":9,"column":2,"offset":372},"end":{"line":9,"column":8,"offset":378}}}],"position":{"start":{"line":9,"column":1,"offset":371},"end":{"line":9,"column":9,"offset":379}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":" ","position":{"start":{"line":11,"column":1,"offset":381},"end":{"line":11,"column":7,"offset":387}}},{"type":"text","value":" ","position":{"start":{"line":11,"column":7,"offset":387},"end":{"line":11,"column":13,"offset":393}}},{"type":"text","value":"하나의 가상머신은 하이퍼바이저라는 소프트웨어가 설치된 하나의 호스트 머신 위에서 각각 격리되어 CPU, 메모리, 스토리지, 네트워크 인터페이스를 갖추고 있다. 이러한 ","position":{"start":{"line":11,"column":13,"offset":393},"end":{"line":11,"column":106,"offset":486}}},{"type":"raw","value":"<code class=\"language-text\">System Virtual Machine</code>","position":{"start":{"line":11,"column":106,"offset":486},"end":{"line":11,"column":130,"offset":510}}},{"type":"text","value":"은 격리된 환경에서 기능적으로 OS가 제공하는 모든 기능들을 제공한다.","position":{"start":{"line":11,"column":130,"offset":510},"end":{"line":11,"column":169,"offset":549}}}],"position":{"start":{"line":11,"column":1,"offset":381},"end":{"line":11,"column":169,"offset":549}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":" ","position":{"start":{"line":13,"column":1,"offset":551},"end":{"line":13,"column":7,"offset":557}}},{"type":"text","value":" ","position":{"start":{"line":13,"column":7,"offset":557},"end":{"line":13,"column":13,"offset":563}}},{"type":"text","value":"JVM은 OS로부터 메모리 공간을 할당 받아 해당 메모리를 자체적으로 관리하며, 독립적인 런타임 환경에서 Java 클래스 파일을 실행하는 ","position":{"start":{"line":13,"column":13,"offset":563},"end":{"line":13,"column":90,"offset":640}}},{"type":"raw","value":"<code class=\"language-text\">Process Virtual Machine</code>","position":{"start":{"line":13,"column":90,"offset":640},"end":{"line":13,"column":115,"offset":665}}},{"type":"text","value":"이라 할 수 있다.","position":{"start":{"line":13,"column":115,"offset":665},"end":{"line":13,"column":125,"offset":675}}}],"position":{"start":{"line":13,"column":1,"offset":551},"end":{"line":13,"column":125,"offset":675}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{"id":"jvm의-구성요소","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#jvm%EC%9D%98-%EA%B5%AC%EC%84%B1%EC%9A%94%EC%86%8C","aria-label":"jvm의 구성요소 permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"JVM의 구성요소","position":{"start":{"line":15,"column":3,"offset":679},"end":{"line":15,"column":12,"offset":688}}}],"position":{"start":{"line":15,"column":1,"offset":677},"end":{"line":15,"column":12,"offset":688}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":" ","position":{"start":{"line":17,"column":1,"offset":690},"end":{"line":17,"column":7,"offset":696}}},{"type":"text","value":" ","position":{"start":{"line":17,"column":7,"offset":696},"end":{"line":17,"column":13,"offset":702}}},{"type":"text","value":"컴파일 이후 JVM이 Java Application을 실행하는 과정을 간략히 설명하면 다음과 같다.","position":{"start":{"line":17,"column":13,"offset":702},"end":{"line":17,"column":68,"offset":757}}}],"position":{"start":{"line":17,"column":1,"offset":690},"end":{"line":17,"column":68,"offset":757}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"(1) 컴파일 된 class 파일을 ","position":{"start":{"line":19,"column":3,"offset":761},"end":{"line":19,"column":23,"offset":781}}},{"type":"raw","value":"<code class=\"language-text\">Class Loader</code>","position":{"start":{"line":19,"column":23,"offset":781},"end":{"line":19,"column":37,"offset":795}}},{"type":"text","value":"가 ","position":{"start":{"line":19,"column":37,"offset":795},"end":{"line":19,"column":39,"offset":797}}},{"type":"raw","value":"<code class=\"language-text\">Runtime Data Area</code>","position":{"start":{"line":19,"column":39,"offset":797},"end":{"line":19,"column":58,"offset":816}}},{"type":"text","value":"에 로드 한 뒤,\n(2) 적재한 바이트코드를 ","position":{"start":{"line":19,"column":58,"offset":816},"end":{"line":20,"column":18,"offset":843}}},{"type":"raw","value":"<code class=\"language-text\">Execution Engine</code>","position":{"start":{"line":20,"column":18,"offset":843},"end":{"line":20,"column":36,"offset":861}}},{"type":"text","value":"으로 실행한다.\n(3) 실행 도 중 Heap 영역에 로드 되었지만 더 이상 참조되지 않는 objects 들을 ","position":{"start":{"line":20,"column":36,"offset":861},"end":{"line":21,"column":55,"offset":925}}},{"type":"raw","value":"<code class=\"language-text\">Garbage Collector</code>","position":{"start":{"line":21,"column":55,"offset":925},"end":{"line":21,"column":74,"offset":944}}},{"type":"text","value":" 가 정리한다.","position":{"start":{"line":21,"column":74,"offset":944},"end":{"line":21,"column":82,"offset":952}}}],"position":{"start":{"line":19,"column":3,"offset":761},"end":{"line":21,"column":82,"offset":952}}},{"type":"text","value":"\n"}],"position":{"start":{"line":19,"column":1,"offset":759},"end":{"line":21,"column":82,"offset":952}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   생략된 것이 많은 매우 간략한 내용이지만, 애플리케이션이 실행된 이후 종료되기까지 앞서 언급한 네 가지 JVM 컴포넌트들이 이런 유기적인 상호작용을 하며 동작한다.","position":{"start":{"line":23,"column":1,"offset":954},"end":{"line":23,"column":95,"offset":1048}}}],"position":{"start":{"line":23,"column":1,"offset":954},"end":{"line":23,"column":95,"offset":1048}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   JVM의 핵심 컴포넌트들은 다음과 같은 구조를 이룬다.","position":{"start":{"line":25,"column":1,"offset":1050},"end":{"line":25,"column":34,"offset":1083}}}],"position":{"start":{"line":25,"column":1,"offset":1050},"end":{"line":25,"column":34,"offset":1083}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"[JVM의 구조 이미지]","position":{"start":{"line":27,"column":2,"offset":1086},"end":{"line":27,"column":13,"offset":1097}}}],"position":{"start":{"line":27,"column":1,"offset":1085},"end":{"line":27,"column":14,"offset":1098}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   JVM을 구성하는 핵심 컴포넌트들을 정확하게 이해하는 것이 곧 JVM을 이해하는 것이라 할 수 있다. 이제부터 각 컴포넌트들을 자세히 학습 해보면서 JVM에 대한 이해도를 더욱 높여보고자 한다.","position":{"start":{"line":29,"column":1,"offset":1100},"end":{"line":29,"column":112,"offset":1211}}}],"position":{"start":{"line":29,"column":1,"offset":1100},"end":{"line":29,"column":112,"offset":1211}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"class-loader","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#class-loader","aria-label":"class loader permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Class Loader","position":{"start":{"line":31,"column":4,"offset":1216},"end":{"line":31,"column":16,"offset":1228}}}],"position":{"start":{"line":31,"column":1,"offset":1213},"end":{"line":31,"column":16,"offset":1228}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   클래스 로더는 컴파일 된 바이트 코드(","position":{"start":{"line":33,"column":1,"offset":1230},"end":{"line":33,"column":25,"offset":1254}}},{"type":"raw","value":"<code class=\"language-text\">.class</code>","position":{"start":{"line":33,"column":25,"offset":1254},"end":{"line":33,"column":33,"offset":1262}}},{"type":"text","value":" files)들을 ","position":{"start":{"line":33,"column":33,"offset":1262},"end":{"line":33,"column":43,"offset":1272}}},{"type":"raw","value":"<code class=\"language-text\">Runtime Data Area</code>","position":{"start":{"line":33,"column":43,"offset":1272},"end":{"line":33,"column":62,"offset":1291}}},{"type":"text","value":" 에 로드한다.","position":{"start":{"line":33,"column":62,"offset":1291},"end":{"line":33,"column":70,"offset":1299}}}],"position":{"start":{"line":33,"column":1,"offset":1230},"end":{"line":33,"column":70,"offset":1299}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"여기서 주의해야 할 것은, 모든 클래스 파일들을 이 시점에 로드하는 것이 아니라는 점이다. JVM의 기본 클래스 로딩 방식은 Lazy loading이다. ","position":{"start":{"line":35,"column":1,"offset":1301},"end":{"line":35,"column":87,"offset":1387}}},{"type":"raw","value":"<code class=\"language-text\">main()</code>","position":{"start":{"line":35,"column":87,"offset":1387},"end":{"line":35,"column":95,"offset":1395}}},{"type":"text","value":" 메소드가 위치한 클래스를 로드하고, 실행엔진으로 바이트 코드를 해석하며 필요할 때 마다 각 클래스를 메인 메모리에 적재하고 읽어들인다.","position":{"start":{"line":35,"column":95,"offset":1395},"end":{"line":35,"column":171,"offset":1471}}}],"position":{"start":{"line":35,"column":1,"offset":1301},"end":{"line":35,"column":171,"offset":1471}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   세부 구성을 살펴보면 다음과 같다.","position":{"start":{"line":37,"column":1,"offset":1473},"end":{"line":37,"column":23,"offset":1495}}}],"position":{"start":{"line":37,"column":1,"offset":1473},"end":{"line":37,"column":23,"offset":1495}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"[클래스 로더 이미지]","position":{"start":{"line":39,"column":2,"offset":1498},"end":{"line":39,"column":12,"offset":1508}}}],"position":{"start":{"line":39,"column":1,"offset":1497},"end":{"line":39,"column":13,"offset":1509}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   클래스 로더의 동작 메커니즘은 크게 ","position":{"start":{"line":41,"column":1,"offset":1511},"end":{"line":41,"column":24,"offset":1534}}},{"type":"raw","value":"<code class=\"language-text\">Loading</code>","position":{"start":{"line":41,"column":24,"offset":1534},"end":{"line":41,"column":33,"offset":1543}}},{"type":"text","value":", ","position":{"start":{"line":41,"column":33,"offset":1543},"end":{"line":41,"column":35,"offset":1545}}},{"type":"raw","value":"<code class=\"language-text\">Linking</code>","position":{"start":{"line":41,"column":35,"offset":1545},"end":{"line":41,"column":44,"offset":1554}}},{"type":"text","value":", ","position":{"start":{"line":41,"column":44,"offset":1554},"end":{"line":41,"column":46,"offset":1556}}},{"type":"raw","value":"<code class=\"language-text\">Initialization</code>","position":{"start":{"line":41,"column":46,"offset":1556},"end":{"line":41,"column":62,"offset":1572}}},{"type":"text","value":"  세 단계의 절차로 수행된다. 각 과정들을 하나씩 살펴보자","position":{"start":{"line":41,"column":62,"offset":1572},"end":{"line":41,"column":95,"offset":1605}}}],"position":{"start":{"line":41,"column":1,"offset":1511},"end":{"line":41,"column":95,"offset":1605}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"loading","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#loading","aria-label":"loading permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Loading","position":{"start":{"line":43,"column":5,"offset":1611},"end":{"line":43,"column":12,"offset":1618}}}],"position":{"start":{"line":43,"column":1,"offset":1607},"end":{"line":43,"column":12,"offset":1618}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   클래스 로더가 바이트 코드를 JVM에 로드하는 과정이다. ","position":{"start":{"line":45,"column":1,"offset":1620},"end":{"line":45,"column":36,"offset":1655}}},{"type":"raw","value":"<code class=\"language-text\">java.lang</code>","position":{"start":{"line":45,"column":36,"offset":1655},"end":{"line":45,"column":47,"offset":1666}}},{"type":"text","value":", ","position":{"start":{"line":45,"column":47,"offset":1666},"end":{"line":45,"column":49,"offset":1668}}},{"type":"raw","value":"<code class=\"language-text\">java.util</code>","position":{"start":{"line":45,"column":49,"offset":1668},"end":{"line":45,"column":60,"offset":1679}}},{"type":"text","value":" 같은 Java의 스탠다드 패키지부터 라이브러리까지 각 바이트 코드마다 담당하는 클래스 로더가 다르다. 내부적으로 JVM이 ","position":{"start":{"line":45,"column":60,"offset":1679},"end":{"line":45,"column":129,"offset":1748}}},{"type":"raw","value":"<code class=\"language-text\">ClassLoader.loadClass()</code>","position":{"start":{"line":45,"column":129,"offset":1748},"end":{"line":45,"column":154,"offset":1773}}},{"type":"text","value":" 를 실행하여 메모리에 바이트 코드를 적재한다. ","position":{"start":{"line":45,"column":154,"offset":1773},"end":{"line":45,"column":181,"offset":1800}}}],"position":{"start":{"line":45,"column":1,"offset":1620},"end":{"line":45,"column":181,"offset":1800}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   Class Loader의 세부적인 계층 구성은 다음과 같다. ","position":{"start":{"line":47,"column":1,"offset":1802},"end":{"line":47,"column":38,"offset":1839}}}],"position":{"start":{"line":47,"column":1,"offset":1802},"end":{"line":47,"column":38,"offset":1839}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"[Class Loader 계층 구성 이미지]","position":{"start":{"line":49,"column":2,"offset":1842},"end":{"line":49,"column":24,"offset":1864}}}],"position":{"start":{"line":49,"column":1,"offset":1841},"end":{"line":49,"column":25,"offset":1865}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Boostrap Class Loader","position":{"start":{"line":51,"column":5,"offset":1871},"end":{"line":51,"column":26,"offset":1892}}}],"position":{"start":{"line":51,"column":3,"offset":1869},"end":{"line":51,"column":28,"offset":1894}}},{"type":"text","value":" : 모든 클래스 로더의 루트 레벨로써, ","position":{"start":{"line":51,"column":28,"offset":1894},"end":{"line":51,"column":51,"offset":1917}}},{"type":"raw","value":"<code class=\"language-text\">rt.jar</code>","position":{"start":{"line":51,"column":51,"offset":1917},"end":{"line":51,"column":59,"offset":1925}}},{"type":"text","value":"  파일에 위치하는 Java의 스탠다드 패키지들과 ","position":{"start":{"line":51,"column":59,"offset":1925},"end":{"line":51,"column":87,"offset":1953}}},{"type":"raw","value":"<code class=\"language-text\">$JAVA_HOME/jre/lib</code>","position":{"start":{"line":51,"column":87,"offset":1953},"end":{"line":51,"column":107,"offset":1973}}},{"type":"text","value":" 에 있는 코어 라이브러리들을 로드한다.","position":{"start":{"line":51,"column":107,"offset":1973},"end":{"line":51,"column":129,"offset":1995}}}],"position":{"start":{"line":51,"column":1,"offset":1867},"end":{"line":51,"column":129,"offset":1995}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Extention Class Loader :","position":{"start":{"line":52,"column":5,"offset":2000},"end":{"line":52,"column":29,"offset":2024}}}],"position":{"start":{"line":52,"column":3,"offset":1998},"end":{"line":52,"column":31,"offset":2026}}},{"type":"text","value":" ","position":{"start":{"line":52,"column":31,"offset":2026},"end":{"line":52,"column":32,"offset":2027}}},{"type":"raw","value":"<code class=\"language-text\">$JAVA_HOME/jre/lib/ext</code>","position":{"start":{"line":52,"column":32,"offset":2027},"end":{"line":52,"column":56,"offset":2051}}},{"type":"text","value":" 에 위치하는 extension Java 라이브러리들을 로드한다.","position":{"start":{"line":52,"column":56,"offset":2051},"end":{"line":52,"column":92,"offset":2087}}}],"position":{"start":{"line":52,"column":1,"offset":1996},"end":{"line":52,"column":92,"offset":2087}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Application Class Loader","position":{"start":{"line":53,"column":5,"offset":2092},"end":{"line":53,"column":29,"offset":2116}}}],"position":{"start":{"line":53,"column":3,"offset":2090},"end":{"line":53,"column":31,"offset":2118}}},{"type":"text","value":" : ","position":{"start":{"line":53,"column":31,"offset":2118},"end":{"line":53,"column":34,"offset":2121}}},{"type":"raw","value":"<code class=\"language-text\">classpath</code>","position":{"start":{"line":53,"column":34,"offset":2121},"end":{"line":53,"column":45,"offset":2132}}},{"type":"text","value":" 에 위치한 클래스들을 찾아서 로드한다. 즉, 라이브러리로가 아닌 개발자가 작성한 소스파일로부터 생성된 바이트 코드들을 JVM에 적재한다.","position":{"start":{"line":53,"column":45,"offset":2132},"end":{"line":53,"column":122,"offset":2209}}}],"position":{"start":{"line":53,"column":3,"offset":2090},"end":{"line":53,"column":122,"offset":2209}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"상위 클래스 로더부터 클래스를 하나씩 찾아가는데, 최하단에 있는 클래스 로더까지 해당되는 클래스 파일을 찾지 못하면 ","position":{"start":{"line":55,"column":4,"offset":2214},"end":{"line":55,"column":69,"offset":2279}}},{"type":"raw","value":"<code class=\"language-text\">ClassNotFoundException</code>","position":{"start":{"line":55,"column":69,"offset":2279},"end":{"line":55,"column":93,"offset":2303}}},{"type":"text","value":" 예외가 발생한다. ","position":{"start":{"line":55,"column":93,"offset":2303},"end":{"line":55,"column":104,"offset":2314}}}],"position":{"start":{"line":55,"column":4,"offset":2214},"end":{"line":55,"column":104,"offset":2314}}},{"type":"text","value":"\n"}],"position":{"start":{"line":53,"column":1,"offset":2088},"end":{"line":55,"column":104,"offset":2314}}},{"type":"text","value":"\n"}],"position":{"start":{"line":51,"column":1,"offset":1867},"end":{"line":55,"column":104,"offset":2314}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"linking","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#linking","aria-label":"linking permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Linking","position":{"start":{"line":57,"column":5,"offset":2320},"end":{"line":57,"column":12,"offset":2327}}}],"position":{"start":{"line":57,"column":1,"offset":2316},"end":{"line":57,"column":12,"offset":2327}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   클래스 파일이 메모리에 적재 된 이후 의존하는 클래스 파일들을 서로 연결(Link)하고 검증하는 과정이다.","position":{"start":{"line":59,"column":1,"offset":2329},"end":{"line":59,"column":63,"offset":2391}}}],"position":{"start":{"line":59,"column":1,"offset":2329},"end":{"line":59,"column":63,"offset":2391}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Verification","position":{"start":{"line":61,"column":5,"offset":2397},"end":{"line":61,"column":17,"offset":2409}}}],"position":{"start":{"line":61,"column":3,"offset":2395},"end":{"line":61,"column":19,"offset":2411}}},{"type":"text","value":" : ****클래스 파일의 유효성을 검증한다. 유효하지 않은 클래스 파일의 경우 ","position":{"start":{"line":61,"column":19,"offset":2411},"end":{"line":61,"column":64,"offset":2456}}},{"type":"raw","value":"<code class=\"language-text\">VerifyException</code>","position":{"start":{"line":61,"column":64,"offset":2456},"end":{"line":61,"column":81,"offset":2473}}},{"type":"text","value":" 이 발생한다.","position":{"start":{"line":61,"column":81,"offset":2473},"end":{"line":61,"column":89,"offset":2481}}}],"position":{"start":{"line":61,"column":1,"offset":2393},"end":{"line":61,"column":89,"offset":2481}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Preparation","position":{"start":{"line":62,"column":5,"offset":2486},"end":{"line":62,"column":16,"offset":2497}}}],"position":{"start":{"line":62,"column":3,"offset":2484},"end":{"line":62,"column":18,"offset":2499}}},{"type":"text","value":" : 유효성 검증을 통과한 클래스 파일들에 대하여 static 필드 및 클래스를 기본 값과 함께 초기화한다.","position":{"start":{"line":62,"column":18,"offset":2499},"end":{"line":62,"column":78,"offset":2559}}}],"position":{"start":{"line":62,"column":1,"offset":2482},"end":{"line":62,"column":78,"offset":2559}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Resolution","position":{"start":{"line":63,"column":5,"offset":2564},"end":{"line":63,"column":15,"offset":2574}}}],"position":{"start":{"line":63,"column":3,"offset":2562},"end":{"line":63,"column":17,"offset":2576}}},{"type":"text","value":" : Symbolic Reference 값들을 클래스, 상수, 메소드 등 Runtime Constant Pool에 있는 실제 메모리 참조 값(Actual Reference)으로 대체한다.","position":{"start":{"line":63,"column":17,"offset":2576},"end":{"line":63,"column":121,"offset":2680}}}],"position":{"start":{"line":63,"column":1,"offset":2560},"end":{"line":63,"column":121,"offset":2680}}},{"type":"text","value":"\n"}],"position":{"start":{"line":61,"column":1,"offset":2393},"end":{"line":63,"column":121,"offset":2680}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"initialization","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#initialization","aria-label":"initialization permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Initialization","position":{"start":{"line":65,"column":7,"offset":2688},"end":{"line":65,"column":21,"offset":2702}}}],"position":{"start":{"line":65,"column":5,"offset":2686},"end":{"line":65,"column":23,"offset":2704}}}],"position":{"start":{"line":65,"column":1,"offset":2682},"end":{"line":65,"column":23,"offset":2704}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   constructor, static  ****block 실행 등 초기화 과정이 수행된다. 클래스 로딩의 마지막 과정이라 할 수 있다. JVM은 멀티 쓰레드 환경에서 구동되기 때문에 Initialization 과정에서도 동시성 이슈가 발생할 여지가 있으므로 주의 해야한다.","position":{"start":{"line":67,"column":1,"offset":2706},"end":{"line":67,"column":155,"offset":2860}}}],"position":{"start":{"line":67,"column":1,"offset":2706},"end":{"line":67,"column":155,"offset":2860}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"runtime-data-area","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#runtime-data-area","aria-label":"runtime data area permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Runtime Data Area","position":{"start":{"line":69,"column":4,"offset":2865},"end":{"line":69,"column":21,"offset":2882}}}],"position":{"start":{"line":69,"column":1,"offset":2862},"end":{"line":69,"column":21,"offset":2882}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   앞서 살펴본 것과 같이 클래스 파일들은 Class Loader에 의해 Runtime Data Area에 적재 된다. Runtime Data Area는 5개 영역으로 나뉘어져 있는데, 애플리케이션 실행 도 중 데이터의 타입에 따라 ","position":{"start":{"line":71,"column":1,"offset":2884},"end":{"line":71,"column":132,"offset":3015}}},{"type":"raw","value":"<code class=\"language-text\">Method Area</code>","position":{"start":{"line":71,"column":132,"offset":3015},"end":{"line":71,"column":145,"offset":3028}}},{"type":"text","value":", ","position":{"start":{"line":71,"column":145,"offset":3028},"end":{"line":71,"column":147,"offset":3030}}},{"type":"raw","value":"<code class=\"language-text\">Heap Area</code>","position":{"start":{"line":71,"column":147,"offset":3030},"end":{"line":71,"column":158,"offset":3041}}},{"type":"text","value":", ","position":{"start":{"line":71,"column":158,"offset":3041},"end":{"line":71,"column":160,"offset":3043}}},{"type":"raw","value":"<code class=\"language-text\">Stack Area</code>","position":{"start":{"line":71,"column":160,"offset":3043},"end":{"line":71,"column":172,"offset":3055}}},{"type":"text","value":", ","position":{"start":{"line":71,"column":172,"offset":3055},"end":{"line":71,"column":174,"offset":3057}}},{"type":"raw","value":"<code class=\"language-text\">PC Register</code>","position":{"start":{"line":71,"column":174,"offset":3057},"end":{"line":71,"column":187,"offset":3070}}},{"type":"text","value":", ","position":{"start":{"line":71,"column":187,"offset":3070},"end":{"line":71,"column":189,"offset":3072}}},{"type":"raw","value":"<code class=\"language-text\">Native Method Stack</code>","position":{"start":{"line":71,"column":189,"offset":3072},"end":{"line":71,"column":210,"offset":3093}}},{"type":"text","value":" 영역에 저장되고 참조된다.","position":{"start":{"line":71,"column":210,"offset":3093},"end":{"line":71,"column":225,"offset":3108}}}],"position":{"start":{"line":71,"column":1,"offset":2884},"end":{"line":71,"column":225,"offset":3108}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"[이미지]","position":{"start":{"line":73,"column":2,"offset":3111},"end":{"line":73,"column":5,"offset":3114}}}],"position":{"start":{"line":73,"column":1,"offset":3110},"end":{"line":73,"column":6,"offset":3115}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"method-area","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#method-area","aria-label":"method area permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Method Area","position":{"start":{"line":75,"column":5,"offset":3121},"end":{"line":75,"column":16,"offset":3132}}}],"position":{"start":{"line":75,"column":1,"offset":3117},"end":{"line":75,"column":16,"offset":3132}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   실행 시점에 사용되는 Constant Pool, field, method, constructors 같은 데이터들이 위치한다. 만약 가용 공간이 부족하다면 ","position":{"start":{"line":77,"column":1,"offset":3134},"end":{"line":77,"column":90,"offset":3223}}},{"type":"raw","value":"<code class=\"language-text\">OutOfMemorryError</code>","position":{"start":{"line":77,"column":90,"offset":3223},"end":{"line":77,"column":109,"offset":3242}}},{"type":"text","value":" 가 발생한다. JVM 당 하나의 ","position":{"start":{"line":77,"column":109,"offset":3242},"end":{"line":77,"column":128,"offset":3261}}},{"type":"raw","value":"<code class=\"language-text\">Method Area</code>","position":{"start":{"line":77,"column":128,"offset":3261},"end":{"line":77,"column":141,"offset":3274}}},{"type":"text","value":" 를 가진다.","position":{"start":{"line":77,"column":141,"offset":3274},"end":{"line":77,"column":148,"offset":3281}}}],"position":{"start":{"line":77,"column":1,"offset":3134},"end":{"line":77,"column":148,"offset":3281}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"heap-area","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#heap-area","aria-label":"heap area permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Heap Area","position":{"start":{"line":79,"column":5,"offset":3287},"end":{"line":79,"column":14,"offset":3296}}}],"position":{"start":{"line":79,"column":1,"offset":3283},"end":{"line":79,"column":14,"offset":3296}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   객체 및 인스턴스 변수, 배열 등과 같은 타입의 값들이 위치한다.","position":{"start":{"line":81,"column":1,"offset":3298},"end":{"line":81,"column":40,"offset":3337}}}],"position":{"start":{"line":81,"column":1,"offset":3298},"end":{"line":81,"column":40,"offset":3337}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">Example</span> example <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Example</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":83,"column":1,"offset":3339},"end":{"line":85,"column":4,"offset":3383}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   예를 들어 위와 같은 코드를 동작 시키면 ","position":{"start":{"line":87,"column":1,"offset":3385},"end":{"line":87,"column":27,"offset":3411}}},{"type":"raw","value":"<code class=\"language-text\">Example</code>","position":{"start":{"line":87,"column":27,"offset":3411},"end":{"line":87,"column":36,"offset":3420}}},{"type":"text","value":" 인스턴스를 생성한 뒤 Heap Area에 배치한다. 메소드 영역과 마찬가지로 힙 영역 역시 JVM 당 하나의 공간만을 갖게 된다.","position":{"start":{"line":87,"column":36,"offset":3420},"end":{"line":87,"column":109,"offset":3493}}}],"position":{"start":{"line":87,"column":1,"offset":3385},"end":{"line":87,"column":109,"offset":3493}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"stack-area","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#stack-area","aria-label":"stack area permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Stack Area","position":{"start":{"line":89,"column":5,"offset":3499},"end":{"line":89,"column":15,"offset":3509}}}],"position":{"start":{"line":89,"column":1,"offset":3495},"end":{"line":89,"column":15,"offset":3509}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   특정 메소드가 호출 되고 실행되면서 사용되는 지역 변수(Local Variables), 중간 연산 결과(Operand Stack) 값이 갱신되며 저장되는 영역이다. 메소드 호출 시점마다 ","position":{"start":{"line":91,"column":1,"offset":3511},"end":{"line":91,"column":108,"offset":3618}}},{"type":"raw","value":"<code class=\"language-text\">Stack Frame</code>","position":{"start":{"line":91,"column":108,"offset":3618},"end":{"line":91,"column":121,"offset":3631}}},{"type":"text","value":"이라는 하나의 단위가 스택에 생성되고, 해당 메소드가 종료되는 시점에 파괴된다.","position":{"start":{"line":91,"column":121,"offset":3631},"end":{"line":91,"column":165,"offset":3675}}}],"position":{"start":{"line":91,"column":1,"offset":3511},"end":{"line":91,"column":165,"offset":3675}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   스택 영역은 JVM에 의해 쓰레드가 생성될 때 마다 각 쓰레드에 하나씩 할당된다. 따라서 동시성 문제로부터 자유롭다.","position":{"start":{"line":93,"column":1,"offset":3677},"end":{"line":93,"column":69,"offset":3745}}}],"position":{"start":{"line":93,"column":1,"offset":3677},"end":{"line":93,"column":69,"offset":3745}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"program-counter-pc-registers","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#program-counter-pc-registers","aria-label":"program counter pc registers permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Program Counter (PC) Registers","position":{"start":{"line":95,"column":5,"offset":3751},"end":{"line":95,"column":35,"offset":3781}}}],"position":{"start":{"line":95,"column":1,"offset":3747},"end":{"line":95,"column":35,"offset":3781}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   현재 실행되고 있는 명령어의 주소 값이 저장되는 공간이다. PC Register는 현재 실행하고 있는 명령어의 실행이 끝나면 다음 명령어의 주소 값을 갱신한다. 각 쓰레드 마다 하나의 PC Register가 할당된다.","position":{"start":{"line":97,"column":1,"offset":3783},"end":{"line":97,"column":125,"offset":3907}}}],"position":{"start":{"line":97,"column":1,"offset":3783},"end":{"line":97,"column":125,"offset":3907}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"native-method-stacks","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#native-method-stacks","aria-label":"native method stacks permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Native Method Stacks","position":{"start":{"line":99,"column":5,"offset":3913},"end":{"line":99,"column":25,"offset":3933}}}],"position":{"start":{"line":99,"column":1,"offset":3909},"end":{"line":99,"column":25,"offset":3933}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   Java가 아닌 C, C++과 같은 언어로 작성 된 메소드(Native Method) 실행을 지원하는 영역. 스택 영역과 같이 각 쓰레드마다 하나의 공간이 할당된다.","position":{"start":{"line":101,"column":1,"offset":3935},"end":{"line":101,"column":96,"offset":4030}}}],"position":{"start":{"line":101,"column":1,"offset":3935},"end":{"line":101,"column":96,"offset":4030}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"execution-engine","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#execution-engine","aria-label":"execution engine permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Execution Engine","position":{"start":{"line":103,"column":4,"offset":4035},"end":{"line":103,"column":20,"offset":4051}}}],"position":{"start":{"line":103,"column":1,"offset":4032},"end":{"line":103,"column":20,"offset":4051}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"[이미지]","position":{"start":{"line":105,"column":2,"offset":4054},"end":{"line":105,"column":5,"offset":4057}}}],"position":{"start":{"line":105,"column":1,"offset":4053},"end":{"line":105,"column":6,"offset":4058}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   Runtime Data Area에 각 바이트코드가 로드되면 ","position":{"start":{"line":107,"column":1,"offset":4060},"end":{"line":107,"column":37,"offset":4096}}},{"type":"raw","value":"<code class=\"language-text\">Execution Engine</code>","position":{"start":{"line":107,"column":37,"offset":4096},"end":{"line":107,"column":55,"offset":4114}}},{"type":"text","value":"이 이들을 실행하는데, Java compiler에 의해 생성된 클래스 파일들은 머신이 읽을 수 있는 기계어가 아닌 바이트 코드이다. 따라서 이를 한번 더 변환하는 과정이 필요하다.","position":{"start":{"line":107,"column":55,"offset":4114},"end":{"line":107,"column":155,"offset":4214}}}],"position":{"start":{"line":107,"column":1,"offset":4060},"end":{"line":107,"column":155,"offset":4214}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"  JVM은 효율성을 위해 두 가지 방법을 혼합하여 이를 실현한다. 기본 전략으로는 JavaScript, Python와 같은 언어 처럼 ","position":{"start":{"line":109,"column":1,"offset":4216},"end":{"line":109,"column":77,"offset":4292}}},{"type":"raw","value":"<code class=\"language-text\">Interpreter</code>","position":{"start":{"line":109,"column":77,"offset":4292},"end":{"line":109,"column":90,"offset":4305}}},{"type":"text","value":"가 한 라인씩 바이트 코드를 해석하는 방식을 사용하고, 만약 반복되는 바이트 코드가 발견되면 ","position":{"start":{"line":109,"column":90,"offset":4305},"end":{"line":109,"column":142,"offset":4357}}},{"type":"raw","value":"<code class=\"language-text\">JIT Compiler</code>","position":{"start":{"line":109,"column":142,"offset":4357},"end":{"line":109,"column":156,"offset":4371}}},{"type":"text","value":" 를 통해 이들을 한번에 변환하기도 한다.","position":{"start":{"line":109,"column":156,"offset":4371},"end":{"line":109,"column":179,"offset":4394}}}],"position":{"start":{"line":109,"column":1,"offset":4216},"end":{"line":109,"column":179,"offset":4394}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"interpreter","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#interpreter","aria-label":"interpreter permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Interpreter","position":{"start":{"line":111,"column":5,"offset":4400},"end":{"line":111,"column":16,"offset":4411}}}],"position":{"start":{"line":111,"column":1,"offset":4396},"end":{"line":111,"column":16,"offset":4411}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   바이트 코드를 한 줄씩 읽고 실행한다. 매 라인마다 이러한 동작을 반복하기 때문에, 코드 구성에 따라 통으로 컴파일하는 방식 보다 느릴 수 있다.","position":{"start":{"line":113,"column":1,"offset":4413},"end":{"line":113,"column":85,"offset":4497}}}],"position":{"start":{"line":113,"column":1,"offset":4413},"end":{"line":113,"column":85,"offset":4497}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   아래처럼 값을 누적하는 코드와 같이, 같은 메소드의 반복이 자주 등장하는 코드의 경우 이를 통으로 변환하는 것이 더 유리할 수 있다.","position":{"start":{"line":115,"column":1,"offset":4499},"end":{"line":115,"column":78,"offset":4576}}}],"position":{"start":{"line":115,"column":1,"offset":4499},"end":{"line":115,"column":78,"offset":4576}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">int</span> total <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   total <span class=\"token operator\">+=</span> i<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":117,"column":1,"offset":4578},"end":{"line":122,"column":4,"offset":4653}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"jit-compiler","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#jit-compiler","aria-label":"jit compiler permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"JIT Compiler","position":{"start":{"line":124,"column":5,"offset":4659},"end":{"line":124,"column":17,"offset":4671}}}],"position":{"start":{"line":124,"column":1,"offset":4655},"end":{"line":124,"column":17,"offset":4671}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   앞서 설명한 것과 같이, 반복되는 코드가 빈번한 경우, 인터프리터 방식이 성능상 비효율적일 수 있다. 실행 엔진은 ","position":{"start":{"line":126,"column":1,"offset":4673},"end":{"line":126,"column":68,"offset":4740}}},{"type":"raw","value":"<code class=\"language-text\">JIT Compiler</code>","position":{"start":{"line":126,"column":68,"offset":4740},"end":{"line":126,"column":82,"offset":4754}}},{"type":"text","value":" 를 통해 이를 해결한다.","position":{"start":{"line":126,"column":82,"offset":4754},"end":{"line":126,"column":96,"offset":4768}}}],"position":{"start":{"line":126,"column":1,"offset":4673},"end":{"line":126,"column":96,"offset":4768}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   ","position":{"start":{"line":128,"column":1,"offset":4770},"end":{"line":128,"column":4,"offset":4773}}},{"type":"raw","value":"<code class=\"language-text\">Profiler</code>","position":{"start":{"line":128,"column":4,"offset":4773},"end":{"line":128,"column":14,"offset":4783}}},{"type":"text","value":"를 통해 반복되는 코드(hotspot)를 발견하면 JIT Compiler는 이를 네이티브 머신 코드로 한번에 컴파일한다. 변환된 코드는 시스템에 의해 한번에 읽히게 되므로 성능이 향상된다.","position":{"start":{"line":128,"column":14,"offset":4783},"end":{"line":128,"column":119,"offset":4888}}}],"position":{"start":{"line":128,"column":1,"offset":4770},"end":{"line":128,"column":119,"offset":4888}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"garbage-collector","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#garbage-collector","aria-label":"garbage collector permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Garbage Collector","position":{"start":{"line":130,"column":4,"offset":4893},"end":{"line":130,"column":21,"offset":4910}}}],"position":{"start":{"line":130,"column":1,"offset":4890},"end":{"line":130,"column":21,"offset":4910}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   ","position":{"start":{"line":132,"column":1,"offset":4912},"end":{"line":132,"column":4,"offset":4915}}},{"type":"raw","value":"<code class=\"language-text\">Garbage Collector</code>","position":{"start":{"line":132,"column":4,"offset":4915},"end":{"line":132,"column":23,"offset":4934}}},{"type":"text","value":" 는 Heap Area에 로드 되었지만 현재는 참조 되고 있지 않는 오브젝트들을 찾아서 지우고, 사용되지 않는 메모리 공간을 다시 회수한다.","position":{"start":{"line":132,"column":23,"offset":4934},"end":{"line":132,"column":101,"offset":5012}}}],"position":{"start":{"line":132,"column":1,"offset":4912},"end":{"line":132,"column":101,"offset":5012}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   이는 다음의 두 과정을 거친다.","position":{"start":{"line":134,"column":1,"offset":5014},"end":{"line":134,"column":21,"offset":5034}}}],"position":{"start":{"line":134,"column":1,"offset":5014},"end":{"line":134,"column":21,"offset":5034}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Mark","position":{"start":{"line":136,"column":6,"offset":5041},"end":{"line":136,"column":10,"offset":5045}}}],"position":{"start":{"line":136,"column":4,"offset":5039},"end":{"line":136,"column":12,"offset":5047}}},{"type":"text","value":" : GC가 참조되지 않는 오브젝트들을 찾아서 mark한다.","position":{"start":{"line":136,"column":12,"offset":5047},"end":{"line":136,"column":45,"offset":5080}}}],"position":{"start":{"line":136,"column":1,"offset":5036},"end":{"line":136,"column":45,"offset":5080}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Sweep","position":{"start":{"line":137,"column":6,"offset":5086},"end":{"line":137,"column":11,"offset":5091}}}],"position":{"start":{"line":137,"column":4,"offset":5084},"end":{"line":137,"column":13,"offset":5093}}},{"type":"text","value":" : GC가 mark 된 오브젝트들을 힙 메모리로부터 정리한다.","position":{"start":{"line":137,"column":13,"offset":5093},"end":{"line":137,"column":48,"offset":5128}}}],"position":{"start":{"line":137,"column":4,"offset":5084},"end":{"line":137,"column":48,"offset":5128}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"GC는 JVM에 의해 텀을 두고 자동으로 동작한다. ","position":{"start":{"line":139,"column":4,"offset":5133},"end":{"line":139,"column":33,"offset":5162}}},{"type":"raw","value":"<code class=\"language-text\">System.gc()</code>","position":{"start":{"line":139,"column":33,"offset":5162},"end":{"line":139,"column":46,"offset":5175}}},{"type":"text","value":" 를 통해 명시적으로 호출하는 방법도 있지만 이는 즉시 동작을 보장하진 않는다. 또한 JVM은 GC를 수행할 때, 이를 실행하는 쓰레드 이외에는 작업을 중단(","position":{"start":{"line":139,"column":46,"offset":5175},"end":{"line":139,"column":134,"offset":5263}}},{"type":"raw","value":"<code class=\"language-text\">Stop The World</code>","position":{"start":{"line":139,"column":134,"offset":5263},"end":{"line":139,"column":150,"offset":5279}}},{"type":"text","value":")하게 되므로 명시적인 호출은 지양해야 한다.","position":{"start":{"line":139,"column":150,"offset":5279},"end":{"line":139,"column":175,"offset":5304}}}],"position":{"start":{"line":139,"column":4,"offset":5133},"end":{"line":139,"column":175,"offset":5304}}},{"type":"text","value":"\n"}],"position":{"start":{"line":137,"column":1,"offset":5081},"end":{"line":139,"column":175,"offset":5304}}},{"type":"text","value":"\n"}],"position":{"start":{"line":136,"column":1,"offset":5036},"end":{"line":139,"column":175,"offset":5304}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"(GC는 그 자체로 하나의 아티클로 다루어야 할 규모의 주제라 생각한다. 추후 별도의 학습 포스트로 다뤄 볼 예정이므로, 이번 포스트에서는 대표적인 몇 가지 GC만 가볍게 살펴보고 넘어가려 한다.)","position":{"start":{"line":141,"column":1,"offset":5306},"end":{"line":141,"column":111,"offset":5416}}}],"position":{"start":{"line":141,"column":1,"offset":5306},"end":{"line":141,"column":111,"offset":5416}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"serial-gc","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#serial-gc","aria-label":"serial gc permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Serial GC","position":{"start":{"line":143,"column":5,"offset":5422},"end":{"line":143,"column":14,"offset":5431}}}],"position":{"start":{"line":143,"column":1,"offset":5418},"end":{"line":143,"column":14,"offset":5431}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   싱글 쓰레드 환경의 작은 애플리케이션에서 동작하는 가장 단순한 방식의 GC 구현체이다. 싱글 쓰레드 환경에만 적합한 GC이기 때문에 GC가 동작할 때 애플리케이션 전체가 중지(","position":{"start":{"line":145,"column":1,"offset":5433},"end":{"line":145,"column":102,"offset":5534}}},{"type":"raw","value":"<code class=\"language-text\">Stop The World</code>","position":{"start":{"line":145,"column":102,"offset":5534},"end":{"line":145,"column":118,"offset":5550}}},{"type":"text","value":") 된다.","position":{"start":{"line":145,"column":118,"offset":5550},"end":{"line":145,"column":123,"offset":5555}}}],"position":{"start":{"line":145,"column":1,"offset":5433},"end":{"line":145,"column":123,"offset":5555}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"parallel-gc","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#parallel-gc","aria-label":"parallel gc permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Parallel GC","position":{"start":{"line":147,"column":5,"offset":5561},"end":{"line":147,"column":16,"offset":5572}}}],"position":{"start":{"line":147,"column":1,"offset":5557},"end":{"line":147,"column":16,"offset":5572}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   JVM의 Java 8의 default GC 구현체이며, 다중 쓰레드 환경을 지원한다. ","position":{"start":{"line":149,"column":1,"offset":5574},"end":{"line":149,"column":52,"offset":5625}}},{"type":"raw","value":"<code class=\"language-text\">Serial GC</code>","position":{"start":{"line":149,"column":52,"offset":5625},"end":{"line":149,"column":63,"offset":5636}}},{"type":"text","value":" 보다 빠른 퍼포먼스를 보여준다.","position":{"start":{"line":149,"column":63,"offset":5636},"end":{"line":149,"column":81,"offset":5654}}}],"position":{"start":{"line":149,"column":1,"offset":5574},"end":{"line":149,"column":81,"offset":5654}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"garbage-first-gc-g1-gc","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#garbage-first-gc-g1-gc","aria-label":"garbage first gc g1 gc permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Garbage First GC (G1 GC)","position":{"start":{"line":151,"column":5,"offset":5660},"end":{"line":151,"column":29,"offset":5684}}}],"position":{"start":{"line":151,"column":1,"offset":5656},"end":{"line":151,"column":29,"offset":5684}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"멀티 프로세스 환경을 지원하기 위해 개발 된 GC 구현체이며, 대용량 메모리 운용이 가능하다. ","position":{"start":{"line":153,"column":1,"offset":5686},"end":{"line":153,"column":54,"offset":5739}}},{"type":"raw","value":"<code class=\"language-text\">Stop The World</code>","position":{"start":{"line":153,"column":54,"offset":5739},"end":{"line":153,"column":70,"offset":5755}}},{"type":"text","value":" 시간을 최소화 하였지만, 이를 완전 해결하지는 못했다. Java 9부터 default GC 구현체이다.","position":{"start":{"line":153,"column":70,"offset":5755},"end":{"line":153,"column":128,"offset":5813}}}],"position":{"start":{"line":153,"column":1,"offset":5686},"end":{"line":153,"column":128,"offset":5813}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"java-native-interface-jni","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#java-native-interface-jni","aria-label":"java native interface jni permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Java Native Interface (JNI)","position":{"start":{"line":156,"column":4,"offset":5819},"end":{"line":156,"column":31,"offset":5846}}}],"position":{"start":{"line":156,"column":1,"offset":5816},"end":{"line":156,"column":31,"offset":5846}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"  ","position":{"start":{"line":158,"column":1,"offset":5848},"end":{"line":158,"column":3,"offset":5850}}},{"type":"raw","value":"<code class=\"language-text\">Runtime Data Area</code>","position":{"start":{"line":158,"column":3,"offset":5850},"end":{"line":158,"column":22,"offset":5869}}},{"type":"text","value":" 를 다루며 ","position":{"start":{"line":158,"column":22,"offset":5869},"end":{"line":158,"column":29,"offset":5876}}},{"type":"raw","value":"<code class=\"language-text\">Native Method Stacks</code>","position":{"start":{"line":158,"column":29,"offset":5876},"end":{"line":158,"column":51,"offset":5898}}},{"type":"text","value":" 에 대해 간단히 알아보았다.\nJNI 역시 Java가 아닌 네이티브 코드를 사용하여 OS 혹은 하드웨어를 컨트롤하는 프로그램 혹은 라이브러리의 사용을 가능케한다.","position":{"start":{"line":158,"column":51,"offset":5898},"end":{"line":159,"column":76,"offset":5991}}}],"position":{"start":{"line":158,"column":1,"offset":5848},"end":{"line":159,"column":76,"offset":5991}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br/>","position":{"start":{"line":161,"column":1,"offset":5993},"end":{"line":161,"column":6,"offset":5998}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"references","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#references","aria-label":"references permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"References:","position":{"start":{"line":163,"column":5,"offset":6004},"end":{"line":163,"column":16,"offset":6015}}}],"position":{"start":{"line":163,"column":1,"offset":6000},"end":{"line":163,"column":16,"offset":6015}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://www.infoworld.com/article/3272244/what-is-the-jvm-introducing-the-java-virtual-machine.html","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"text","value":"https://www.infoworld.com/article/3272244/what-is-the-jvm-introducing-the-java-virtual-machine.html","position":{"start":{"line":164,"column":2,"offset":6017},"end":{"line":164,"column":101,"offset":6116}}}],"position":{"start":{"line":164,"column":1,"offset":6016},"end":{"line":164,"column":203,"offset":6218}}},{"type":"text","value":"\n","position":{"start":{"line":164,"column":203,"offset":6218},"end":{"line":165,"column":1,"offset":6219}}},{"type":"element","tagName":"a","properties":{"href":"https://en.wikipedia.org/wiki/Java_virtual_machine","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"text","value":"https://en.wikipedia.org/wiki/Java","position":{"start":{"line":165,"column":2,"offset":6220},"end":{"line":165,"column":36,"offset":6254}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"virtual","position":{"start":{"line":165,"column":37,"offset":6255},"end":{"line":165,"column":44,"offset":6262}}}],"position":{"start":{"line":165,"column":36,"offset":6254},"end":{"line":165,"column":45,"offset":6263}}},{"type":"text","value":"machine","position":{"start":{"line":165,"column":45,"offset":6263},"end":{"line":165,"column":52,"offset":6270}}}],"position":{"start":{"line":165,"column":1,"offset":6219},"end":{"line":165,"column":105,"offset":6323}}},{"type":"text","value":"\n","position":{"start":{"line":165,"column":105,"offset":6323},"end":{"line":166,"column":1,"offset":6324}}},{"type":"element","tagName":"a","properties":{"href":"https://www.freecodecamp.org/news/jvm-tutorial-java-virtual-machine-architecture-explained-for-beginners/","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"text","value":"https://www.freecodecamp.org/news/jvm-tutorial-java-virtual-machine-architecture-explained-for-beginners/","position":{"start":{"line":166,"column":2,"offset":6325},"end":{"line":166,"column":107,"offset":6430}}}],"position":{"start":{"line":166,"column":1,"offset":6324},"end":{"line":166,"column":215,"offset":6538}}},{"type":"text","value":"\n","position":{"start":{"line":166,"column":215,"offset":6538},"end":{"line":167,"column":1,"offset":6539}}},{"type":"element","tagName":"a","properties":{"href":"https://www.redhat.com/ko/topics/virtualization/what-is-a-hypervisor","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"text","value":"https://www.redhat.com/ko/topics/virtualization/what-is-a-hypervisor","position":{"start":{"line":167,"column":2,"offset":6540},"end":{"line":167,"column":70,"offset":6608}}}],"position":{"start":{"line":167,"column":1,"offset":6539},"end":{"line":167,"column":141,"offset":6679}}},{"type":"text","value":"\n","position":{"start":{"line":167,"column":141,"offset":6679},"end":{"line":168,"column":1,"offset":6680}}},{"type":"element","tagName":"a","properties":{"href":"https://www.redhat.com/ko/topics/virtualization/what-is-a-virtual-machine","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"text","value":"https://www.redhat.com/ko/topics/virtualization/what-is-a-virtual-machine","position":{"start":{"line":168,"column":2,"offset":6681},"end":{"line":168,"column":75,"offset":6754}}}],"position":{"start":{"line":168,"column":1,"offset":6680},"end":{"line":168,"column":151,"offset":6830}}}],"position":{"start":{"line":164,"column":1,"offset":6016},"end":{"line":168,"column":151,"offset":6830}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":168,"column":151,"offset":6830}}}}