{"expireTime":9007200904347816000,"key":"transformer-remark-markdown-html-ast-4e62a1185b3beceff6c52eeacce5b079-gatsby-remark-imagesgatsby-remark-prismjsgatsby-remark-emojisgatsby-remark-autolink-headersgatsby-remark-katexgatsby-remark-external-linksgatsby-remark-copy-linked-files-","val":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":" ","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":7,"offset":7}}},{"type":"text","value":" ","position":{"start":{"line":2,"column":7,"offset":7},"end":{"line":2,"column":13,"offset":13}}},{"type":"text","value":"JVM(Java Virtual Machine)은 피지컬 머신에서 자바 코드를 컴파일하고 실행하기 위한 Java 생태계의 필수 요소라 할 수 있다.\n초기의 JVM은 Java 플랫폼만을 지원하도록 설계 되었지만, 현재는 Kotlin, Groovy, Scala와 같은 다양한 언어를 지원하고 있다. 이렇게 JVM이 지원하는 언어들을 통틀어 JVM languages라고도 한다.","position":{"start":{"line":2,"column":13,"offset":13},"end":{"line":3,"column":126,"offset":220}}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":3,"column":126,"offset":220}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{"id":"jvm-java-virtual-machine","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#jvm-java-virtual-machine","aria-label":"jvm java virtual machine permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"JVM (Java Virtual Machine)","position":{"start":{"line":5,"column":3,"offset":224},"end":{"line":5,"column":29,"offset":250}}}],"position":{"start":{"line":5,"column":1,"offset":222},"end":{"line":5,"column":29,"offset":250}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":" ","position":{"start":{"line":7,"column":1,"offset":252},"end":{"line":7,"column":7,"offset":258}}},{"type":"text","value":" ","position":{"start":{"line":7,"column":7,"offset":258},"end":{"line":7,"column":13,"offset":264}}},{"type":"text","value":"이름에서 살펴볼 수 있 듯 JVM을 ","position":{"start":{"line":7,"column":13,"offset":264},"end":{"line":7,"column":33,"offset":284}}},{"type":"raw","value":"<code class=\"language-text\">가상 머신(Virtual Machine)</code>","position":{"start":{"line":7,"column":33,"offset":284},"end":{"line":7,"column":57,"offset":308}}},{"type":"text","value":"이라 부르고 있다. 가상머신이란 하나의 물리적인 하드웨어 위에서 격리되어 구동되는 가상 환경이라 할 수 있다.","position":{"start":{"line":7,"column":57,"offset":308},"end":{"line":7,"column":118,"offset":369}}}],"position":{"start":{"line":7,"column":1,"offset":252},"end":{"line":7,"column":118,"offset":369}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"[VM 이미지]","position":{"start":{"line":9,"column":2,"offset":372},"end":{"line":9,"column":8,"offset":378}}}],"position":{"start":{"line":9,"column":1,"offset":371},"end":{"line":9,"column":9,"offset":379}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":" ","position":{"start":{"line":11,"column":1,"offset":381},"end":{"line":11,"column":7,"offset":387}}},{"type":"text","value":" ","position":{"start":{"line":11,"column":7,"offset":387},"end":{"line":11,"column":13,"offset":393}}},{"type":"text","value":"하나의 가상머신은 하이퍼바이저라는 소프트웨어가 설치된 하나의 호스트 머신 위에서 각각 격리되어 CPU, 메모리, 스토리지, 네트워크 인터페이스를 갖추고 있다. 이러한 ","position":{"start":{"line":11,"column":13,"offset":393},"end":{"line":11,"column":106,"offset":486}}},{"type":"raw","value":"<code class=\"language-text\">System Virtual Machine</code>","position":{"start":{"line":11,"column":106,"offset":486},"end":{"line":11,"column":130,"offset":510}}},{"type":"text","value":"은 격리된 환경에서 기능적으로 OS가 제공하는 대부분의 기능들을 제공한다.","position":{"start":{"line":11,"column":130,"offset":510},"end":{"line":11,"column":171,"offset":551}}}],"position":{"start":{"line":11,"column":1,"offset":381},"end":{"line":11,"column":171,"offset":551}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":" ","position":{"start":{"line":13,"column":1,"offset":553},"end":{"line":13,"column":7,"offset":559}}},{"type":"text","value":" ","position":{"start":{"line":13,"column":7,"offset":559},"end":{"line":13,"column":13,"offset":565}}},{"type":"text","value":"JVM은 OS로부터 메모리 공간을 할당 받아 해당 메모리를 자체적으로 관리하며, 독립적인 런타임 환경에서 Java 클래스 파일을 실행하는 ","position":{"start":{"line":13,"column":13,"offset":565},"end":{"line":13,"column":90,"offset":642}}},{"type":"raw","value":"<code class=\"language-text\">Process Virtual Machine</code>","position":{"start":{"line":13,"column":90,"offset":642},"end":{"line":13,"column":115,"offset":667}}},{"type":"text","value":"이라 할 수 있다.","position":{"start":{"line":13,"column":115,"offset":667},"end":{"line":13,"column":125,"offset":677}}}],"position":{"start":{"line":13,"column":1,"offset":553},"end":{"line":13,"column":125,"offset":677}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{"id":"jvm의-구성요소","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#jvm%EC%9D%98-%EA%B5%AC%EC%84%B1%EC%9A%94%EC%86%8C","aria-label":"jvm의 구성요소 permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"JVM의 구성요소","position":{"start":{"line":15,"column":3,"offset":681},"end":{"line":15,"column":12,"offset":690}}}],"position":{"start":{"line":15,"column":1,"offset":679},"end":{"line":15,"column":12,"offset":690}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":" ","position":{"start":{"line":17,"column":1,"offset":692},"end":{"line":17,"column":7,"offset":698}}},{"type":"text","value":" ","position":{"start":{"line":17,"column":7,"offset":698},"end":{"line":17,"column":13,"offset":704}}},{"type":"text","value":"컴파일 이후 JVM이 Java Application을 실행하는 큰 흐름은 다음과 같다.","position":{"start":{"line":17,"column":13,"offset":704},"end":{"line":17,"column":61,"offset":752}}}],"position":{"start":{"line":17,"column":1,"offset":692},"end":{"line":17,"column":61,"offset":752}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"(1) 컴파일 된 class 파일을 ","position":{"start":{"line":19,"column":3,"offset":756},"end":{"line":19,"column":23,"offset":776}}},{"type":"raw","value":"<code class=\"language-text\">Class Loader</code>","position":{"start":{"line":19,"column":23,"offset":776},"end":{"line":19,"column":37,"offset":790}}},{"type":"text","value":"가 ","position":{"start":{"line":19,"column":37,"offset":790},"end":{"line":19,"column":39,"offset":792}}},{"type":"raw","value":"<code class=\"language-text\">Runtime Data Area</code>","position":{"start":{"line":19,"column":39,"offset":792},"end":{"line":19,"column":58,"offset":811}}},{"type":"text","value":"에 로드한다. ","position":{"start":{"line":19,"column":58,"offset":811},"end":{"line":19,"column":66,"offset":819}}},{"type":"element","tagName":"br","properties":{},"children":[],"position":{"start":{"line":19,"column":66,"offset":819},"end":{"line":20,"column":3,"offset":823}}},{"type":"text","value":"\n"},{"type":"text","value":"(2) 적재한 바이트코드를 ","position":{"start":{"line":20,"column":3,"offset":823},"end":{"line":20,"column":18,"offset":838}}},{"type":"raw","value":"<code class=\"language-text\">Execution Engine</code>","position":{"start":{"line":20,"column":18,"offset":838},"end":{"line":20,"column":36,"offset":856}}},{"type":"text","value":"으로 실행한다. ","position":{"start":{"line":20,"column":36,"offset":856},"end":{"line":20,"column":45,"offset":865}}},{"type":"element","tagName":"br","properties":{},"children":[],"position":{"start":{"line":20,"column":45,"offset":865},"end":{"line":21,"column":3,"offset":869}}},{"type":"text","value":"\n"},{"type":"text","value":"(3) 실행 도 중 Heap 영역에서 더 이상 참조되지 않는 objects 들을 ","position":{"start":{"line":21,"column":3,"offset":869},"end":{"line":21,"column":48,"offset":914}}},{"type":"raw","value":"<code class=\"language-text\">Garbage Collector</code>","position":{"start":{"line":21,"column":48,"offset":914},"end":{"line":21,"column":67,"offset":933}}},{"type":"text","value":" 가 정리한다.","position":{"start":{"line":21,"column":67,"offset":933},"end":{"line":21,"column":75,"offset":941}}}],"position":{"start":{"line":19,"column":3,"offset":756},"end":{"line":21,"column":75,"offset":941}}},{"type":"text","value":"\n"}],"position":{"start":{"line":19,"column":1,"offset":754},"end":{"line":21,"column":75,"offset":941}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":" ","position":{"start":{"line":23,"column":1,"offset":943},"end":{"line":23,"column":7,"offset":949}}},{"type":"text","value":" ","position":{"start":{"line":23,"column":7,"offset":949},"end":{"line":23,"column":13,"offset":955}}},{"type":"text","value":"생략된 것이 많은 매우 간략한 내용이지만, 애플리케이션이 실행된 이후 종료되기까지, ","position":{"start":{"line":23,"column":13,"offset":955},"end":{"line":23,"column":60,"offset":1002}}},{"type":"element","tagName":"br","properties":{},"children":[],"position":{"start":{"line":23,"column":60,"offset":1002},"end":{"line":24,"column":1,"offset":1004}}},{"type":"text","value":"\n"},{"type":"raw","value":"<code class=\"language-text\">Class Loader</code>","position":{"start":{"line":24,"column":1,"offset":1004},"end":{"line":24,"column":15,"offset":1018}}},{"type":"text","value":", ","position":{"start":{"line":24,"column":15,"offset":1018},"end":{"line":24,"column":17,"offset":1020}}},{"type":"raw","value":"<code class=\"language-text\">Runtime Data Area</code>","position":{"start":{"line":24,"column":17,"offset":1020},"end":{"line":24,"column":36,"offset":1039}}},{"type":"text","value":", ","position":{"start":{"line":24,"column":36,"offset":1039},"end":{"line":24,"column":38,"offset":1041}}},{"type":"raw","value":"<code class=\"language-text\">Execution Engine</code>","position":{"start":{"line":24,"column":38,"offset":1041},"end":{"line":24,"column":56,"offset":1059}}},{"type":"text","value":", ","position":{"start":{"line":24,"column":56,"offset":1059},"end":{"line":24,"column":58,"offset":1061}}},{"type":"raw","value":"<code class=\"language-text\">Garbage Collector</code>","position":{"start":{"line":24,"column":58,"offset":1061},"end":{"line":24,"column":77,"offset":1080}}},{"type":"text","value":" 네 가지 JVM 컴포넌트들이 이런 유기적인 상호작용을 하며 동작한다.","position":{"start":{"line":24,"column":77,"offset":1080},"end":{"line":24,"column":116,"offset":1119}}}],"position":{"start":{"line":23,"column":1,"offset":943},"end":{"line":24,"column":116,"offset":1119}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":" ","position":{"start":{"line":26,"column":1,"offset":1121},"end":{"line":26,"column":7,"offset":1127}}},{"type":"text","value":" ","position":{"start":{"line":26,"column":7,"offset":1127},"end":{"line":26,"column":13,"offset":1133}}},{"type":"text","value":"JVM의 핵심 컴포넌트들은 다음과 같은 구조를 이룬다.","position":{"start":{"line":26,"column":13,"offset":1133},"end":{"line":26,"column":43,"offset":1163}}}],"position":{"start":{"line":26,"column":1,"offset":1121},"end":{"line":26,"column":43,"offset":1163}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"[JVM의 구조 이미지]","position":{"start":{"line":28,"column":2,"offset":1166},"end":{"line":28,"column":13,"offset":1177}}}],"position":{"start":{"line":28,"column":1,"offset":1165},"end":{"line":28,"column":14,"offset":1178}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":" ","position":{"start":{"line":30,"column":1,"offset":1180},"end":{"line":30,"column":7,"offset":1186}}},{"type":"text","value":" ","position":{"start":{"line":30,"column":7,"offset":1186},"end":{"line":30,"column":13,"offset":1192}}},{"type":"text","value":"JVM을 구성하는 핵심 컴포넌트들을 정확하게 이해하는 것이 곧 JVM을 이해하는 것이라 할 수 있다. ","position":{"start":{"line":30,"column":13,"offset":1192},"end":{"line":30,"column":70,"offset":1249}}},{"type":"element","tagName":"br","properties":{},"children":[],"position":{"start":{"line":30,"column":70,"offset":1249},"end":{"line":31,"column":1,"offset":1251}}},{"type":"text","value":"\n"},{"type":"text","value":"이제부터 각 컴포넌트들을 자세히 학습 해보면서 JVM에 대한 이해도를 더욱 높여보고자 한다.","position":{"start":{"line":31,"column":1,"offset":1251},"end":{"line":31,"column":52,"offset":1302}}}],"position":{"start":{"line":30,"column":1,"offset":1180},"end":{"line":31,"column":52,"offset":1302}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"class-loader","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#class-loader","aria-label":"class loader permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Class Loader","position":{"start":{"line":33,"column":4,"offset":1307},"end":{"line":33,"column":16,"offset":1319}}}],"position":{"start":{"line":33,"column":1,"offset":1304},"end":{"line":33,"column":16,"offset":1319}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":" ","position":{"start":{"line":35,"column":1,"offset":1321},"end":{"line":35,"column":7,"offset":1327}}},{"type":"text","value":" ","position":{"start":{"line":35,"column":7,"offset":1327},"end":{"line":35,"column":13,"offset":1333}}},{"type":"text","value":"클래스 로더는 컴파일 된 바이트 코드(","position":{"start":{"line":35,"column":13,"offset":1333},"end":{"line":35,"column":34,"offset":1354}}},{"type":"raw","value":"<code class=\"language-text\">.class</code>","position":{"start":{"line":35,"column":34,"offset":1354},"end":{"line":35,"column":42,"offset":1362}}},{"type":"text","value":" files)들을 ","position":{"start":{"line":35,"column":42,"offset":1362},"end":{"line":35,"column":52,"offset":1372}}},{"type":"raw","value":"<code class=\"language-text\">Runtime Data Area</code>","position":{"start":{"line":35,"column":52,"offset":1372},"end":{"line":35,"column":71,"offset":1391}}},{"type":"text","value":" 에 로드한다. ","position":{"start":{"line":35,"column":71,"offset":1391},"end":{"line":35,"column":80,"offset":1400}}},{"type":"element","tagName":"br","properties":{},"children":[],"position":{"start":{"line":35,"column":80,"offset":1400},"end":{"line":36,"column":1,"offset":1402}}},{"type":"text","value":"\n"},{"type":"text","value":"여기서 주의해야 할 것은, 모든 클래스 파일들을 이 시점에 로드하는 것이 아니라는 점이다. JVM의 기본 클래스 로딩 방식은 Lazy loading이다. ","position":{"start":{"line":36,"column":1,"offset":1402},"end":{"line":36,"column":87,"offset":1488}}},{"type":"raw","value":"<code class=\"language-text\">main()</code>","position":{"start":{"line":36,"column":87,"offset":1488},"end":{"line":36,"column":95,"offset":1496}}},{"type":"text","value":" 메소드가 위치한 클래스를 로드하고, 실행엔진으로 바이트 코드를 해석하며, 필요할 때 마다 각 클래스를 메인 메모리에 적재하고 읽어들인다.","position":{"start":{"line":36,"column":95,"offset":1496},"end":{"line":36,"column":172,"offset":1573}}}],"position":{"start":{"line":35,"column":1,"offset":1321},"end":{"line":36,"column":172,"offset":1573}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":" ","position":{"start":{"line":38,"column":1,"offset":1575},"end":{"line":38,"column":7,"offset":1581}}},{"type":"text","value":" ","position":{"start":{"line":38,"column":7,"offset":1581},"end":{"line":38,"column":13,"offset":1587}}},{"type":"text","value":"클래스 로더의 세부 구성을 살펴보면 다음과 같다.","position":{"start":{"line":38,"column":13,"offset":1587},"end":{"line":38,"column":40,"offset":1614}}}],"position":{"start":{"line":38,"column":1,"offset":1575},"end":{"line":38,"column":40,"offset":1614}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"[클래스 로더 이미지]","position":{"start":{"line":40,"column":2,"offset":1617},"end":{"line":40,"column":12,"offset":1627}}}],"position":{"start":{"line":40,"column":1,"offset":1616},"end":{"line":40,"column":13,"offset":1628}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":" ","position":{"start":{"line":42,"column":1,"offset":1630},"end":{"line":42,"column":7,"offset":1636}}},{"type":"text","value":" ","position":{"start":{"line":42,"column":7,"offset":1636},"end":{"line":42,"column":13,"offset":1642}}},{"type":"text","value":"클래스 로더의 동작 메커니즘은 크게 ","position":{"start":{"line":42,"column":13,"offset":1642},"end":{"line":42,"column":33,"offset":1662}}},{"type":"raw","value":"<code class=\"language-text\">Loading</code>","position":{"start":{"line":42,"column":33,"offset":1662},"end":{"line":42,"column":42,"offset":1671}}},{"type":"text","value":", ","position":{"start":{"line":42,"column":42,"offset":1671},"end":{"line":42,"column":44,"offset":1673}}},{"type":"raw","value":"<code class=\"language-text\">Linking</code>","position":{"start":{"line":42,"column":44,"offset":1673},"end":{"line":42,"column":53,"offset":1682}}},{"type":"text","value":", ","position":{"start":{"line":42,"column":53,"offset":1682},"end":{"line":42,"column":55,"offset":1684}}},{"type":"raw","value":"<code class=\"language-text\">Initialization</code>","position":{"start":{"line":42,"column":55,"offset":1684},"end":{"line":42,"column":71,"offset":1700}}},{"type":"text","value":"  세 단계의 절차로 수행된다. ","position":{"start":{"line":42,"column":71,"offset":1700},"end":{"line":42,"column":89,"offset":1718}}},{"type":"element","tagName":"br","properties":{},"children":[],"position":{"start":{"line":42,"column":89,"offset":1718},"end":{"line":43,"column":1,"offset":1720}}},{"type":"text","value":"\n"},{"type":"text","value":"각 과정들을 하나씩 살펴보자.","position":{"start":{"line":43,"column":1,"offset":1720},"end":{"line":43,"column":17,"offset":1736}}}],"position":{"start":{"line":42,"column":1,"offset":1630},"end":{"line":43,"column":17,"offset":1736}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"loading","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#loading","aria-label":"loading permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Loading","position":{"start":{"line":45,"column":5,"offset":1742},"end":{"line":45,"column":12,"offset":1749}}}],"position":{"start":{"line":45,"column":1,"offset":1738},"end":{"line":45,"column":12,"offset":1749}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":" ","position":{"start":{"line":46,"column":1,"offset":1750},"end":{"line":46,"column":7,"offset":1756}}},{"type":"text","value":" ","position":{"start":{"line":46,"column":7,"offset":1756},"end":{"line":46,"column":13,"offset":1762}}},{"type":"text","value":"클래스 로더가 바이트 코드를 JVM에 로드하는 과정이다.","position":{"start":{"line":46,"column":13,"offset":1762},"end":{"line":46,"column":44,"offset":1793}}},{"type":"raw","value":"<code class=\"language-text\">java.lang</code>","position":{"start":{"line":46,"column":44,"offset":1793},"end":{"line":46,"column":55,"offset":1804}}},{"type":"text","value":", ","position":{"start":{"line":46,"column":55,"offset":1804},"end":{"line":46,"column":57,"offset":1806}}},{"type":"raw","value":"<code class=\"language-text\">java.util</code>","position":{"start":{"line":46,"column":57,"offset":1806},"end":{"line":46,"column":68,"offset":1817}}},{"type":"text","value":" 같은 Java의 스탠다드 패키지부터 라이브러리까지 각 바이트 코드마다 담당하는 클래스 로더가 다르다. 내부적으로 JVM이 ","position":{"start":{"line":46,"column":68,"offset":1817},"end":{"line":46,"column":137,"offset":1886}}},{"type":"raw","value":"<code class=\"language-text\">ClassLoader.loadClass()</code>","position":{"start":{"line":46,"column":137,"offset":1886},"end":{"line":46,"column":162,"offset":1911}}},{"type":"text","value":" 를 실행하여 메모리에 바이트 코드를 적재한다. ","position":{"start":{"line":46,"column":162,"offset":1911},"end":{"line":46,"column":189,"offset":1938}}}],"position":{"start":{"line":46,"column":1,"offset":1750},"end":{"line":46,"column":189,"offset":1938}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":" ","position":{"start":{"line":48,"column":1,"offset":1940},"end":{"line":48,"column":7,"offset":1946}}},{"type":"text","value":" ","position":{"start":{"line":48,"column":7,"offset":1946},"end":{"line":48,"column":13,"offset":1952}}},{"type":"text","value":"Class Loader의 세부적인 계층 구성은 다음과 같다. ","position":{"start":{"line":48,"column":13,"offset":1952},"end":{"line":48,"column":47,"offset":1986}}}],"position":{"start":{"line":48,"column":1,"offset":1940},"end":{"line":48,"column":47,"offset":1986}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"[Class Loader 계층 구성 이미지]","position":{"start":{"line":50,"column":2,"offset":1989},"end":{"line":50,"column":24,"offset":2011}}}],"position":{"start":{"line":50,"column":1,"offset":1988},"end":{"line":50,"column":25,"offset":2012}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Boostrap Class Loader","position":{"start":{"line":52,"column":5,"offset":2018},"end":{"line":52,"column":26,"offset":2039}}}],"position":{"start":{"line":52,"column":3,"offset":2016},"end":{"line":52,"column":28,"offset":2041}}},{"type":"text","value":" : 모든 클래스 로더의 루트 레벨로써, ","position":{"start":{"line":52,"column":28,"offset":2041},"end":{"line":52,"column":51,"offset":2064}}},{"type":"raw","value":"<code class=\"language-text\">rt.jar</code>","position":{"start":{"line":52,"column":51,"offset":2064},"end":{"line":52,"column":59,"offset":2072}}},{"type":"text","value":"  파일에 위치하는 Java의 스탠다드 패키지들과 ","position":{"start":{"line":52,"column":59,"offset":2072},"end":{"line":52,"column":87,"offset":2100}}},{"type":"raw","value":"<code class=\"language-text\">$JAVA_HOME/jre/lib</code>","position":{"start":{"line":52,"column":87,"offset":2100},"end":{"line":52,"column":107,"offset":2120}}},{"type":"text","value":" 에 있는 코어 라이브러리들을 로드한다.","position":{"start":{"line":52,"column":107,"offset":2120},"end":{"line":52,"column":129,"offset":2142}}}],"position":{"start":{"line":52,"column":1,"offset":2014},"end":{"line":52,"column":129,"offset":2142}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Extention Class Loader :","position":{"start":{"line":53,"column":5,"offset":2147},"end":{"line":53,"column":29,"offset":2171}}}],"position":{"start":{"line":53,"column":3,"offset":2145},"end":{"line":53,"column":31,"offset":2173}}},{"type":"text","value":" ","position":{"start":{"line":53,"column":31,"offset":2173},"end":{"line":53,"column":32,"offset":2174}}},{"type":"raw","value":"<code class=\"language-text\">$JAVA_HOME/jre/lib/ext</code>","position":{"start":{"line":53,"column":32,"offset":2174},"end":{"line":53,"column":56,"offset":2198}}},{"type":"text","value":" 에 위치하는 extension Java 라이브러리들을 로드한다.","position":{"start":{"line":53,"column":56,"offset":2198},"end":{"line":53,"column":92,"offset":2234}}}],"position":{"start":{"line":53,"column":1,"offset":2143},"end":{"line":53,"column":92,"offset":2234}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Application Class Loader","position":{"start":{"line":54,"column":5,"offset":2239},"end":{"line":54,"column":29,"offset":2263}}}],"position":{"start":{"line":54,"column":3,"offset":2237},"end":{"line":54,"column":31,"offset":2265}}},{"type":"text","value":" : ","position":{"start":{"line":54,"column":31,"offset":2265},"end":{"line":54,"column":34,"offset":2268}}},{"type":"raw","value":"<code class=\"language-text\">classpath</code>","position":{"start":{"line":54,"column":34,"offset":2268},"end":{"line":54,"column":45,"offset":2279}}},{"type":"text","value":" 에 위치한 클래스들을 찾아서 로드한다. 즉, 라이브러리로가 아닌 개발자가 작성한 소스파일로부터 생성된 바이트 코드들을 JVM에 적재한다.","position":{"start":{"line":54,"column":45,"offset":2279},"end":{"line":54,"column":122,"offset":2356}}}],"position":{"start":{"line":54,"column":3,"offset":2237},"end":{"line":54,"column":122,"offset":2356}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"상위 클래스 로더부터 클래스를 하나씩 찾아가는데, 최하단에 있는 클래스 로더까지 해당되는 클래스 파일을 찾지 못하면 ","position":{"start":{"line":56,"column":4,"offset":2361},"end":{"line":56,"column":69,"offset":2426}}},{"type":"raw","value":"<code class=\"language-text\">ClassNotFoundException</code>","position":{"start":{"line":56,"column":69,"offset":2426},"end":{"line":56,"column":93,"offset":2450}}},{"type":"text","value":" 예외가 발생한다. ","position":{"start":{"line":56,"column":93,"offset":2450},"end":{"line":56,"column":104,"offset":2461}}}],"position":{"start":{"line":56,"column":4,"offset":2361},"end":{"line":56,"column":104,"offset":2461}}},{"type":"text","value":"\n"}],"position":{"start":{"line":54,"column":1,"offset":2235},"end":{"line":56,"column":104,"offset":2461}}},{"type":"text","value":"\n"}],"position":{"start":{"line":52,"column":1,"offset":2014},"end":{"line":56,"column":104,"offset":2461}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br/>","position":{"start":{"line":58,"column":1,"offset":2463},"end":{"line":58,"column":6,"offset":2468}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"linking","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#linking","aria-label":"linking permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Linking","position":{"start":{"line":60,"column":5,"offset":2474},"end":{"line":60,"column":12,"offset":2481}}}],"position":{"start":{"line":60,"column":1,"offset":2470},"end":{"line":60,"column":12,"offset":2481}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":" ","position":{"start":{"line":62,"column":1,"offset":2483},"end":{"line":62,"column":7,"offset":2489}}},{"type":"text","value":" ","position":{"start":{"line":62,"column":7,"offset":2489},"end":{"line":62,"column":13,"offset":2495}}},{"type":"text","value":"클래스 파일이 메모리에 적재 된 이후 의존하는 클래스 파일들을 서로 연결(Link)하고 검증하는 과정이다.","position":{"start":{"line":62,"column":13,"offset":2495},"end":{"line":62,"column":72,"offset":2554}}}],"position":{"start":{"line":62,"column":1,"offset":2483},"end":{"line":62,"column":72,"offset":2554}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Verification","position":{"start":{"line":63,"column":7,"offset":2561},"end":{"line":63,"column":19,"offset":2573}}}],"position":{"start":{"line":63,"column":5,"offset":2559},"end":{"line":63,"column":21,"offset":2575}}},{"type":"text","value":" : 클래스 파일의 유효성을 검증한다. 유효하지 않은 클래스 파일인 경우 ","position":{"start":{"line":63,"column":21,"offset":2575},"end":{"line":63,"column":62,"offset":2616}}},{"type":"raw","value":"<code class=\"language-text\">VerifyException</code>","position":{"start":{"line":63,"column":62,"offset":2616},"end":{"line":63,"column":79,"offset":2633}}},{"type":"text","value":" 이 발생한다.","position":{"start":{"line":63,"column":79,"offset":2633},"end":{"line":63,"column":87,"offset":2641}}}],"position":{"start":{"line":63,"column":1,"offset":2555},"end":{"line":63,"column":87,"offset":2641}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Preparation","position":{"start":{"line":64,"column":7,"offset":2648},"end":{"line":64,"column":18,"offset":2659}}}],"position":{"start":{"line":64,"column":5,"offset":2646},"end":{"line":64,"column":20,"offset":2661}}},{"type":"text","value":" : 유효성 검증을 통과한 클래스 파일들에 대하여 static 필드 및 클래스를 기본 값과 함께 초기화한다.","position":{"start":{"line":64,"column":20,"offset":2661},"end":{"line":64,"column":80,"offset":2721}}}],"position":{"start":{"line":64,"column":1,"offset":2642},"end":{"line":64,"column":80,"offset":2721}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Resolution","position":{"start":{"line":65,"column":7,"offset":2728},"end":{"line":65,"column":17,"offset":2738}}}],"position":{"start":{"line":65,"column":5,"offset":2726},"end":{"line":65,"column":19,"offset":2740}}},{"type":"text","value":" : Symbolic Reference 값들을 클래스, 상수, 메소드 등 Runtime Constant Pool에 있는 실제 메모리 참조 값(Actual Reference)으로 대체한다.","position":{"start":{"line":65,"column":19,"offset":2740},"end":{"line":65,"column":123,"offset":2844}}}],"position":{"start":{"line":65,"column":1,"offset":2722},"end":{"line":65,"column":123,"offset":2844}}},{"type":"text","value":"\n"}],"position":{"start":{"line":63,"column":1,"offset":2555},"end":{"line":65,"column":123,"offset":2844}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br/>","position":{"start":{"line":67,"column":1,"offset":2846},"end":{"line":67,"column":6,"offset":2851}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"initialization","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#initialization","aria-label":"initialization permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Initialization","position":{"start":{"line":69,"column":7,"offset":2859},"end":{"line":69,"column":21,"offset":2873}}}],"position":{"start":{"line":69,"column":5,"offset":2857},"end":{"line":69,"column":23,"offset":2875}}}],"position":{"start":{"line":69,"column":1,"offset":2853},"end":{"line":69,"column":23,"offset":2875}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   constructor, static  ****block 실행 등 초기화 과정이 수행된다. 클래스 로딩의 마지막 과정이라 할 수 있다. JVM은 멀티 쓰레드 환경에서 구동되기 때문에 Initialization 과정에서도 동시성 이슈가 발생할 여지가 있으므로 주의 해야한다.","position":{"start":{"line":71,"column":1,"offset":2877},"end":{"line":71,"column":155,"offset":3031}}}],"position":{"start":{"line":71,"column":1,"offset":2877},"end":{"line":71,"column":155,"offset":3031}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"runtime-data-area","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#runtime-data-area","aria-label":"runtime data area permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Runtime Data Area","position":{"start":{"line":73,"column":4,"offset":3036},"end":{"line":73,"column":21,"offset":3053}}}],"position":{"start":{"line":73,"column":1,"offset":3033},"end":{"line":73,"column":21,"offset":3053}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   앞서 살펴본 것과 같이 클래스 파일들은 Class Loader에 의해 Runtime Data Area에 적재 된다. Runtime Data Area는 5개 영역으로 나뉘어져 있는데, 애플리케이션 실행 도 중 데이터의 타입에 따라 ","position":{"start":{"line":75,"column":1,"offset":3055},"end":{"line":75,"column":132,"offset":3186}}},{"type":"raw","value":"<code class=\"language-text\">Method Area</code>","position":{"start":{"line":75,"column":132,"offset":3186},"end":{"line":75,"column":145,"offset":3199}}},{"type":"text","value":", ","position":{"start":{"line":75,"column":145,"offset":3199},"end":{"line":75,"column":147,"offset":3201}}},{"type":"raw","value":"<code class=\"language-text\">Heap Area</code>","position":{"start":{"line":75,"column":147,"offset":3201},"end":{"line":75,"column":158,"offset":3212}}},{"type":"text","value":", ","position":{"start":{"line":75,"column":158,"offset":3212},"end":{"line":75,"column":160,"offset":3214}}},{"type":"raw","value":"<code class=\"language-text\">Stack Area</code>","position":{"start":{"line":75,"column":160,"offset":3214},"end":{"line":75,"column":172,"offset":3226}}},{"type":"text","value":", ","position":{"start":{"line":75,"column":172,"offset":3226},"end":{"line":75,"column":174,"offset":3228}}},{"type":"raw","value":"<code class=\"language-text\">PC Register</code>","position":{"start":{"line":75,"column":174,"offset":3228},"end":{"line":75,"column":187,"offset":3241}}},{"type":"text","value":", ","position":{"start":{"line":75,"column":187,"offset":3241},"end":{"line":75,"column":189,"offset":3243}}},{"type":"raw","value":"<code class=\"language-text\">Native Method Stack</code>","position":{"start":{"line":75,"column":189,"offset":3243},"end":{"line":75,"column":210,"offset":3264}}},{"type":"text","value":" 영역에 저장되고 참조된다.","position":{"start":{"line":75,"column":210,"offset":3264},"end":{"line":75,"column":225,"offset":3279}}}],"position":{"start":{"line":75,"column":1,"offset":3055},"end":{"line":75,"column":225,"offset":3279}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"[이미지]","position":{"start":{"line":77,"column":2,"offset":3282},"end":{"line":77,"column":5,"offset":3285}}}],"position":{"start":{"line":77,"column":1,"offset":3281},"end":{"line":77,"column":6,"offset":3286}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"method-area","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#method-area","aria-label":"method area permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Method Area","position":{"start":{"line":79,"column":5,"offset":3292},"end":{"line":79,"column":16,"offset":3303}}}],"position":{"start":{"line":79,"column":1,"offset":3288},"end":{"line":79,"column":16,"offset":3303}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   실행 시점에 사용되는 Constant Pool, field, method, constructors 같은 데이터들이 위치한다. 만약 가용 공간이 부족하다면 ","position":{"start":{"line":81,"column":1,"offset":3305},"end":{"line":81,"column":90,"offset":3394}}},{"type":"raw","value":"<code class=\"language-text\">OutOfMemorryError</code>","position":{"start":{"line":81,"column":90,"offset":3394},"end":{"line":81,"column":109,"offset":3413}}},{"type":"text","value":" 가 발생한다. JVM 당 하나의 ","position":{"start":{"line":81,"column":109,"offset":3413},"end":{"line":81,"column":128,"offset":3432}}},{"type":"raw","value":"<code class=\"language-text\">Method Area</code>","position":{"start":{"line":81,"column":128,"offset":3432},"end":{"line":81,"column":141,"offset":3445}}},{"type":"text","value":" 를 가진다.","position":{"start":{"line":81,"column":141,"offset":3445},"end":{"line":81,"column":148,"offset":3452}}}],"position":{"start":{"line":81,"column":1,"offset":3305},"end":{"line":81,"column":148,"offset":3452}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"heap-area","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#heap-area","aria-label":"heap area permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Heap Area","position":{"start":{"line":83,"column":5,"offset":3458},"end":{"line":83,"column":14,"offset":3467}}}],"position":{"start":{"line":83,"column":1,"offset":3454},"end":{"line":83,"column":14,"offset":3467}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   객체 및 인스턴스 변수, 배열 등과 같은 타입의 값들이 위치한다.","position":{"start":{"line":85,"column":1,"offset":3469},"end":{"line":85,"column":40,"offset":3508}}}],"position":{"start":{"line":85,"column":1,"offset":3469},"end":{"line":85,"column":40,"offset":3508}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">Example</span> example <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Example</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":87,"column":1,"offset":3510},"end":{"line":89,"column":4,"offset":3554}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   예를 들어 위와 같은 코드를 동작 시키면 ","position":{"start":{"line":91,"column":1,"offset":3556},"end":{"line":91,"column":27,"offset":3582}}},{"type":"raw","value":"<code class=\"language-text\">Example</code>","position":{"start":{"line":91,"column":27,"offset":3582},"end":{"line":91,"column":36,"offset":3591}}},{"type":"text","value":" 인스턴스를 생성한 뒤 Heap Area에 배치한다. 메소드 영역과 마찬가지로 힙 영역 역시 JVM 당 하나의 공간만을 갖게 된다.","position":{"start":{"line":91,"column":36,"offset":3591},"end":{"line":91,"column":109,"offset":3664}}}],"position":{"start":{"line":91,"column":1,"offset":3556},"end":{"line":91,"column":109,"offset":3664}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"stack-area","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#stack-area","aria-label":"stack area permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Stack Area","position":{"start":{"line":93,"column":5,"offset":3670},"end":{"line":93,"column":15,"offset":3680}}}],"position":{"start":{"line":93,"column":1,"offset":3666},"end":{"line":93,"column":15,"offset":3680}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   특정 메소드가 호출 되고 실행되면서 사용되는 지역 변수(Local Variables), 중간 연산 결과(Operand Stack) 값이 갱신되며 저장되는 영역이다. 메소드 호출 시점마다 ","position":{"start":{"line":95,"column":1,"offset":3682},"end":{"line":95,"column":108,"offset":3789}}},{"type":"raw","value":"<code class=\"language-text\">Stack Frame</code>","position":{"start":{"line":95,"column":108,"offset":3789},"end":{"line":95,"column":121,"offset":3802}}},{"type":"text","value":"이라는 하나의 단위가 스택에 생성되고, 해당 메소드가 종료되는 시점에 파괴된다.","position":{"start":{"line":95,"column":121,"offset":3802},"end":{"line":95,"column":165,"offset":3846}}}],"position":{"start":{"line":95,"column":1,"offset":3682},"end":{"line":95,"column":165,"offset":3846}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   스택 영역은 JVM에 의해 쓰레드가 생성될 때 마다 각 쓰레드에 하나씩 할당된다. 따라서 동시성 문제로부터 자유롭다.","position":{"start":{"line":97,"column":1,"offset":3848},"end":{"line":97,"column":69,"offset":3916}}}],"position":{"start":{"line":97,"column":1,"offset":3848},"end":{"line":97,"column":69,"offset":3916}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"program-counter-pc-registers","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#program-counter-pc-registers","aria-label":"program counter pc registers permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Program Counter (PC) Registers","position":{"start":{"line":99,"column":5,"offset":3922},"end":{"line":99,"column":35,"offset":3952}}}],"position":{"start":{"line":99,"column":1,"offset":3918},"end":{"line":99,"column":35,"offset":3952}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   현재 실행되고 있는 명령어의 주소 값이 저장되는 공간이다. PC Register는 현재 실행하고 있는 명령어의 실행이 끝나면 다음 명령어의 주소 값을 갱신한다. 각 쓰레드 마다 하나의 PC Register가 할당된다.","position":{"start":{"line":101,"column":1,"offset":3954},"end":{"line":101,"column":125,"offset":4078}}}],"position":{"start":{"line":101,"column":1,"offset":3954},"end":{"line":101,"column":125,"offset":4078}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"native-method-stacks","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#native-method-stacks","aria-label":"native method stacks permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Native Method Stacks","position":{"start":{"line":103,"column":5,"offset":4084},"end":{"line":103,"column":25,"offset":4104}}}],"position":{"start":{"line":103,"column":1,"offset":4080},"end":{"line":103,"column":25,"offset":4104}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   Java가 아닌 C, C++과 같은 언어로 작성 된 메소드(Native Method) 실행을 지원하는 영역. 스택 영역과 같이 각 쓰레드마다 하나의 공간이 할당된다.","position":{"start":{"line":105,"column":1,"offset":4106},"end":{"line":105,"column":96,"offset":4201}}}],"position":{"start":{"line":105,"column":1,"offset":4106},"end":{"line":105,"column":96,"offset":4201}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"execution-engine","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#execution-engine","aria-label":"execution engine permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Execution Engine","position":{"start":{"line":107,"column":4,"offset":4206},"end":{"line":107,"column":20,"offset":4222}}}],"position":{"start":{"line":107,"column":1,"offset":4203},"end":{"line":107,"column":20,"offset":4222}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"[이미지]","position":{"start":{"line":109,"column":2,"offset":4225},"end":{"line":109,"column":5,"offset":4228}}}],"position":{"start":{"line":109,"column":1,"offset":4224},"end":{"line":109,"column":6,"offset":4229}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   Runtime Data Area에 각 바이트코드가 로드되면 ","position":{"start":{"line":111,"column":1,"offset":4231},"end":{"line":111,"column":37,"offset":4267}}},{"type":"raw","value":"<code class=\"language-text\">Execution Engine</code>","position":{"start":{"line":111,"column":37,"offset":4267},"end":{"line":111,"column":55,"offset":4285}}},{"type":"text","value":"이 이들을 실행하는데, Java compiler에 의해 생성된 클래스 파일들은 머신이 읽을 수 있는 기계어가 아닌 바이트 코드이다. 따라서 이를 한번 더 변환하는 과정이 필요하다.","position":{"start":{"line":111,"column":55,"offset":4285},"end":{"line":111,"column":155,"offset":4385}}}],"position":{"start":{"line":111,"column":1,"offset":4231},"end":{"line":111,"column":155,"offset":4385}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"  JVM은 효율성을 위해 두 가지 방법을 혼합하여 이를 실현한다. 기본 전략으로는 JavaScript, Python와 같은 언어 처럼 ","position":{"start":{"line":113,"column":1,"offset":4387},"end":{"line":113,"column":77,"offset":4463}}},{"type":"raw","value":"<code class=\"language-text\">Interpreter</code>","position":{"start":{"line":113,"column":77,"offset":4463},"end":{"line":113,"column":90,"offset":4476}}},{"type":"text","value":"가 한 라인씩 바이트 코드를 해석하는 방식을 사용하고, 만약 반복되는 바이트 코드가 발견되면 ","position":{"start":{"line":113,"column":90,"offset":4476},"end":{"line":113,"column":142,"offset":4528}}},{"type":"raw","value":"<code class=\"language-text\">JIT Compiler</code>","position":{"start":{"line":113,"column":142,"offset":4528},"end":{"line":113,"column":156,"offset":4542}}},{"type":"text","value":" 를 통해 이들을 한번에 변환하기도 한다.","position":{"start":{"line":113,"column":156,"offset":4542},"end":{"line":113,"column":179,"offset":4565}}}],"position":{"start":{"line":113,"column":1,"offset":4387},"end":{"line":113,"column":179,"offset":4565}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"interpreter","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#interpreter","aria-label":"interpreter permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Interpreter","position":{"start":{"line":115,"column":5,"offset":4571},"end":{"line":115,"column":16,"offset":4582}}}],"position":{"start":{"line":115,"column":1,"offset":4567},"end":{"line":115,"column":16,"offset":4582}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   바이트 코드를 한 줄씩 읽고 실행한다. 매 라인마다 이러한 동작을 반복하기 때문에, 코드 구성에 따라 통으로 컴파일하는 방식 보다 느릴 수 있다.","position":{"start":{"line":117,"column":1,"offset":4584},"end":{"line":117,"column":85,"offset":4668}}}],"position":{"start":{"line":117,"column":1,"offset":4584},"end":{"line":117,"column":85,"offset":4668}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   아래처럼 값을 누적하는 코드와 같이, 같은 메소드의 반복이 자주 등장하는 코드의 경우 이를 통으로 변환하는 것이 더 유리할 수 있다.","position":{"start":{"line":119,"column":1,"offset":4670},"end":{"line":119,"column":78,"offset":4747}}}],"position":{"start":{"line":119,"column":1,"offset":4670},"end":{"line":119,"column":78,"offset":4747}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">int</span> total <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   total <span class=\"token operator\">+=</span> i<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":121,"column":1,"offset":4749},"end":{"line":126,"column":4,"offset":4824}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"jit-compiler","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#jit-compiler","aria-label":"jit compiler permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"JIT Compiler","position":{"start":{"line":128,"column":5,"offset":4830},"end":{"line":128,"column":17,"offset":4842}}}],"position":{"start":{"line":128,"column":1,"offset":4826},"end":{"line":128,"column":17,"offset":4842}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   앞서 설명한 것과 같이, 반복되는 코드가 빈번한 경우, 인터프리터 방식이 성능상 비효율적일 수 있다. 실행 엔진은 ","position":{"start":{"line":130,"column":1,"offset":4844},"end":{"line":130,"column":68,"offset":4911}}},{"type":"raw","value":"<code class=\"language-text\">JIT Compiler</code>","position":{"start":{"line":130,"column":68,"offset":4911},"end":{"line":130,"column":82,"offset":4925}}},{"type":"text","value":" 를 통해 이를 해결한다.","position":{"start":{"line":130,"column":82,"offset":4925},"end":{"line":130,"column":96,"offset":4939}}}],"position":{"start":{"line":130,"column":1,"offset":4844},"end":{"line":130,"column":96,"offset":4939}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   ","position":{"start":{"line":132,"column":1,"offset":4941},"end":{"line":132,"column":4,"offset":4944}}},{"type":"raw","value":"<code class=\"language-text\">Profiler</code>","position":{"start":{"line":132,"column":4,"offset":4944},"end":{"line":132,"column":14,"offset":4954}}},{"type":"text","value":"를 통해 반복되는 코드(hotspot)를 발견하면 JIT Compiler는 이를 네이티브 머신 코드로 한번에 컴파일한다. 변환된 코드는 시스템에 의해 한번에 읽히게 되므로 성능이 향상된다.","position":{"start":{"line":132,"column":14,"offset":4954},"end":{"line":132,"column":119,"offset":5059}}}],"position":{"start":{"line":132,"column":1,"offset":4941},"end":{"line":132,"column":119,"offset":5059}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"garbage-collector","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#garbage-collector","aria-label":"garbage collector permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Garbage Collector","position":{"start":{"line":134,"column":4,"offset":5064},"end":{"line":134,"column":21,"offset":5081}}}],"position":{"start":{"line":134,"column":1,"offset":5061},"end":{"line":134,"column":21,"offset":5081}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   ","position":{"start":{"line":136,"column":1,"offset":5083},"end":{"line":136,"column":4,"offset":5086}}},{"type":"raw","value":"<code class=\"language-text\">Garbage Collector</code>","position":{"start":{"line":136,"column":4,"offset":5086},"end":{"line":136,"column":23,"offset":5105}}},{"type":"text","value":" 는 Heap Area에 로드 되었지만 현재는 참조 되고 있지 않는 오브젝트들을 찾아서 지우고, 사용되지 않는 메모리 공간을 다시 회수한다.","position":{"start":{"line":136,"column":23,"offset":5105},"end":{"line":136,"column":101,"offset":5183}}}],"position":{"start":{"line":136,"column":1,"offset":5083},"end":{"line":136,"column":101,"offset":5183}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   이는 다음의 두 과정을 거친다.","position":{"start":{"line":138,"column":1,"offset":5185},"end":{"line":138,"column":21,"offset":5205}}}],"position":{"start":{"line":138,"column":1,"offset":5185},"end":{"line":138,"column":21,"offset":5205}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Mark","position":{"start":{"line":140,"column":6,"offset":5212},"end":{"line":140,"column":10,"offset":5216}}}],"position":{"start":{"line":140,"column":4,"offset":5210},"end":{"line":140,"column":12,"offset":5218}}},{"type":"text","value":" : GC가 참조되지 않는 오브젝트들을 찾아서 mark한다.","position":{"start":{"line":140,"column":12,"offset":5218},"end":{"line":140,"column":45,"offset":5251}}}],"position":{"start":{"line":140,"column":1,"offset":5207},"end":{"line":140,"column":45,"offset":5251}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Sweep","position":{"start":{"line":141,"column":6,"offset":5257},"end":{"line":141,"column":11,"offset":5262}}}],"position":{"start":{"line":141,"column":4,"offset":5255},"end":{"line":141,"column":13,"offset":5264}}},{"type":"text","value":" : GC가 mark 된 오브젝트들을 힙 메모리로부터 정리한다.","position":{"start":{"line":141,"column":13,"offset":5264},"end":{"line":141,"column":48,"offset":5299}}}],"position":{"start":{"line":141,"column":4,"offset":5255},"end":{"line":141,"column":48,"offset":5299}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"GC는 JVM에 의해 텀을 두고 자동으로 동작한다. ","position":{"start":{"line":143,"column":4,"offset":5304},"end":{"line":143,"column":33,"offset":5333}}},{"type":"raw","value":"<code class=\"language-text\">System.gc()</code>","position":{"start":{"line":143,"column":33,"offset":5333},"end":{"line":143,"column":46,"offset":5346}}},{"type":"text","value":" 를 통해 명시적으로 호출하는 방법도 있지만 이는 즉시 동작을 보장하진 않는다. 또한 JVM은 GC를 수행할 때, 이를 실행하는 쓰레드 이외에는 작업을 중단(","position":{"start":{"line":143,"column":46,"offset":5346},"end":{"line":143,"column":134,"offset":5434}}},{"type":"raw","value":"<code class=\"language-text\">Stop The World</code>","position":{"start":{"line":143,"column":134,"offset":5434},"end":{"line":143,"column":150,"offset":5450}}},{"type":"text","value":")하게 되므로 명시적인 호출은 지양해야 한다.","position":{"start":{"line":143,"column":150,"offset":5450},"end":{"line":143,"column":175,"offset":5475}}}],"position":{"start":{"line":143,"column":4,"offset":5304},"end":{"line":143,"column":175,"offset":5475}}},{"type":"text","value":"\n"}],"position":{"start":{"line":141,"column":1,"offset":5252},"end":{"line":143,"column":175,"offset":5475}}},{"type":"text","value":"\n"}],"position":{"start":{"line":140,"column":1,"offset":5207},"end":{"line":143,"column":175,"offset":5475}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"(GC는 그 자체로 하나의 아티클로 다루어야 할 규모의 주제라 생각한다. 추후 별도의 학습 포스트로 다뤄 볼 예정이므로, 이번 포스트에서는 대표적인 몇 가지 GC만 가볍게 살펴보고 넘어가려 한다.)","position":{"start":{"line":145,"column":1,"offset":5477},"end":{"line":145,"column":111,"offset":5587}}}],"position":{"start":{"line":145,"column":1,"offset":5477},"end":{"line":145,"column":111,"offset":5587}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"serial-gc","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#serial-gc","aria-label":"serial gc permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Serial GC","position":{"start":{"line":147,"column":5,"offset":5593},"end":{"line":147,"column":14,"offset":5602}}}],"position":{"start":{"line":147,"column":1,"offset":5589},"end":{"line":147,"column":14,"offset":5602}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   싱글 쓰레드 환경의 작은 애플리케이션에서 동작하는 가장 단순한 방식의 GC 구현체이다. 싱글 쓰레드 환경에만 적합한 GC이기 때문에 GC가 동작할 때 애플리케이션 전체가 중지(","position":{"start":{"line":149,"column":1,"offset":5604},"end":{"line":149,"column":102,"offset":5705}}},{"type":"raw","value":"<code class=\"language-text\">Stop The World</code>","position":{"start":{"line":149,"column":102,"offset":5705},"end":{"line":149,"column":118,"offset":5721}}},{"type":"text","value":") 된다.","position":{"start":{"line":149,"column":118,"offset":5721},"end":{"line":149,"column":123,"offset":5726}}}],"position":{"start":{"line":149,"column":1,"offset":5604},"end":{"line":149,"column":123,"offset":5726}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"parallel-gc","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#parallel-gc","aria-label":"parallel gc permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Parallel GC","position":{"start":{"line":151,"column":5,"offset":5732},"end":{"line":151,"column":16,"offset":5743}}}],"position":{"start":{"line":151,"column":1,"offset":5728},"end":{"line":151,"column":16,"offset":5743}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   JVM의 Java 8의 default GC 구현체이며, 다중 쓰레드 환경을 지원한다. ","position":{"start":{"line":153,"column":1,"offset":5745},"end":{"line":153,"column":52,"offset":5796}}},{"type":"raw","value":"<code class=\"language-text\">Serial GC</code>","position":{"start":{"line":153,"column":52,"offset":5796},"end":{"line":153,"column":63,"offset":5807}}},{"type":"text","value":" 보다 빠른 퍼포먼스를 보여준다.","position":{"start":{"line":153,"column":63,"offset":5807},"end":{"line":153,"column":81,"offset":5825}}}],"position":{"start":{"line":153,"column":1,"offset":5745},"end":{"line":153,"column":81,"offset":5825}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"garbage-first-gc-g1-gc","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#garbage-first-gc-g1-gc","aria-label":"garbage first gc g1 gc permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Garbage First GC (G1 GC)","position":{"start":{"line":155,"column":5,"offset":5831},"end":{"line":155,"column":29,"offset":5855}}}],"position":{"start":{"line":155,"column":1,"offset":5827},"end":{"line":155,"column":29,"offset":5855}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"멀티 프로세스 환경을 지원하기 위해 개발 된 GC 구현체이며, 대용량 메모리 운용이 가능하다. ","position":{"start":{"line":157,"column":1,"offset":5857},"end":{"line":157,"column":54,"offset":5910}}},{"type":"raw","value":"<code class=\"language-text\">Stop The World</code>","position":{"start":{"line":157,"column":54,"offset":5910},"end":{"line":157,"column":70,"offset":5926}}},{"type":"text","value":" 시간을 최소화 하였지만, 이를 완전 해결하지는 못했다. Java 9부터 default GC 구현체이다.","position":{"start":{"line":157,"column":70,"offset":5926},"end":{"line":157,"column":128,"offset":5984}}}],"position":{"start":{"line":157,"column":1,"offset":5857},"end":{"line":157,"column":128,"offset":5984}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"java-native-interface-jni","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#java-native-interface-jni","aria-label":"java native interface jni permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Java Native Interface (JNI)","position":{"start":{"line":160,"column":4,"offset":5990},"end":{"line":160,"column":31,"offset":6017}}}],"position":{"start":{"line":160,"column":1,"offset":5987},"end":{"line":160,"column":31,"offset":6017}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"  ","position":{"start":{"line":162,"column":1,"offset":6019},"end":{"line":162,"column":3,"offset":6021}}},{"type":"raw","value":"<code class=\"language-text\">Runtime Data Area</code>","position":{"start":{"line":162,"column":3,"offset":6021},"end":{"line":162,"column":22,"offset":6040}}},{"type":"text","value":" 를 다루며 ","position":{"start":{"line":162,"column":22,"offset":6040},"end":{"line":162,"column":29,"offset":6047}}},{"type":"raw","value":"<code class=\"language-text\">Native Method Stacks</code>","position":{"start":{"line":162,"column":29,"offset":6047},"end":{"line":162,"column":51,"offset":6069}}},{"type":"text","value":" 에 대해 간단히 알아보았다.\nJNI 역시 Java가 아닌 네이티브 코드를 사용하여 OS 혹은 하드웨어를 컨트롤하는 프로그램 혹은 라이브러리의 사용을 가능케한다.","position":{"start":{"line":162,"column":51,"offset":6069},"end":{"line":163,"column":76,"offset":6162}}}],"position":{"start":{"line":162,"column":1,"offset":6019},"end":{"line":163,"column":76,"offset":6162}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br/>","position":{"start":{"line":165,"column":1,"offset":6164},"end":{"line":165,"column":6,"offset":6169}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"references","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#references","aria-label":"references permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"References:","position":{"start":{"line":167,"column":5,"offset":6175},"end":{"line":167,"column":16,"offset":6186}}}],"position":{"start":{"line":167,"column":1,"offset":6171},"end":{"line":167,"column":16,"offset":6186}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://www.infoworld.com/article/3272244/what-is-the-jvm-introducing-the-java-virtual-machine.html","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"text","value":"https://www.infoworld.com/article/3272244/what-is-the-jvm-introducing-the-java-virtual-machine.html","position":{"start":{"line":168,"column":2,"offset":6188},"end":{"line":168,"column":101,"offset":6287}}}],"position":{"start":{"line":168,"column":1,"offset":6187},"end":{"line":168,"column":203,"offset":6389}}},{"type":"text","value":"\n","position":{"start":{"line":168,"column":203,"offset":6389},"end":{"line":169,"column":1,"offset":6390}}},{"type":"element","tagName":"a","properties":{"href":"https://en.wikipedia.org/wiki/Java_virtual_machine","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"text","value":"https://en.wikipedia.org/wiki/Java","position":{"start":{"line":169,"column":2,"offset":6391},"end":{"line":169,"column":36,"offset":6425}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"virtual","position":{"start":{"line":169,"column":37,"offset":6426},"end":{"line":169,"column":44,"offset":6433}}}],"position":{"start":{"line":169,"column":36,"offset":6425},"end":{"line":169,"column":45,"offset":6434}}},{"type":"text","value":"machine","position":{"start":{"line":169,"column":45,"offset":6434},"end":{"line":169,"column":52,"offset":6441}}}],"position":{"start":{"line":169,"column":1,"offset":6390},"end":{"line":169,"column":105,"offset":6494}}},{"type":"text","value":"\n","position":{"start":{"line":169,"column":105,"offset":6494},"end":{"line":170,"column":1,"offset":6495}}},{"type":"element","tagName":"a","properties":{"href":"https://www.freecodecamp.org/news/jvm-tutorial-java-virtual-machine-architecture-explained-for-beginners/","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"text","value":"https://www.freecodecamp.org/news/jvm-tutorial-java-virtual-machine-architecture-explained-for-beginners/","position":{"start":{"line":170,"column":2,"offset":6496},"end":{"line":170,"column":107,"offset":6601}}}],"position":{"start":{"line":170,"column":1,"offset":6495},"end":{"line":170,"column":215,"offset":6709}}},{"type":"text","value":"\n","position":{"start":{"line":170,"column":215,"offset":6709},"end":{"line":171,"column":1,"offset":6710}}},{"type":"element","tagName":"a","properties":{"href":"https://www.redhat.com/ko/topics/virtualization/what-is-a-hypervisor","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"text","value":"https://www.redhat.com/ko/topics/virtualization/what-is-a-hypervisor","position":{"start":{"line":171,"column":2,"offset":6711},"end":{"line":171,"column":70,"offset":6779}}}],"position":{"start":{"line":171,"column":1,"offset":6710},"end":{"line":171,"column":141,"offset":6850}}},{"type":"text","value":"\n","position":{"start":{"line":171,"column":141,"offset":6850},"end":{"line":172,"column":1,"offset":6851}}},{"type":"element","tagName":"a","properties":{"href":"https://www.redhat.com/ko/topics/virtualization/what-is-a-virtual-machine","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"text","value":"https://www.redhat.com/ko/topics/virtualization/what-is-a-virtual-machine","position":{"start":{"line":172,"column":2,"offset":6852},"end":{"line":172,"column":75,"offset":6925}}}],"position":{"start":{"line":172,"column":1,"offset":6851},"end":{"line":172,"column":151,"offset":7001}}}],"position":{"start":{"line":168,"column":1,"offset":6187},"end":{"line":172,"column":151,"offset":7001}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":172,"column":151,"offset":7001}}}}