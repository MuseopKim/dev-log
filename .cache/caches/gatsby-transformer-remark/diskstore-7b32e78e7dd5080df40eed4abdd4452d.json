{"expireTime":9007200904345361000,"key":"transformer-remark-markdown-ast-93a920f54c0e1a5081f8e832d86f613d-gatsby-remark-imagesgatsby-remark-prismjsgatsby-remark-emojisgatsby-remark-autolink-headersgatsby-remark-katexgatsby-remark-external-linksgatsby-remark-copy-linked-files-","val":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"   JVM(Java Virtual Machine)는 피지컬 머신에서 자바 코드를 컴파일하고 실행하기 위한 Java 생태계에서의 필수 요소라 할 수 있다.","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":87,"offset":87},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":87,"offset":87},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"초기의 JVM은 Java 플랫폼만을 지원하도록 설계 되었지만, 현재는 Kotlin, Groovy, Scala와 같은 다양한 언어를 지원하고 있다. 이렇게 JVM이 지원하는 이들을 통틀어 JVM languages라고도 한다.","position":{"start":{"line":4,"column":1,"offset":89},"end":{"line":4,"column":125,"offset":213},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":89},"end":{"line":4,"column":125,"offset":213},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"link","url":"#jvm-java-virtual-machine","title":null,"children":[],"data":{"hProperties":{"aria-label":"jvm java virtual machine permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"JVM (Java Virtual Machine)","position":{"start":{"line":6,"column":3,"offset":217},"end":{"line":6,"column":29,"offset":243},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":215},"end":{"line":6,"column":29,"offset":243},"indent":[]},"data":{"id":"jvm-java-virtual-machine","htmlAttributes":{"id":"jvm-java-virtual-machine"},"hProperties":{"id":"jvm-java-virtual-machine","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"이름에서 살펴볼 수 있 듯 JVM을 가상 머신(Virtual Machine)이라 부르고 있다. 그렇다면 가상 머신이란 무엇일까?","position":{"start":{"line":8,"column":1,"offset":245},"end":{"line":8,"column":72,"offset":316},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":245},"end":{"line":8,"column":72,"offset":316},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"가상머신이란 하나의 물리적인 하드웨어 위에서 격리되어 구동되는 가상 환경이라 할 수 있다.","position":{"start":{"line":10,"column":1,"offset":318},"end":{"line":10,"column":51,"offset":368},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":318},"end":{"line":10,"column":51,"offset":368},"indent":[]}},{"type":"paragraph","children":[{"type":"linkReference","identifier":"vm 이미지","label":"VM 이미지","referenceType":"shortcut","children":[{"type":"text","value":"VM 이미지","position":{"start":{"line":12,"column":2,"offset":371},"end":{"line":12,"column":8,"offset":377},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":370},"end":{"line":12,"column":9,"offset":378},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":370},"end":{"line":12,"column":9,"offset":378},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"하나의 가상머신은 하이퍼바이저라는 소프트웨어가 설치된 하나의 호스트 머신 위에서 각각 격리되어 CPU, 메모리, 스토리지, 네트워크 인터페이스를 갖추고 있다. 이러한 System Virtual Machine은 격리된 환경에서 기능적으로 OS가 제공하는 모든 기능들을 제공한다.","position":{"start":{"line":14,"column":1,"offset":380},"end":{"line":14,"column":155,"offset":534},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":380},"end":{"line":14,"column":155,"offset":534},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"JVM은 OS로부터 메모리 공간을 할당 받아 해당 메모리를 자체적으로 관리하며, 독립적인 런타임 환경에서 Java 클래스 파일을 실행하는 Process Virtual Machine이라 할 수 있다.","position":{"start":{"line":16,"column":1,"offset":536},"end":{"line":16,"column":111,"offset":646},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":536},"end":{"line":16,"column":111,"offset":646},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"link","url":"#jvm의-구성요소","title":null,"children":[],"data":{"hProperties":{"aria-label":"jvm의 구성요소 permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"JVM의 구성요소","position":{"start":{"line":18,"column":3,"offset":650},"end":{"line":18,"column":12,"offset":659},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":648},"end":{"line":18,"column":12,"offset":659},"indent":[]},"data":{"id":"jvm의-구성요소","htmlAttributes":{"id":"jvm의-구성요소"},"hProperties":{"id":"jvm의-구성요소","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"컴파일 이후 JVM이 Java Application을 실행하는 과정을 간략히 설명하면 다음과 같다.","position":{"start":{"line":20,"column":1,"offset":661},"end":{"line":20,"column":56,"offset":716},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":661},"end":{"line":20,"column":56,"offset":716},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"컴파일 된 class 파일을 ","position":{"start":{"line":22,"column":3,"offset":720},"end":{"line":22,"column":19,"offset":736},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Class Loader</code>","position":{"start":{"line":22,"column":19,"offset":736},"end":{"line":22,"column":33,"offset":750},"indent":[]}},{"type":"text","value":"가 ","position":{"start":{"line":22,"column":33,"offset":750},"end":{"line":22,"column":35,"offset":752},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Runtime Data Area</code>","position":{"start":{"line":22,"column":35,"offset":752},"end":{"line":22,"column":54,"offset":771},"indent":[]}},{"type":"text","value":"에 로드 한 뒤, 적재한 바이트코드를 ","position":{"start":{"line":22,"column":54,"offset":771},"end":{"line":22,"column":75,"offset":792},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Execution Engine</code>","position":{"start":{"line":22,"column":75,"offset":792},"end":{"line":22,"column":93,"offset":810},"indent":[]}},{"type":"text","value":"으로 실행한다. 실행 도 중 Heap 영역에 로드 되었지만 더 이상 참조되지 않는 objects 들을 ","position":{"start":{"line":22,"column":93,"offset":810},"end":{"line":22,"column":150,"offset":867},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Garbage Collector</code>","position":{"start":{"line":22,"column":150,"offset":867},"end":{"line":22,"column":169,"offset":886},"indent":[]}},{"type":"text","value":" 가 정리한다.","position":{"start":{"line":22,"column":169,"offset":886},"end":{"line":22,"column":177,"offset":894},"indent":[]}}],"position":{"start":{"line":22,"column":3,"offset":720},"end":{"line":22,"column":177,"offset":894},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":718},"end":{"line":22,"column":177,"offset":894},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"생략된 것이 많은 매우 간략한 내용이지만, 애플리케이션이 실행된 이후 종료되기까지 앞서 언급한 네 가지 JVM 컴포넌트들이 이런 유기적인 상호작용을 하며 동작한다.","position":{"start":{"line":24,"column":1,"offset":896},"end":{"line":24,"column":92,"offset":987},"indent":[]}}],"position":{"start":{"line":24,"column":1,"offset":896},"end":{"line":24,"column":92,"offset":987},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"JVM의 핵심 컴포넌트들은 다음과 같은 구조를 이룬다.","position":{"start":{"line":26,"column":1,"offset":989},"end":{"line":26,"column":31,"offset":1019},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":989},"end":{"line":26,"column":31,"offset":1019},"indent":[]}},{"type":"paragraph","children":[{"type":"linkReference","identifier":"jvm의 구조 이미지","label":"JVM의 구조 이미지","referenceType":"shortcut","children":[{"type":"text","value":"JVM의 구조 이미지","position":{"start":{"line":28,"column":2,"offset":1022},"end":{"line":28,"column":13,"offset":1033},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":1021},"end":{"line":28,"column":14,"offset":1034},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":1021},"end":{"line":28,"column":14,"offset":1034},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"JVM을 구성하는 핵심 컴포넌트들을 정확하게 이해하는 것이 곧 JVM을 이해하는 것이라 할 수 있다. 이제부터 각 컴포넌트들을 자세히 학습 해보면서 JVM에 대한 이해도를 더욱 높여보고자 한다.","position":{"start":{"line":30,"column":1,"offset":1036},"end":{"line":30,"column":109,"offset":1144},"indent":[]}}],"position":{"start":{"line":30,"column":1,"offset":1036},"end":{"line":30,"column":109,"offset":1144},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#class-loader","title":null,"children":[],"data":{"hProperties":{"aria-label":"class loader permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Class Loader","position":{"start":{"line":32,"column":4,"offset":1149},"end":{"line":32,"column":16,"offset":1161},"indent":[]}}],"position":{"start":{"line":32,"column":1,"offset":1146},"end":{"line":32,"column":16,"offset":1161},"indent":[]},"data":{"id":"class-loader","htmlAttributes":{"id":"class-loader"},"hProperties":{"id":"class-loader","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"클래스 로더는 컴파일 된 바이트 코드(","position":{"start":{"line":34,"column":1,"offset":1163},"end":{"line":34,"column":22,"offset":1184},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">.class</code>","position":{"start":{"line":34,"column":22,"offset":1184},"end":{"line":34,"column":30,"offset":1192},"indent":[]}},{"type":"text","value":" files)들을 ","position":{"start":{"line":34,"column":30,"offset":1192},"end":{"line":34,"column":40,"offset":1202},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Runtime Data Area</code>","position":{"start":{"line":34,"column":40,"offset":1202},"end":{"line":34,"column":59,"offset":1221},"indent":[]}},{"type":"text","value":" 에 로드한다.","position":{"start":{"line":34,"column":59,"offset":1221},"end":{"line":34,"column":67,"offset":1229},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":1163},"end":{"line":34,"column":67,"offset":1229},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"여기서 주의해야 할 것은, 모든 클래스 파일들을 이 시점에 로드하는 것이 아니라는 점이다. JVM의 기본 클래스 로딩 방식은 Lazy loading이다. ","position":{"start":{"line":36,"column":1,"offset":1231},"end":{"line":36,"column":87,"offset":1317},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">main()</code>","position":{"start":{"line":36,"column":87,"offset":1317},"end":{"line":36,"column":95,"offset":1325},"indent":[]}},{"type":"text","value":" 메소드가 위치한 클래스를 로드하고, 실행엔진으로 바이트 코드를 해석하며 필요할 때 마다 각 클래스를 메인 메모리에 적재하고 읽어들인다.","position":{"start":{"line":36,"column":95,"offset":1325},"end":{"line":36,"column":171,"offset":1401},"indent":[]}}],"position":{"start":{"line":36,"column":1,"offset":1231},"end":{"line":36,"column":171,"offset":1401},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"세부 구성을 살펴보면 다음과 같다.","position":{"start":{"line":38,"column":1,"offset":1403},"end":{"line":38,"column":20,"offset":1422},"indent":[]}}],"position":{"start":{"line":38,"column":1,"offset":1403},"end":{"line":38,"column":20,"offset":1422},"indent":[]}},{"type":"paragraph","children":[{"type":"linkReference","identifier":"클래스 로더 이미지","label":"클래스 로더 이미지","referenceType":"shortcut","children":[{"type":"text","value":"클래스 로더 이미지","position":{"start":{"line":40,"column":2,"offset":1425},"end":{"line":40,"column":12,"offset":1435},"indent":[]}}],"position":{"start":{"line":40,"column":1,"offset":1424},"end":{"line":40,"column":13,"offset":1436},"indent":[]}}],"position":{"start":{"line":40,"column":1,"offset":1424},"end":{"line":40,"column":13,"offset":1436},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"클래스 로더의 동작 메커니즘은 크게 ","position":{"start":{"line":42,"column":1,"offset":1438},"end":{"line":42,"column":21,"offset":1458},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Loading</code>","position":{"start":{"line":42,"column":21,"offset":1458},"end":{"line":42,"column":30,"offset":1467},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":42,"column":30,"offset":1467},"end":{"line":42,"column":32,"offset":1469},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Linking</code>","position":{"start":{"line":42,"column":32,"offset":1469},"end":{"line":42,"column":41,"offset":1478},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":42,"column":41,"offset":1478},"end":{"line":42,"column":43,"offset":1480},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Initialization</code>","position":{"start":{"line":42,"column":43,"offset":1480},"end":{"line":42,"column":59,"offset":1496},"indent":[]}},{"type":"text","value":" 세 단계의 절차로 수행된다. 각 과정들을 하나씩 살펴보자","position":{"start":{"line":42,"column":59,"offset":1496},"end":{"line":42,"column":91,"offset":1528},"indent":[]}}],"position":{"start":{"line":42,"column":1,"offset":1438},"end":{"line":42,"column":91,"offset":1528},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#loading","title":null,"children":[],"data":{"hProperties":{"aria-label":"loading permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Loading","position":{"start":{"line":44,"column":5,"offset":1534},"end":{"line":44,"column":12,"offset":1541},"indent":[]}}],"position":{"start":{"line":44,"column":1,"offset":1530},"end":{"line":44,"column":12,"offset":1541},"indent":[]},"data":{"id":"loading","htmlAttributes":{"id":"loading"},"hProperties":{"id":"loading","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"클래스 로더가 바이트 코드를 JVM에 로드하는 과정이다. ","position":{"start":{"line":46,"column":1,"offset":1543},"end":{"line":46,"column":33,"offset":1575},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">java.lang</code>","position":{"start":{"line":46,"column":33,"offset":1575},"end":{"line":46,"column":44,"offset":1586},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":46,"column":44,"offset":1586},"end":{"line":46,"column":46,"offset":1588},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">java.util</code>","position":{"start":{"line":46,"column":46,"offset":1588},"end":{"line":46,"column":57,"offset":1599},"indent":[]}},{"type":"text","value":" 같은 Java의 스탠다드 패키지부터 라이브러리까지 각 바이트 코드마다 담당하는 클래스 로더가 다르다. 내부적으로 JVM이 ","position":{"start":{"line":46,"column":57,"offset":1599},"end":{"line":46,"column":126,"offset":1668},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">ClassLoader.loadClass()</code>","position":{"start":{"line":46,"column":126,"offset":1668},"end":{"line":46,"column":151,"offset":1693},"indent":[]}},{"type":"text","value":" 를 실행하여 메모리에 바이트 코드를 적재한다.","position":{"start":{"line":46,"column":151,"offset":1693},"end":{"line":46,"column":177,"offset":1719},"indent":[]}}],"position":{"start":{"line":46,"column":1,"offset":1543},"end":{"line":46,"column":177,"offset":1719},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Class Loader의 세부적인 계층 구성은 다음과 같다.","position":{"start":{"line":48,"column":1,"offset":1721},"end":{"line":48,"column":34,"offset":1754},"indent":[]}}],"position":{"start":{"line":48,"column":1,"offset":1721},"end":{"line":48,"column":34,"offset":1754},"indent":[]}},{"type":"paragraph","children":[{"type":"linkReference","identifier":"class loader 계층 구성 이미지","label":"Class Loader 계층 구성 이미지","referenceType":"shortcut","children":[{"type":"text","value":"Class Loader 계층 구성 이미지","position":{"start":{"line":50,"column":2,"offset":1757},"end":{"line":50,"column":24,"offset":1779},"indent":[]}}],"position":{"start":{"line":50,"column":1,"offset":1756},"end":{"line":50,"column":25,"offset":1780},"indent":[]}}],"position":{"start":{"line":50,"column":1,"offset":1756},"end":{"line":50,"column":25,"offset":1780},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Boostrap Class Loader","position":{"start":{"line":52,"column":5,"offset":1786},"end":{"line":52,"column":26,"offset":1807},"indent":[]}}],"position":{"start":{"line":52,"column":3,"offset":1784},"end":{"line":52,"column":28,"offset":1809},"indent":[]}},{"type":"text","value":" : 모든 클래스 로더의 루트 레벨로써, ","position":{"start":{"line":52,"column":28,"offset":1809},"end":{"line":52,"column":51,"offset":1832},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">rt.jar</code>","position":{"start":{"line":52,"column":51,"offset":1832},"end":{"line":52,"column":59,"offset":1840},"indent":[]}},{"type":"text","value":" 파일에 위치하는 Java의 스탠다드 패키지들과 ","position":{"start":{"line":52,"column":59,"offset":1840},"end":{"line":52,"column":86,"offset":1867},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">$JAVA_HOME/jre/lib</code>","position":{"start":{"line":52,"column":86,"offset":1867},"end":{"line":52,"column":106,"offset":1887},"indent":[]}},{"type":"text","value":" 에 있는 코어 라이브러리들을 로드한다.","position":{"start":{"line":52,"column":106,"offset":1887},"end":{"line":52,"column":128,"offset":1909},"indent":[]}}],"position":{"start":{"line":52,"column":3,"offset":1784},"end":{"line":52,"column":128,"offset":1909},"indent":[]}}],"position":{"start":{"line":52,"column":1,"offset":1782},"end":{"line":52,"column":128,"offset":1909},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Extention Class Loader :","position":{"start":{"line":53,"column":5,"offset":1914},"end":{"line":53,"column":29,"offset":1938},"indent":[]}}],"position":{"start":{"line":53,"column":3,"offset":1912},"end":{"line":53,"column":31,"offset":1940},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":53,"column":31,"offset":1940},"end":{"line":53,"column":32,"offset":1941},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">$JAVA_HOME/jre/lib/ext</code>","position":{"start":{"line":53,"column":32,"offset":1941},"end":{"line":53,"column":56,"offset":1965},"indent":[]}},{"type":"text","value":" 에 위치하는 extension Java 라이브러리들을 로드한다.","position":{"start":{"line":53,"column":56,"offset":1965},"end":{"line":53,"column":92,"offset":2001},"indent":[]}}],"position":{"start":{"line":53,"column":3,"offset":1912},"end":{"line":53,"column":92,"offset":2001},"indent":[]}}],"position":{"start":{"line":53,"column":1,"offset":1910},"end":{"line":53,"column":92,"offset":2001},"indent":[]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Application Class Loader","position":{"start":{"line":54,"column":5,"offset":2006},"end":{"line":54,"column":29,"offset":2030},"indent":[]}}],"position":{"start":{"line":54,"column":3,"offset":2004},"end":{"line":54,"column":31,"offset":2032},"indent":[]}},{"type":"text","value":" : ","position":{"start":{"line":54,"column":31,"offset":2032},"end":{"line":54,"column":34,"offset":2035},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">classpath</code>","position":{"start":{"line":54,"column":34,"offset":2035},"end":{"line":54,"column":45,"offset":2046},"indent":[]}},{"type":"text","value":" 에 위치한 클래스들을 찾아서 로드한다. 즉, 라이브러리로가 아닌 개발자가 작성한 소스파일로부터 생성된 바이트 코드들을 JVM에 적재한다.","position":{"start":{"line":54,"column":45,"offset":2046},"end":{"line":54,"column":122,"offset":2123},"indent":[]}}],"position":{"start":{"line":54,"column":3,"offset":2004},"end":{"line":54,"column":122,"offset":2123},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"상위 클래스 로더부터 클래스를 하나씩 찾아가는데, 최하단에 있는 클래스 로더까지 해당되는 클래스 파일을 찾지 못하면 ","position":{"start":{"line":56,"column":3,"offset":2127},"end":{"line":56,"column":68,"offset":2192},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">ClassNotFoundException</code>","position":{"start":{"line":56,"column":68,"offset":2192},"end":{"line":56,"column":92,"offset":2216},"indent":[]}},{"type":"text","value":" 예외가 발생한다.","position":{"start":{"line":56,"column":92,"offset":2216},"end":{"line":56,"column":102,"offset":2226},"indent":[]}}],"position":{"start":{"line":56,"column":3,"offset":2127},"end":{"line":56,"column":102,"offset":2226},"indent":[]}}],"position":{"start":{"line":54,"column":1,"offset":2002},"end":{"line":56,"column":102,"offset":2226},"indent":[1,1]}}],"position":{"start":{"line":52,"column":1,"offset":1782},"end":{"line":56,"column":102,"offset":2226},"indent":[1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#linking","title":null,"children":[],"data":{"hProperties":{"aria-label":"linking permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Linking","position":{"start":{"line":58,"column":5,"offset":2232},"end":{"line":58,"column":12,"offset":2239},"indent":[]}}],"position":{"start":{"line":58,"column":1,"offset":2228},"end":{"line":58,"column":12,"offset":2239},"indent":[]},"data":{"id":"linking","htmlAttributes":{"id":"linking"},"hProperties":{"id":"linking","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"클래스 파일이 메모리에 적재 된 이후 의존하는 클래스 파일들을 서로 연결(Link)하고 검증하는 과정이다.","position":{"start":{"line":60,"column":1,"offset":2241},"end":{"line":60,"column":60,"offset":2300},"indent":[]}}],"position":{"start":{"line":60,"column":1,"offset":2241},"end":{"line":60,"column":60,"offset":2300},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Verification","position":{"start":{"line":62,"column":5,"offset":2306},"end":{"line":62,"column":17,"offset":2318},"indent":[]}}],"position":{"start":{"line":62,"column":3,"offset":2304},"end":{"line":62,"column":19,"offset":2320},"indent":[]}},{"type":"text","value":" : ","position":{"start":{"line":62,"column":19,"offset":2320},"end":{"line":62,"column":22,"offset":2323},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":62,"column":22,"offset":2323},"end":{"line":62,"column":24,"offset":2325},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":62,"column":24,"offset":2325},"end":{"line":62,"column":26,"offset":2327},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":62,"column":26,"offset":2327},"end":{"line":62,"column":28,"offset":2329},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":62,"column":28,"offset":2329},"end":{"line":62,"column":30,"offset":2331},"indent":[]}},{"type":"text","value":"클래스 파일의 유효성을 검증한다. 유효하지 않은 클래스 파일의 경우 ","position":{"start":{"line":62,"column":30,"offset":2331},"end":{"line":62,"column":68,"offset":2369},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">VerifyException</code>","position":{"start":{"line":62,"column":68,"offset":2369},"end":{"line":62,"column":85,"offset":2386},"indent":[]}},{"type":"text","value":" 이 발생한다.","position":{"start":{"line":62,"column":85,"offset":2386},"end":{"line":62,"column":93,"offset":2394},"indent":[]}}],"position":{"start":{"line":62,"column":3,"offset":2304},"end":{"line":62,"column":93,"offset":2394},"indent":[]}}],"position":{"start":{"line":62,"column":1,"offset":2302},"end":{"line":62,"column":93,"offset":2394},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Preparation","position":{"start":{"line":63,"column":5,"offset":2399},"end":{"line":63,"column":16,"offset":2410},"indent":[]}}],"position":{"start":{"line":63,"column":3,"offset":2397},"end":{"line":63,"column":18,"offset":2412},"indent":[]}},{"type":"text","value":" : 유효성 검증을 통과한 클래스 파일들에 대하여 static 필드 및 클래스를 기본 값과 함께 초기화한다.","position":{"start":{"line":63,"column":18,"offset":2412},"end":{"line":63,"column":78,"offset":2472},"indent":[]}}],"position":{"start":{"line":63,"column":3,"offset":2397},"end":{"line":63,"column":78,"offset":2472},"indent":[]}}],"position":{"start":{"line":63,"column":1,"offset":2395},"end":{"line":63,"column":78,"offset":2472},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Resolution","position":{"start":{"line":64,"column":5,"offset":2477},"end":{"line":64,"column":15,"offset":2487},"indent":[]}}],"position":{"start":{"line":64,"column":3,"offset":2475},"end":{"line":64,"column":17,"offset":2489},"indent":[]}},{"type":"text","value":" : Symbolic Reference 값들을 클래스, 상수, 메소드 등 Runtime Constant Pool에 있는 실제 메모리 참조 값(Actual Reference)으로 대체한다.","position":{"start":{"line":64,"column":17,"offset":2489},"end":{"line":64,"column":121,"offset":2593},"indent":[]}}],"position":{"start":{"line":64,"column":3,"offset":2475},"end":{"line":64,"column":121,"offset":2593},"indent":[]}}],"position":{"start":{"line":64,"column":1,"offset":2473},"end":{"line":64,"column":121,"offset":2593},"indent":[]}}],"position":{"start":{"line":62,"column":1,"offset":2302},"end":{"line":64,"column":121,"offset":2593},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#initialization","title":null,"children":[],"data":{"hProperties":{"aria-label":"initialization permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"strong","children":[{"type":"text","value":"Initialization","position":{"start":{"line":66,"column":7,"offset":2601},"end":{"line":66,"column":21,"offset":2615},"indent":[]}}],"position":{"start":{"line":66,"column":5,"offset":2599},"end":{"line":66,"column":23,"offset":2617},"indent":[]}}],"position":{"start":{"line":66,"column":1,"offset":2595},"end":{"line":66,"column":23,"offset":2617},"indent":[]},"data":{"id":"initialization","htmlAttributes":{"id":"initialization"},"hProperties":{"id":"initialization","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"constructor, static ","position":{"start":{"line":68,"column":1,"offset":2619},"end":{"line":68,"column":21,"offset":2639},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":68,"column":21,"offset":2639},"end":{"line":68,"column":23,"offset":2641},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":68,"column":23,"offset":2641},"end":{"line":68,"column":25,"offset":2643},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":68,"column":25,"offset":2643},"end":{"line":68,"column":27,"offset":2645},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":68,"column":27,"offset":2645},"end":{"line":68,"column":29,"offset":2647},"indent":[]}},{"type":"text","value":"block 실행 등 초기화 과정이 수행된다. 클래스 로딩의 마지막 과정이라 할 수 있다. JVM은 멀티 쓰레드 환경에서 구동되기 때문에 Initialization 과정에서도 동시성 이슈가 발생할 여지가 있으므로 주의 해야한다.","position":{"start":{"line":68,"column":29,"offset":2647},"end":{"line":68,"column":155,"offset":2773},"indent":[]}}],"position":{"start":{"line":68,"column":1,"offset":2619},"end":{"line":68,"column":155,"offset":2773},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#runtime-data-area","title":null,"children":[],"data":{"hProperties":{"aria-label":"runtime data area permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Runtime Data Area","position":{"start":{"line":70,"column":4,"offset":2778},"end":{"line":70,"column":21,"offset":2795},"indent":[]}}],"position":{"start":{"line":70,"column":1,"offset":2775},"end":{"line":70,"column":21,"offset":2795},"indent":[]},"data":{"id":"runtime-data-area","htmlAttributes":{"id":"runtime-data-area"},"hProperties":{"id":"runtime-data-area","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"앞서 살펴본 것과 같이 클래스 파일들은 Class Loader에 의해 Runtime Data Area에 적재 된다. Runtime Data Area는 5개 영역으로 나뉘어져 있는데, 애플리케이션 실행 도 중 데이터의 타입에 따라 ","position":{"start":{"line":72,"column":1,"offset":2797},"end":{"line":72,"column":129,"offset":2925},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Method Area</code>","position":{"start":{"line":72,"column":129,"offset":2925},"end":{"line":72,"column":142,"offset":2938},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":72,"column":142,"offset":2938},"end":{"line":72,"column":144,"offset":2940},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Heap Area</code>","position":{"start":{"line":72,"column":144,"offset":2940},"end":{"line":72,"column":155,"offset":2951},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":72,"column":155,"offset":2951},"end":{"line":72,"column":157,"offset":2953},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Stack Area</code>","position":{"start":{"line":72,"column":157,"offset":2953},"end":{"line":72,"column":169,"offset":2965},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":72,"column":169,"offset":2965},"end":{"line":72,"column":171,"offset":2967},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">PC Register</code>","position":{"start":{"line":72,"column":171,"offset":2967},"end":{"line":72,"column":184,"offset":2980},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":72,"column":184,"offset":2980},"end":{"line":72,"column":186,"offset":2982},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Native Method Stack</code>","position":{"start":{"line":72,"column":186,"offset":2982},"end":{"line":72,"column":207,"offset":3003},"indent":[]}},{"type":"text","value":" 영역에 저장되고 참조된다.","position":{"start":{"line":72,"column":207,"offset":3003},"end":{"line":72,"column":222,"offset":3018},"indent":[]}}],"position":{"start":{"line":72,"column":1,"offset":2797},"end":{"line":72,"column":222,"offset":3018},"indent":[]}},{"type":"paragraph","children":[{"type":"linkReference","identifier":"이미지","label":"이미지","referenceType":"shortcut","children":[{"type":"text","value":"이미지","position":{"start":{"line":74,"column":2,"offset":3021},"end":{"line":74,"column":5,"offset":3024},"indent":[]}}],"position":{"start":{"line":74,"column":1,"offset":3020},"end":{"line":74,"column":6,"offset":3025},"indent":[]}}],"position":{"start":{"line":74,"column":1,"offset":3020},"end":{"line":74,"column":6,"offset":3025},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#method-area","title":null,"children":[],"data":{"hProperties":{"aria-label":"method area permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Method Area","position":{"start":{"line":76,"column":5,"offset":3031},"end":{"line":76,"column":16,"offset":3042},"indent":[]}}],"position":{"start":{"line":76,"column":1,"offset":3027},"end":{"line":76,"column":16,"offset":3042},"indent":[]},"data":{"id":"method-area","htmlAttributes":{"id":"method-area"},"hProperties":{"id":"method-area","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"실행 시점에 사용되는 Constant Pool, field, method, constructors 같은 데이터들이 위치한다. 만약 가용 공간이 부족하다면 ","position":{"start":{"line":78,"column":1,"offset":3044},"end":{"line":78,"column":87,"offset":3130},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">OutOfMemorryError</code>","position":{"start":{"line":78,"column":87,"offset":3130},"end":{"line":78,"column":106,"offset":3149},"indent":[]}},{"type":"text","value":" 가 발생한다. JVM 당 하나의 ","position":{"start":{"line":78,"column":106,"offset":3149},"end":{"line":78,"column":125,"offset":3168},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Method Area</code>","position":{"start":{"line":78,"column":125,"offset":3168},"end":{"line":78,"column":138,"offset":3181},"indent":[]}},{"type":"text","value":" 를 가진다.","position":{"start":{"line":78,"column":138,"offset":3181},"end":{"line":78,"column":145,"offset":3188},"indent":[]}}],"position":{"start":{"line":78,"column":1,"offset":3044},"end":{"line":78,"column":145,"offset":3188},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#heap-area","title":null,"children":[],"data":{"hProperties":{"aria-label":"heap area permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Heap Area","position":{"start":{"line":80,"column":5,"offset":3194},"end":{"line":80,"column":14,"offset":3203},"indent":[]}}],"position":{"start":{"line":80,"column":1,"offset":3190},"end":{"line":80,"column":14,"offset":3203},"indent":[]},"data":{"id":"heap-area","htmlAttributes":{"id":"heap-area"},"hProperties":{"id":"heap-area","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"객체 및 인스턴스 변수, 배열 등과 같은 타입의 값들이 위치한다.","position":{"start":{"line":82,"column":1,"offset":3205},"end":{"line":82,"column":37,"offset":3241},"indent":[]}}],"position":{"start":{"line":82,"column":1,"offset":3205},"end":{"line":82,"column":37,"offset":3241},"indent":[]}},{"type":"html","lang":"java","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">Example</span> example <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Example</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":84,"column":1,"offset":3243},"end":{"line":86,"column":4,"offset":3287},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"예를 들어 위와 같은 코드를 동작 시키면 ","position":{"start":{"line":88,"column":1,"offset":3289},"end":{"line":88,"column":24,"offset":3312},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Example</code>","position":{"start":{"line":88,"column":24,"offset":3312},"end":{"line":88,"column":33,"offset":3321},"indent":[]}},{"type":"text","value":" 인스턴스를 생성한 뒤 Heap Area에 배치한다. 메소드 영역과 마찬가지로 힙 영역 역시 JVM 당 하나의 공간만을 갖게 된다.","position":{"start":{"line":88,"column":33,"offset":3321},"end":{"line":88,"column":106,"offset":3394},"indent":[]}}],"position":{"start":{"line":88,"column":1,"offset":3289},"end":{"line":88,"column":106,"offset":3394},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#stack-area","title":null,"children":[],"data":{"hProperties":{"aria-label":"stack area permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Stack Area","position":{"start":{"line":90,"column":5,"offset":3400},"end":{"line":90,"column":15,"offset":3410},"indent":[]}}],"position":{"start":{"line":90,"column":1,"offset":3396},"end":{"line":90,"column":15,"offset":3410},"indent":[]},"data":{"id":"stack-area","htmlAttributes":{"id":"stack-area"},"hProperties":{"id":"stack-area","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"특정 메소드가 호출 되고 실행되면서 사용되는 지역 변수(Local Variables), 중간 연산 결과(Operand Stack) 값이 갱신되며 저장되는 영역이다. 메소드 호출 시점마다 ","position":{"start":{"line":92,"column":1,"offset":3412},"end":{"line":92,"column":105,"offset":3516},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Stack Frame</code>","position":{"start":{"line":92,"column":105,"offset":3516},"end":{"line":92,"column":118,"offset":3529},"indent":[]}},{"type":"text","value":"이라는 하나의 단위가 스택에 생성되고, 해당 메소드가 종료되는 시점에 파괴된다.","position":{"start":{"line":92,"column":118,"offset":3529},"end":{"line":92,"column":162,"offset":3573},"indent":[]}}],"position":{"start":{"line":92,"column":1,"offset":3412},"end":{"line":92,"column":162,"offset":3573},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"스택 영역은 JVM에 의해 쓰레드가 생성될 때 마다 각 쓰레드에 하나씩 할당된다. 따라서 동시성 문제로부터 자유롭다.","position":{"start":{"line":94,"column":1,"offset":3575},"end":{"line":94,"column":66,"offset":3640},"indent":[]}}],"position":{"start":{"line":94,"column":1,"offset":3575},"end":{"line":94,"column":66,"offset":3640},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#program-counter-pc-registers","title":null,"children":[],"data":{"hProperties":{"aria-label":"program counter pc registers permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Program Counter (PC) Registers","position":{"start":{"line":96,"column":5,"offset":3646},"end":{"line":96,"column":35,"offset":3676},"indent":[]}}],"position":{"start":{"line":96,"column":1,"offset":3642},"end":{"line":96,"column":35,"offset":3676},"indent":[]},"data":{"id":"program-counter-pc-registers","htmlAttributes":{"id":"program-counter-pc-registers"},"hProperties":{"id":"program-counter-pc-registers","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"현재 실행되고 있는 명령어의 주소 값이 저장되는 공간이다. PC Register는 현재 실행하고 있는 명령어의 실행이 끝나면 다음 명령어의 주소 값을 갱신한다. 각 쓰레드 마다 하나의 PC Register가 할당된다.","position":{"start":{"line":98,"column":1,"offset":3678},"end":{"line":98,"column":122,"offset":3799},"indent":[]}}],"position":{"start":{"line":98,"column":1,"offset":3678},"end":{"line":98,"column":122,"offset":3799},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#native-method-stacks","title":null,"children":[],"data":{"hProperties":{"aria-label":"native method stacks permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Native Method Stacks","position":{"start":{"line":100,"column":5,"offset":3805},"end":{"line":100,"column":25,"offset":3825},"indent":[]}}],"position":{"start":{"line":100,"column":1,"offset":3801},"end":{"line":100,"column":25,"offset":3825},"indent":[]},"data":{"id":"native-method-stacks","htmlAttributes":{"id":"native-method-stacks"},"hProperties":{"id":"native-method-stacks","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"Java가 아닌 C, C++과 같은 언어로 작성 된 메소드(Native Method) 실행을 지원하는 영역. 스택 영역과 같이 각 쓰레드마다 하나의 공간이 할당된다.","position":{"start":{"line":102,"column":1,"offset":3827},"end":{"line":102,"column":93,"offset":3919},"indent":[]}}],"position":{"start":{"line":102,"column":1,"offset":3827},"end":{"line":102,"column":93,"offset":3919},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#execution-engine","title":null,"children":[],"data":{"hProperties":{"aria-label":"execution engine permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Execution Engine","position":{"start":{"line":104,"column":4,"offset":3924},"end":{"line":104,"column":20,"offset":3940},"indent":[]}}],"position":{"start":{"line":104,"column":1,"offset":3921},"end":{"line":104,"column":20,"offset":3940},"indent":[]},"data":{"id":"execution-engine","htmlAttributes":{"id":"execution-engine"},"hProperties":{"id":"execution-engine","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"linkReference","identifier":"이미지","label":"이미지","referenceType":"shortcut","children":[{"type":"text","value":"이미지","position":{"start":{"line":106,"column":2,"offset":3943},"end":{"line":106,"column":5,"offset":3946},"indent":[]}}],"position":{"start":{"line":106,"column":1,"offset":3942},"end":{"line":106,"column":6,"offset":3947},"indent":[]}}],"position":{"start":{"line":106,"column":1,"offset":3942},"end":{"line":106,"column":6,"offset":3947},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Runtime Data Area에 각 바이트코드가 로드되면 ","position":{"start":{"line":108,"column":1,"offset":3949},"end":{"line":108,"column":34,"offset":3982},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Execution Engine</code>","position":{"start":{"line":108,"column":34,"offset":3982},"end":{"line":108,"column":52,"offset":4000},"indent":[]}},{"type":"text","value":"이 이들을 실행하는데, Java compiler에 의해 생성된 클래스 파일들은 머신이 읽을 수 있는 기계어가 아닌 바이트 코드이다. 따라서 이를 한번 더 변환하는 과정이 필요하다.","position":{"start":{"line":108,"column":52,"offset":4000},"end":{"line":108,"column":152,"offset":4100},"indent":[]}}],"position":{"start":{"line":108,"column":1,"offset":3949},"end":{"line":108,"column":152,"offset":4100},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"JVM은 효율성을 위해 두 가지 방법을 혼합하여 이를 실현한다. 기본 전략으로는 JavaScript, Python와 같은 언어 처럼 ","position":{"start":{"line":110,"column":1,"offset":4102},"end":{"line":110,"column":75,"offset":4176},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Interpreter</code>","position":{"start":{"line":110,"column":75,"offset":4176},"end":{"line":110,"column":88,"offset":4189},"indent":[]}},{"type":"text","value":"가 한 라인씩 바이트 코드를 해석하는 방식을 사용하고, 만약 반복되는 바이트 코드가 발견되면 ","position":{"start":{"line":110,"column":88,"offset":4189},"end":{"line":110,"column":140,"offset":4241},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">JIT Compiler</code>","position":{"start":{"line":110,"column":140,"offset":4241},"end":{"line":110,"column":154,"offset":4255},"indent":[]}},{"type":"text","value":" 를 통해 이들을 한번에 변환하기도 한다.","position":{"start":{"line":110,"column":154,"offset":4255},"end":{"line":110,"column":177,"offset":4278},"indent":[]}}],"position":{"start":{"line":110,"column":1,"offset":4102},"end":{"line":110,"column":177,"offset":4278},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#interpreter","title":null,"children":[],"data":{"hProperties":{"aria-label":"interpreter permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Interpreter","position":{"start":{"line":112,"column":5,"offset":4284},"end":{"line":112,"column":16,"offset":4295},"indent":[]}}],"position":{"start":{"line":112,"column":1,"offset":4280},"end":{"line":112,"column":16,"offset":4295},"indent":[]},"data":{"id":"interpreter","htmlAttributes":{"id":"interpreter"},"hProperties":{"id":"interpreter","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"바이트 코드를 한 줄씩 읽고 실행한다. 매 라인마다 이러한 동작을 반복하기 때문에, 코드 구성에 따라 통으로 컴파일하는 방식 보다 느릴 수 있다.","position":{"start":{"line":114,"column":1,"offset":4297},"end":{"line":114,"column":82,"offset":4378},"indent":[]}}],"position":{"start":{"line":114,"column":1,"offset":4297},"end":{"line":114,"column":82,"offset":4378},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"아래처럼 값을 누적하는 코드와 같이, 같은 메소드의 반복이 자주 등장하는 코드의 경우 이를 통으로 변환하는 것이 더 유리할 수 있다.","position":{"start":{"line":116,"column":1,"offset":4380},"end":{"line":116,"column":75,"offset":4454},"indent":[]}}],"position":{"start":{"line":116,"column":1,"offset":4380},"end":{"line":116,"column":75,"offset":4454},"indent":[]}},{"type":"html","lang":"java","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">int</span> total <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   total <span class=\"token operator\">+=</span> i<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":118,"column":1,"offset":4456},"end":{"line":123,"column":4,"offset":4531},"indent":[1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#jit-compiler","title":null,"children":[],"data":{"hProperties":{"aria-label":"jit compiler permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"JIT Compiler","position":{"start":{"line":125,"column":5,"offset":4537},"end":{"line":125,"column":17,"offset":4549},"indent":[]}}],"position":{"start":{"line":125,"column":1,"offset":4533},"end":{"line":125,"column":17,"offset":4549},"indent":[]},"data":{"id":"jit-compiler","htmlAttributes":{"id":"jit-compiler"},"hProperties":{"id":"jit-compiler","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"앞서 설명한 것과 같이, 반복되는 코드가 빈번한 경우, 인터프리터 방식이 성능상 비효율적일 수 있다. 실행 엔진은 ","position":{"start":{"line":127,"column":1,"offset":4551},"end":{"line":127,"column":65,"offset":4615},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">JIT Compiler</code>","position":{"start":{"line":127,"column":65,"offset":4615},"end":{"line":127,"column":79,"offset":4629},"indent":[]}},{"type":"text","value":" 를 통해 이를 해결한다.","position":{"start":{"line":127,"column":79,"offset":4629},"end":{"line":127,"column":93,"offset":4643},"indent":[]}}],"position":{"start":{"line":127,"column":1,"offset":4551},"end":{"line":127,"column":93,"offset":4643},"indent":[]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">Profiler</code>","position":{"start":{"line":129,"column":1,"offset":4645},"end":{"line":129,"column":11,"offset":4655},"indent":[]}},{"type":"text","value":"를 통해 반복되는 코드(hotspot)를 발견하면 JIT Compiler는 이를 네이티브 머신 코드로 한번에 컴파일한다. 변환된 코드는 시스템에 의해 한번에 읽히게 되므로 성능이 향상된다.","position":{"start":{"line":129,"column":11,"offset":4655},"end":{"line":129,"column":116,"offset":4760},"indent":[]}}],"position":{"start":{"line":129,"column":1,"offset":4645},"end":{"line":129,"column":116,"offset":4760},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#garbage-collector","title":null,"children":[],"data":{"hProperties":{"aria-label":"garbage collector permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Garbage Collector","position":{"start":{"line":131,"column":4,"offset":4765},"end":{"line":131,"column":21,"offset":4782},"indent":[]}}],"position":{"start":{"line":131,"column":1,"offset":4762},"end":{"line":131,"column":21,"offset":4782},"indent":[]},"data":{"id":"garbage-collector","htmlAttributes":{"id":"garbage-collector"},"hProperties":{"id":"garbage-collector","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">Garbage Collector</code>","position":{"start":{"line":133,"column":1,"offset":4784},"end":{"line":133,"column":20,"offset":4803},"indent":[]}},{"type":"text","value":" 는 Heap Area에 로드 되었지만 현재는 참조 되고 있지 않는 오브젝트들을 찾아서 지우고, 사용되지 않는 메모리 공간을 다시 회수한다.","position":{"start":{"line":133,"column":20,"offset":4803},"end":{"line":133,"column":98,"offset":4881},"indent":[]}}],"position":{"start":{"line":133,"column":1,"offset":4784},"end":{"line":133,"column":98,"offset":4881},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"이는 다음의 두 과정을 거친다.","position":{"start":{"line":135,"column":1,"offset":4883},"end":{"line":135,"column":18,"offset":4900},"indent":[]}}],"position":{"start":{"line":135,"column":1,"offset":4883},"end":{"line":135,"column":18,"offset":4900},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Mark","position":{"start":{"line":137,"column":6,"offset":4907},"end":{"line":137,"column":10,"offset":4911},"indent":[]}}],"position":{"start":{"line":137,"column":4,"offset":4905},"end":{"line":137,"column":12,"offset":4913},"indent":[]}},{"type":"text","value":" : GC가 참조되지 않는 오브젝트들을 찾아서 mark한다.","position":{"start":{"line":137,"column":12,"offset":4913},"end":{"line":137,"column":45,"offset":4946},"indent":[]}}],"position":{"start":{"line":137,"column":4,"offset":4905},"end":{"line":137,"column":45,"offset":4946},"indent":[]}}],"position":{"start":{"line":137,"column":1,"offset":4902},"end":{"line":137,"column":45,"offset":4946},"indent":[]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Sweep","position":{"start":{"line":138,"column":6,"offset":4952},"end":{"line":138,"column":11,"offset":4957},"indent":[]}}],"position":{"start":{"line":138,"column":4,"offset":4950},"end":{"line":138,"column":13,"offset":4959},"indent":[]}},{"type":"text","value":" : GC가 mark 된 오브젝트들을 힙 메모리로부터 정리한다.","position":{"start":{"line":138,"column":13,"offset":4959},"end":{"line":138,"column":48,"offset":4994},"indent":[]}}],"position":{"start":{"line":138,"column":4,"offset":4950},"end":{"line":138,"column":48,"offset":4994},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"GC는 JVM에 의해 텀을 두고 자동으로 동작한다. ","position":{"start":{"line":140,"column":4,"offset":4999},"end":{"line":140,"column":33,"offset":5028},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">System.gc()</code>","position":{"start":{"line":140,"column":33,"offset":5028},"end":{"line":140,"column":46,"offset":5041},"indent":[]}},{"type":"text","value":" 를 통해 명시적으로 호출하는 방법도 있지만 이는 즉시 동작을 보장하진 않는다. 또한 JVM은 GC를 수행할 때, 이를 실행하는 쓰레드 이외에는 작업을 중단(","position":{"start":{"line":140,"column":46,"offset":5041},"end":{"line":140,"column":134,"offset":5129},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Stop The World</code>","position":{"start":{"line":140,"column":134,"offset":5129},"end":{"line":140,"column":150,"offset":5145},"indent":[]}},{"type":"text","value":")하게 되므로 명시적인 호출은 지양해야 한다.","position":{"start":{"line":140,"column":150,"offset":5145},"end":{"line":140,"column":175,"offset":5170},"indent":[]}}],"position":{"start":{"line":140,"column":4,"offset":4999},"end":{"line":140,"column":175,"offset":5170},"indent":[]}}],"position":{"start":{"line":138,"column":1,"offset":4947},"end":{"line":140,"column":175,"offset":5170},"indent":[1,1]}}],"position":{"start":{"line":137,"column":1,"offset":4902},"end":{"line":140,"column":175,"offset":5170},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"(GC는 그 자체로 하나의 아티클로 다루어야 할 규모의 주제라 생각한다. 추후 별도의 학습 포스트로 다뤄 볼 예정이므로, 이번 포스트에서는 대표적인 몇 가지 GC만 가볍게 살펴보고 넘어가려 한다.)","position":{"start":{"line":142,"column":1,"offset":5172},"end":{"line":142,"column":111,"offset":5282},"indent":[]}}],"position":{"start":{"line":142,"column":1,"offset":5172},"end":{"line":142,"column":111,"offset":5282},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#serial-gc","title":null,"children":[],"data":{"hProperties":{"aria-label":"serial gc permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Serial GC","position":{"start":{"line":144,"column":5,"offset":5288},"end":{"line":144,"column":14,"offset":5297},"indent":[]}}],"position":{"start":{"line":144,"column":1,"offset":5284},"end":{"line":144,"column":14,"offset":5297},"indent":[]},"data":{"id":"serial-gc","htmlAttributes":{"id":"serial-gc"},"hProperties":{"id":"serial-gc","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"싱글 쓰레드 환경의 작은 애플리케이션에서 동작하는 가장 단순한 방식의 GC 구현체이다. 싱글 쓰레드 환경에만 적합한 GC이기 때문에 GC가 동작할 때 애플리케이션 전체가 중지(","position":{"start":{"line":146,"column":1,"offset":5299},"end":{"line":146,"column":99,"offset":5397},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Stop The World</code>","position":{"start":{"line":146,"column":99,"offset":5397},"end":{"line":146,"column":115,"offset":5413},"indent":[]}},{"type":"text","value":") 된다.","position":{"start":{"line":146,"column":115,"offset":5413},"end":{"line":146,"column":120,"offset":5418},"indent":[]}}],"position":{"start":{"line":146,"column":1,"offset":5299},"end":{"line":146,"column":120,"offset":5418},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#parallel-gc","title":null,"children":[],"data":{"hProperties":{"aria-label":"parallel gc permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Parallel GC","position":{"start":{"line":148,"column":5,"offset":5424},"end":{"line":148,"column":16,"offset":5435},"indent":[]}}],"position":{"start":{"line":148,"column":1,"offset":5420},"end":{"line":148,"column":16,"offset":5435},"indent":[]},"data":{"id":"parallel-gc","htmlAttributes":{"id":"parallel-gc"},"hProperties":{"id":"parallel-gc","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"JVM의 Java 8의 default GC 구현체이며, 다중 쓰레드 환경을 지원한다. ","position":{"start":{"line":150,"column":1,"offset":5437},"end":{"line":150,"column":49,"offset":5485},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Serial GC</code>","position":{"start":{"line":150,"column":49,"offset":5485},"end":{"line":150,"column":60,"offset":5496},"indent":[]}},{"type":"text","value":" 보다 빠른 퍼포먼스를 보여준다.","position":{"start":{"line":150,"column":60,"offset":5496},"end":{"line":150,"column":78,"offset":5514},"indent":[]}}],"position":{"start":{"line":150,"column":1,"offset":5437},"end":{"line":150,"column":78,"offset":5514},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#garbage-first-gc-g1-gc","title":null,"children":[],"data":{"hProperties":{"aria-label":"garbage first gc g1 gc permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Garbage First GC (G1 GC)","position":{"start":{"line":152,"column":5,"offset":5520},"end":{"line":152,"column":29,"offset":5544},"indent":[]}}],"position":{"start":{"line":152,"column":1,"offset":5516},"end":{"line":152,"column":29,"offset":5544},"indent":[]},"data":{"id":"garbage-first-gc-g1-gc","htmlAttributes":{"id":"garbage-first-gc-g1-gc"},"hProperties":{"id":"garbage-first-gc-g1-gc","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"멀티 프로세스 환경을 지원하기 위해 개발 된 GC 구현체이며, 대용량 메모리 운용이 가능하다. ","position":{"start":{"line":154,"column":1,"offset":5546},"end":{"line":154,"column":54,"offset":5599},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Stop The World</code>","position":{"start":{"line":154,"column":54,"offset":5599},"end":{"line":154,"column":70,"offset":5615},"indent":[]}},{"type":"text","value":" 시간을 최소화 하였지만, 이를 완전 해결하지는 못했다. Java 9부터 default GC 구현체이다.","position":{"start":{"line":154,"column":70,"offset":5615},"end":{"line":154,"column":128,"offset":5673},"indent":[]}}],"position":{"start":{"line":154,"column":1,"offset":5546},"end":{"line":154,"column":128,"offset":5673},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#java-native-interface-jni","title":null,"children":[],"data":{"hProperties":{"aria-label":"java native interface jni permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Java Native Interface (JNI)","position":{"start":{"line":156,"column":4,"offset":5678},"end":{"line":156,"column":31,"offset":5705},"indent":[]}}],"position":{"start":{"line":156,"column":1,"offset":5675},"end":{"line":156,"column":31,"offset":5705},"indent":[]},"data":{"id":"java-native-interface-jni","htmlAttributes":{"id":"java-native-interface-jni"},"hProperties":{"id":"java-native-interface-jni","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">Runtime Data Area</code>","position":{"start":{"line":158,"column":1,"offset":5707},"end":{"line":158,"column":20,"offset":5726},"indent":[]}},{"type":"text","value":" 를 다루며 ","position":{"start":{"line":158,"column":20,"offset":5726},"end":{"line":158,"column":27,"offset":5733},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Native Method Stacks</code>","position":{"start":{"line":158,"column":27,"offset":5733},"end":{"line":158,"column":49,"offset":5755},"indent":[]}},{"type":"text","value":" 에 대해 간단히 알아보았다.\nJNI 역시 Java가 아닌 네이티브 코드를 사용하여 OS 혹은 하드웨어를 컨트롤하는 프로그램 혹은 라이브러리의 사용을 가능케한다.","position":{"start":{"line":158,"column":49,"offset":5755},"end":{"line":159,"column":74,"offset":5845},"indent":[1]}}],"position":{"start":{"line":158,"column":1,"offset":5707},"end":{"line":159,"column":74,"offset":5845},"indent":[1]}},{"type":"html","value":"<br/>","position":{"start":{"line":161,"column":1,"offset":5847},"end":{"line":161,"column":6,"offset":5852},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#references","title":null,"children":[],"data":{"hProperties":{"aria-label":"references permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"References:","position":{"start":{"line":163,"column":5,"offset":5858},"end":{"line":163,"column":16,"offset":5869},"indent":[]}}],"position":{"start":{"line":163,"column":1,"offset":5854},"end":{"line":163,"column":16,"offset":5869},"indent":[]},"data":{"id":"references","htmlAttributes":{"id":"references"},"hProperties":{"id":"references","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://www.infoworld.com/article/3272244/what-is-the-jvm-introducing-the-java-virtual-machine.html","children":[{"type":"text","value":"https://www.infoworld.com/article/3272244/what-is-the-jvm-introducing-the-java-virtual-machine.html","position":{"start":{"line":165,"column":2,"offset":5872},"end":{"line":165,"column":101,"offset":5971},"indent":[]}}],"position":{"start":{"line":165,"column":1,"offset":5871},"end":{"line":165,"column":203,"offset":6073},"indent":[]},"data":{"hProperties":{"target":"_blank","rel":"nofollow noopener noreferrer"}}},{"type":"text","value":"\n","position":{"start":{"line":165,"column":203,"offset":6073},"end":{"line":166,"column":1,"offset":6074},"indent":[1]}},{"type":"link","title":null,"url":"https://en.wikipedia.org/wiki/Java_virtual_machine","children":[{"type":"text","value":"https://en.wikipedia.org/wiki/Java","position":{"start":{"line":166,"column":2,"offset":6075},"end":{"line":166,"column":36,"offset":6109},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"virtual","position":{"start":{"line":166,"column":37,"offset":6110},"end":{"line":166,"column":44,"offset":6117},"indent":[]}}],"position":{"start":{"line":166,"column":36,"offset":6109},"end":{"line":166,"column":45,"offset":6118},"indent":[]}},{"type":"text","value":"machine","position":{"start":{"line":166,"column":45,"offset":6118},"end":{"line":166,"column":52,"offset":6125},"indent":[]}}],"position":{"start":{"line":166,"column":1,"offset":6074},"end":{"line":166,"column":105,"offset":6178},"indent":[]},"data":{"hProperties":{"target":"_blank","rel":"nofollow noopener noreferrer"}}},{"type":"text","value":"\n","position":{"start":{"line":166,"column":105,"offset":6178},"end":{"line":167,"column":1,"offset":6179},"indent":[1]}},{"type":"link","title":null,"url":"https://www.freecodecamp.org/news/jvm-tutorial-java-virtual-machine-architecture-explained-for-beginners/","children":[{"type":"text","value":"https://www.freecodecamp.org/news/jvm-tutorial-java-virtual-machine-architecture-explained-for-beginners/","position":{"start":{"line":167,"column":2,"offset":6180},"end":{"line":167,"column":107,"offset":6285},"indent":[]}}],"position":{"start":{"line":167,"column":1,"offset":6179},"end":{"line":167,"column":215,"offset":6393},"indent":[]},"data":{"hProperties":{"target":"_blank","rel":"nofollow noopener noreferrer"}}},{"type":"text","value":"\n","position":{"start":{"line":167,"column":215,"offset":6393},"end":{"line":168,"column":1,"offset":6394},"indent":[1]}},{"type":"link","title":null,"url":"https://www.redhat.com/ko/topics/virtualization/what-is-a-hypervisor","children":[{"type":"text","value":"https://www.redhat.com/ko/topics/virtualization/what-is-a-hypervisor","position":{"start":{"line":168,"column":2,"offset":6395},"end":{"line":168,"column":70,"offset":6463},"indent":[]}}],"position":{"start":{"line":168,"column":1,"offset":6394},"end":{"line":168,"column":141,"offset":6534},"indent":[]},"data":{"hProperties":{"target":"_blank","rel":"nofollow noopener noreferrer"}}},{"type":"text","value":"\n","position":{"start":{"line":168,"column":141,"offset":6534},"end":{"line":169,"column":1,"offset":6535},"indent":[1]}},{"type":"link","title":null,"url":"https://www.redhat.com/ko/topics/virtualization/what-is-a-virtual-machine","children":[{"type":"text","value":"https://www.redhat.com/ko/topics/virtualization/what-is-a-virtual-machine","position":{"start":{"line":169,"column":2,"offset":6536},"end":{"line":169,"column":75,"offset":6609},"indent":[]}}],"position":{"start":{"line":169,"column":1,"offset":6535},"end":{"line":169,"column":151,"offset":6685},"indent":[]},"data":{"hProperties":{"target":"_blank","rel":"nofollow noopener noreferrer"}}}],"position":{"start":{"line":165,"column":1,"offset":5871},"end":{"line":169,"column":151,"offset":6685},"indent":[1,1,1,1]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":170,"column":1,"offset":6686}}}}